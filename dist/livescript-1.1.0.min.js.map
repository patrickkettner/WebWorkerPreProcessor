{"version":3,"sources":["webpack:///webpack/bootstrap 2920cb0d6372270dee53","webpack:////Users/pdk/projects/WebWorkerPreProcessor/~/process/browser.js","webpack:///./lib/livescript.js","webpack:///./lib/ast.js","webpack:///./lib/lexer.js","webpack:///./lib/parser.js","webpack:////Users/pdk/projects/WebWorkerPreProcessor/~/events/events.js","webpack:////Users/pdk/projects/WebWorkerPreProcessor/~/path-browserify/index.js","webpack:///./lib/node.js","webpack:////Users/pdk/projects/WebWorkerPreProcessor/src/livescript.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC9DA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;ACnLtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;AC9DA,4aAA4a;AAC5a;AACA;AACA,CAAC;AACD;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,eAAe,iCAAiC;AAChD,KAAK;AACL,gBAAgB;AAChB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,sDAAsD,WAAW;AACjE;AACA;AACA;AACA,4CAA4C,YAAY;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB;AAChoCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB,aAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iCAAiC,mBAAmB;AAChF;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtmDAAmD,WAAW;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,6CAA6C,uEAAuE,sGAAsG,cAAc,qEAAqE;AACxV;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,YAAY;AACxD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,sCAAsC,WAAW;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,yCAAyC;AACtD;AACA,wBAAwB;AACxB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,WAAW;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtrC;AACA;AACA;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtqCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,WAAW;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,WAAW;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,oCAAoC,+DAA+D;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,KAAK;AACL,kCAAkC,6BAA6B;AAC/D;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uBAAuB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,yDAAyD,WAAW;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,WAAW;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8CAA8C;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,WAAW;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA,yGAAyG;AACzG;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA,uFAAuF;AACvF;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,mGAAmG,WAAW;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,+CAA+C;AAC/C,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB,6BAA6B;AAC7C;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kIAAkI;AAClI,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,gBAAgB;AAChB;AACA;AACA;AACA,2FAA2F;AAC3F;AACA;AACA,wGAAwG;AACxG;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,WAAW;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,mDAAmD,WAAW;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA;AACA;AACA,yDAAyD,YAAY;AACrE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,WAAW;AACvE;AACA;AACA;AACA;AACA,OAAO,oBAAoB;AAC3B,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,mBAAmB;AACtB;AACA;AACA;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB,oBAAoB,mBAAmB,GAAG;AACrF,8BAA8B,oBAAoB,kDAAkD,gDAAgD,+DAA+D,eAAe,GAAG;AACrO,oCAAoC,sBAAsB,qDAAqD,GAAG;AAClH,gCAAgC,gBAAgB,gBAAgB,qEAAqE,eAAe,GAAG;AACvJ,iCAAiC,6CAA6C,eAAe,GAAG;AAChG,kCAAkC,sBAAsB,OAAO,gDAAgD,aAAa,GAAG;AAC/H,iCAAiC,oBAAoB,OAAO,4EAA4E,aAAa,GAAG;AACxJ,0BAA0B,qCAAqC,8DAA8D,iBAAiB,GAAG;AACjJ;AACA,4BAA4B,qCAAqC,6CAA6C,+IAA+I,KAAK,KAAK,GAAG;AAC1Q,yBAAyB,sBAAsB,8BAA8B,yBAAyB,OAAO,OAAO,oCAAoC,EAAE,qBAAqB,MAAM,GAAG;AACxL,qBAAqB,mCAAmC,gBAAgB,EAAE,EAAE,GAAG;AAC/E,wCAAwC,sBAAsB,2KAA2K,gBAAgB,SAAS,OAAO,uBAAuB,YAAY,EAAE,4EAA4E,MAAM,GAAG;AACnY,oBAAoB,WAAW,EAAE;AACjC,gCAAgC,qBAAqB,8BAA8B,mDAAmD,sCAAsC,GAAG,iBAAiB,wBAAwB,8BAA8B,gFAAgF,mCAAmC,gBAAgB,EAAE,mDAAmD,aAAa,EAAE,oBAAoB,kCAAkC,EAAE,mCAAmC,0CAA0C,cAAc,EAAE,0BAA0B,wDAAwD,0GAA0G,2FAA2F,6MAA6M,OAAO,6DAA6D,cAAc,EAAE,4BAA4B,wBAAwB,0BAA0B,aAAa,EAAE,EAAE,oBAAoB,eAAe,oBAAoB,4CAA4C,2BAA2B,2BAA2B,oBAAoB,0BAA0B,qDAAqD,OAAO,oDAAoD,OAAO,mDAAmD,OAAO,WAAW,yBAAyB,wBAAwB,SAAS,OAAO,uCAAuC,yBAAyB,SAAS,qBAAqB,0BAA0B,mFAAmF,OAAO,EAAE,WAAW,SAAS,OAAO,OAAO,6FAA6F,uBAAuB,SAAS,wBAAwB,4BAA4B,mBAAmB,uEAAuE,OAAO,EAAE,WAAW,SAAS,qBAAqB,oBAAoB,0BAA0B,8BAA8B,SAAS,EAAE,WAAW,sBAAsB,mCAAmC,oCAAoC,aAAa,6BAA6B,iDAAiD,OAAO,sCAAsC,aAAa,WAAW,OAAO,0BAA0B,oCAAoC,WAAW,SAAS,OAAO,kBAAkB,oBAAoB,KAAK,GAAG;AAC7sF;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA,C;;;;;;AC9nIA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wHAAwH;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,WAAW;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,IAAI;AACvC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,wBAAwB,mBAAmB;AAC3C;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,SAAS;AACzvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,iCAAiC;AACjC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,WAAW;AAC9C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC,oCAAoC,EAAE,8BAA8B,EAAE,aAAa,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,cAAc;AACtF,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,4BAA4B;AACtE;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kJAAkJ;AAClJ;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,+BAA+B,KAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uCAAuC;AACnE;AACA;AACA;AACA,SAAS;AACT,4BAA4B,qCAAqC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,WAAW;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,mBAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,IAAI;AAC/D;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA,0FAA0F,IAAI;AAC9F;AACA;AACA;AACA;AACA,uBAAuB;AACvB,uBAAuB;AACvB;AACA;AACA,8CAA8C,WAAW;AACzD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,8CAA8C,WAAW;AACzD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,C;;;;;;AC5wDA,kBAAkB,yBAAyB,EAAE;AAC7C,MAAM;AACN,WAAW,+OAA+O,OAAO,26BAA26B;AAC5qC,aAAa,+HAA+H,OAAO,ysBAAysyWAAyW,EAAE,MAAM,EAAE,UAAU,EAAE,+BAA+B,EAAE,+BAA+B,EAAE,uCAAuC,EAAE,kVAAkV,EAAE,sNAAsN,EAAE,sVAAsV,EAAE,uCAAuC,EAAE,uCAAuC,EAAE,4FAA4F,EAAE,4FAA4F,EAAE,8aAA8a,EAAE,4FAA4F,EAAE,4SAA4S,EAAE,kSAAkS,EAAE,kSAAkS,EAAE,UAAU,EAAE,wRAAwR,EAAE,eAAe,EAAE,eAAe,EAAE,+mBAA+mB,EAAE,gYAAgY,EAAE,8TAA8T,EAAE,eAAe,EAAE,oIAAoI,EAAE,ySAAyS,EAAE,WAAW,EAAE,6YAA6Y,EAAE,uZAAuZ,EAAE,uZAAuZ,EAAE,uZAAuZ,EAAE,uZAAuZ,EAAE,WAAW,EAAE,yRAAyR,EAAE,mWAAmW,EAAE,qLAAqL,EAAE,maAAma,EAAE,sHAAsH,EAAE,yRAAyR,EAAE,iWAAiW,EAAE,4VAA4V,EAAE,qBAAqB,EAAE,uCAAuC,EAAE,2BAA2B,EAAE,6FAA6F,EAAE,oSAAoS,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,gDAAgD,EAAE,sEAAsE,EAAE,sOAAsO,EAAE,+VAA+V,EAAE,uVAAuV,EAAE,oEAAoE,EAAE,6XAA6X,EAAE,ySAAyS,EAAE,oSAAoS,EAAE,qVAAqV,EAAE,uXAAuX,EAAE,yRAAyR,EAAE,6EAA6E,EAAE,+EAA+E,EAAE,uVAAuV,EAAE,uZAAuZ,EAAE,kXAAkX,EAAE,6FAA6F,EAAE,qVAAqV,EAAE,uVAAuV,EAAE,6FAA6F,EAAE,qVAAqV,EAAE,6FAA6F,EAAE,qVAAqV,EAAE,uVAAuV,EAAE,gLAAgL,EAAE,yYAAyY,EAAE,WAAW,EAAE,yWAAyW,EAAE,uVAAuV,EAAE,uXAAuX,EAAE,6BAA6B,EAAE,6YAA6Y,EAAE,uXAAuX,EAAE,kMAAkM,EAAE,+RAA+R,EAAE,6YAA6Y,EAAE,sEAAsE,EAAE,8BAA8B,EAAE,yRAAyR,EAAE,yWAAyW,EAAE,uXAAuX,EAAE,uVAAuV,EAAE,uVAAuV,EAAE,gLAAgL,EAAE,qPAAqP,EAAE,yRAAyR,EAAE,gDAAgD,EAAE,uVAAuV,EAAE,sCAAsC,EAAE,4CAA4C,EAAE,qLAAqL,EAAE,uFAAuF,EAAE,kEAAkE,EAAE,6DAA6D,EAAE,yRAAyR,EAAE,4CAA4C,EAAE,8cAA8c,EAAE,8cAA8c,EAAE,4EAA4E,EAAE,qLAAqL,EAAE,8cAA8c,EAAE,8cAA8c,EAAE,sWAAsW,EAAE,oSAAoS,EAAE,0NAA0N,EAAE,oSAAoS,EAAE,sBAAsB,EAAE,WAAW,EAAE,uVAAuV,EAAE,uTAAuT,EAAE,uGAAuG,EAAE,6FAA6F,EAAE,WAAW,EAAE,yCAAyC,EAAE,uEAAuE,EAAE,UAAU,EAAE,yRAAyR,EAAE,oQAAoQ,EAAE,uCAAuC,EAAE,+BAA+B,EAAE,4eAA4e,EAAE,uVAAuV,EAAE,qVAAqV,EAAE,wCAAwC,EAAE,qVAAqV,EAAE,uVAAuV,EAAE,qVAAqV,EAAE,qVAAqV,EAAE,qVAAqV,EAAE,qVAAqV,EAAE,qVAAqV,EAAE,qVAAqV,EAAE,qVAAqV,EAAE,qVAAqV,EAAE,qVAAqV,EAAE,qVAAqV,EAAE,qVAAqV,EAAE,wWAAwW,EAAE,wWAAwW,EAAE,iCAAiC,EAAE,qWAAqW,EAAE,sOAAsO,EAAE,gDAAgD,EAAE,6EAA6E,EAAE,qVAAqV,EAAE,qVAAqV,EAAE,qVAAqV,EAAE,uVAAuV,EAAE,yWAAyW,EAAE,uZAAuZ,EAAE,uZAAuZ,EAAE,mWAAmW,EAAE,qLAAqL,EAAE,gDAAgD,EAAE,kXAAkX,EAAE,gDAAgD,EAAE,kXAAkX,EAAE,kXAAkX,EAAE,gDAAgD,EAAE,yYAAyY,EAAE,uXAAuX,EAAE,2BAA2B,EAAE,yRAAyR,EAAE,gDAAgD,EAAE,6YAA6Y,EAAE,yRAAyR,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,+RAA+R,EAAE,2BAA2B,EAAE,yTAAyT,EAAE,gBAAgB,EAAE,8BAA8B,EAAE,gBAAgB,EAAE,+RAA+R,EAAE,uLAAuL,EAAE,gDAAgD,EAAE,gDAAgD,EAAE,ocAAoc,EAAE,uEAAuE,EAAE,yRAAyR,EAAE,6EAA6E,EAAE,sLAAsL,EAAE,iCAAiC,EAAE,gDAAgD,EAAE,sBAAsB,EAAE,gKAAgK,EAAE,sCAAsC,EAAE,uVAAuV,EAAE,oSAAoS,EAAE,2BAA2B,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,4CAA4C,EAAE,4CAA4C,EAAE,4MAA4M,EAAE,2BAA2B,EAAE,sCAAsC,EAAE,ocAAoc,EAAE,2KAA2K,EAAE,WAAW,EAAE,WAAW,EAAE,6FAA6F,EAAE,ocAAoc,EAAE,2KAA2K,EAAE,ocAAoc,EAAE,uVAAuV,EAAE,ocAAoc,EAAE,gDAAgD,EAAE,ocAAoc,EAAE,ocAAoc,EAAE,wCAAwC,EAAE,4fAA4f,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,6FAA6F,EAAE,yRAAyR,EAAE,uBAAuB,EAAE,2KAA2K,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,gDAAgD,EAAE,yRAAyR,EAAE,gDAAgD,EAAE,sBAAsB,EAAE,ySAAyS,EAAE,uVAAuV,EAAE,sEAAsE,EAAE,iCAAiC,EAAE,gDAAgD,EAAE,mNAAmN,EAAE,oSAAoS,EAAE,iCAAiC,EAAE,iCAAiC,EAAE,iCAAiC,EAAE,uXAAuX,EAAE,uXAAuX,EAAE,yRAAyR,EAAE,wWAAwW,EAAE,iCAAiC,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,kMAAkM,EAAE,uXAAuX,EAAE,uXAAuX,EAAE,2BAA2B,EAAE,6YAA6Y,EAAE,kYAAkY,EAAE,gBAAgB,EAAE,uXAAuX,EAAE,gBAAgB,EAAE,uXAAuX,EAAE,sBAAsB,EAAE,iCAAiC,EAAE,iCAAiC,EAAE,ocAAoc,EAAE,WAAW,EAAE,6EAA6E,EAAE,2BAA2B,EAAE,2BAA2B,EAAE,sLAAsL,EAAE,ocAAoc,EAAE,yRAAyR,EAAE,+cAA+c,EAAE,iCAAiC,EAAE,+cAA+c,EAAE,kIAAkI,EAAE,4CAA4C,EAAE,sBAAsB,EAAE,gDAAgD,EAAE,4MAA4M,EAAE,uVAAuV,EAAE,kEAAkE,EAAE,4MAA4M,EAAE,4MAA4M,EAAE,kEAAkE,EAAE,sBAAsB,EAAE,ocAAoc,EAAE,ocAAoc,EAAE,ocAAoc,EAAE,wCAAwC,EAAE,ocAAoc,EAAE,gDAAgD,EAAE,iCAAiC,EAAE,oSAAoS,EAAE,oQAAoQ,EAAE,yPAAyP,EAAE,yCAAyC,EAAE,2KAA2K,EAAE,yRAAyR,EAAE,6FAA6F,EAAE,yRAAyR,EAAE,6OAA6O,EAAE,yPAAyP,EAAE,iCAAiC,EAAE,qVAAqV,EAAE,iCAAiC,EAAE,yRAAyR,EAAE,gBAAgB,EAAE,sEAAsE,EAAE,gDAAgD,EAAE,WAAW,EAAE,iCAAiC,EAAE,oSAAoS,EAAE,2KAA2K,EAAE,ocAAoc,EAAE,uZAAuZ,EAAE,qVAAqV,EAAE,gBAAgB,EAAE,gLAAgL,EAAE,uXAAuX,EAAE,uXAAuX,EAAE,uXAAuX,EAAE,6YAA6Y,EAAE,gBAAgB,EAAE,kYAAkY,EAAE,uXAAuX,EAAE,uXAAuX,EAAE,gBAAgB,EAAE,ocAAoc,EAAE,6EAA6E,EAAE,6EAA6E,EAAE,ocAAoc,EAAE,yRAAyR,EAAE,2KAA2K,EAAE,ocAAoc,EAAE,6CAA6C,EAAE,ocAAoc,EAAE,4CAA4C,EAAE,4CAA4C,EAAE,iCAAiC,EAAE,gDAAgD,EAAE,WAAW,EAAE,oSAAoS,EAAE,iCAAiC,EAAE,iCAAiC,EAAE,ocAAoc,EAAE,2KAA2K,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,yPAAyP,EAAE,yCAAyC,EAAE,yPAAyP,EAAE,yRAAyR,EAAE,qVAAqV,EAAE,qVAAqV,EAAE,uMAAuM,EAAE,uXAAuX,EAAE,iCAAiC,EAAE,qVAAqV,EAAE,2KAA2K,EAAE,ocAAoc,EAAE,ocAAoc,EAAE,uXAAuX,EAAE,yYAAyY,EAAE,uXAAuX,EAAE,gBAAgB,EAAE,ocAAoc,EAAE,2KAA2K,EAAE,ocAAoc,EAAE,4DAA4D,EAAE,kEAAkE,EAAE,WAAW,EAAE,iCAAiC,EAAE,kEAAkE,EAAE,ocAAoc,EAAE,WAAW,EAAE,WAAW,EAAE,ocAAoc,EAAE,6OAA6O,EAAE,yPAAyP,EAAE,6OAA6O,EAAE,yPAAyP,EAAE,oQAAoQ,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,6OAA6O,EAAE,sEAAsE,EAAE,ocAAoc,EAAE,uXAAuX,EAAE,uXAAuX,EAAE,ocAAoc,EAAE,ocAAoc,EAAE,4CAA4C,EAAE,ocAAoc,EAAE,ocAAoc,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,6OAA6O,EAAE,yPAAyP,EAAE,6OAA6O,EAAE,6OAA6O,EAAE,6OAA6O,EAAE,wPAAwP,EAAE,yPAAyP,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,yRAAyR,EAAE,6OAA6O,EAAE,6OAA6O,EAAE,6OAA6O;AAC7t9F,iBAAiB,UAAU;AAC3B;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA,6DAA6D;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB,gHAAgH;AACrI;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC;AACpC,4BAA4B;AAC5B;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,sCAAsC;AACtC;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,oDAAoD;AACpD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;AChrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC7SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,IAAI;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,8BAA8B;AAClE;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,oBAAoB;AAC9B;AACA;;AAEA;AACA,UAAU,UAAU;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,sBAAsB;AACrD;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;;;;;;;;AC/NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,WAAW;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;AChFA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA,mCAAmC,qBAAqB;AACxD","file":"livescript-1.1.0.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2920cb0d6372270dee53","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pdk/projects/WebWorkerPreProcessor/~/process/browser.js\n// module id = 0\n// module chunks = 0","var lexer, parser;\nlexer = require('./lexer');\nparser = require('./parser').parser;\nparser.yy = require('./ast');\nparser.lexer = {\n  lex: function(){\n    var ref$, tag;\n    ref$ = this.tokens[++this.pos] || [''], tag = ref$[0], this.yytext = ref$[1], this.yylineno = ref$[2];\n    return tag;\n  },\n  setInput: function(it){\n    this.pos = -1;\n    return this.tokens = it;\n  },\n  upcomingInput: function(){\n    return '';\n  }\n};\nexports.VERSION = '1.1.0';\nexports.compile = function(code, options){\n  var e, that;\n  try {\n    return parser.parse(lexer.lex(code)).compileRoot(options);\n  } catch (e$) {\n    e = e$;\n    if (that = options != null ? options.filename : void 8) {\n      e.message += \"\\nat \" + that;\n    }\n    throw e;\n  }\n};\nexports.ast = function(it){\n  return parser.parse(typeof it === 'string' ? lexer.lex(it) : it);\n};\nexports.tokens = lexer.lex;\nexports.lex = function(it){\n  return lexer.lex(it, {\n    raw: true\n  });\n};\nexports.run = function(code, options){\n  var ref$;\n  return Function(exports.compile(code, (ref$ = {}, import$(ref$, options), ref$.bare = true, ref$)))();\n};\nexports.tokens.rewrite = lexer.rewrite;\nimportAll$(exports.ast, parser.yy);\nif (true) {\n  require('./node')(exports);\n} else {\n  exports.require = require;\n  if ('' + this === '[object BackstagePass]') {\n    this.EXPORTED_SYMBOLS = ['LiveScript'];\n  }\n}\nfunction import$(obj, src){\n  var own = {}.hasOwnProperty;\n  for (var key in src) if (own.call(src, key)) obj[key] = src[key];\n  return obj;\n}\nfunction importAll$(obj, src){\n  for (var key in src) obj[key] = src[key];\n  return obj;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/livescript.js\n// module id = 1\n// module chunks = 0","var Node, Negatable, Block, Atom, Literal, Var, Key, Index, Slice, Chain, Call, List, Obj, Prop, Arr, Unary, Binary, Assign, Import, In, Existence, Fun, Class, Super, Parens, Splat, Jump, Throw, Return, While, For, Try, Switch, Case, If, Label, Cascade, JS, Require, Util, Vars, DECLS, ref$, UTILS, LEVEL_TOP, LEVEL_PAREN, LEVEL_LIST, LEVEL_COND, LEVEL_OP, LEVEL_CALL, PREC, TAB, ID, SIMPLENUM, slice$ = [].slice, toString$ = {}.toString;\n(Node = function(){\n  throw Error('unimplemented');\n}).prototype = {\n  compile: function(options, level){\n    var o, node, code, that, i$, len$, tmp;\n    o = import$({}, options);\n    if (level != null) {\n      o.level = level;\n    }\n    node = this.unfoldSoak(o) || this;\n    if (o.level && node.isStatement()) {\n      return node.compileClosure(o);\n    }\n    code = (node.tab = o.indent, node).compileNode(o);\n    if (that = node.temps) {\n      for (i$ = 0, len$ = that.length; i$ < len$; ++i$) {\n        tmp = that[i$];\n        o.scope.free(tmp);\n      }\n    }\n    return code;\n  },\n  compileClosure: function(o){\n    var that, fun, call, hasArgs, hasThis;\n    if (that = this.getJump()) {\n      that.carp('inconvertible statement');\n    }\n    fun = Fun([], Block(this));\n    call = Call();\n    this.traverseChildren(function(it){\n      switch (it.value) {\n      case 'this':\n        hasThis = true;\n        break;\n      case 'arguments':\n        hasArgs = it.value = 'args$';\n      }\n    });\n    if (hasThis) {\n      call.args.push(Literal('this'));\n      call.method = '.call';\n    }\n    if (hasArgs) {\n      call.args.push(Literal('arguments'));\n      fun.params.push(Var('args$'));\n    }\n    return Parens(Chain((fun.wrapper = true, fun['void'] = this['void'], fun), [call]), true).compile(o);\n  },\n  compileBlock: function(o, node){\n    var that;\n    if (that = node != null ? node.compile(o, LEVEL_TOP) : void 8) {\n      return \"{\\n\" + that + \"\\n\" + this.tab + \"}\";\n    } else {\n      return '{}';\n    }\n  },\n  cache: function(o, once, level){\n    var ref$, sub, ref;\n    if (!this.isComplex()) {\n      return [ref$ = level != null ? this.compile(o, level) : this, ref$];\n    }\n    sub = Assign(ref = Var(o.scope.temporary()), this);\n    if (level != null) {\n      sub = sub.compile(o, level);\n      if (once) {\n        o.scope.free(ref.value);\n      }\n      return [sub, ref.value];\n    }\n    if (once) {\n      return [sub, (ref.temp = true, ref)];\n    } else {\n      return [sub, ref, [ref.value]];\n    }\n  },\n  compileLoopReference: function(o, name, ret){\n    var ref$, asn, tmp;\n    if (this instanceof Var && o.scope.check(this.value) || this instanceof Unary && ((ref$ = this.op) == '+' || ref$ == '-') && (-1 / 0 < (ref$ = +this.it.value) && ref$ < 1 / 0) || this instanceof Literal && !this.isComplex()) {\n      return [ref$ = this.compile(o), ref$];\n    }\n    asn = Assign(Var(tmp = o.scope.temporary(name)), this);\n    ret || (asn['void'] = true);\n    return [tmp, asn.compile(o, ret ? LEVEL_CALL : LEVEL_PAREN)];\n  },\n  eachChild: function(fn){\n    var i$, ref$, len$, name, child, j$, len1$, i, node, that;\n    for (i$ = 0, len$ = (ref$ = this.children).length; i$ < len$; ++i$) {\n      name = ref$[i$];\n      if (child = this[name]) {\n        if ('length' in child) {\n          for (j$ = 0, len1$ = child.length; j$ < len1$; ++j$) {\n            i = j$;\n            node = child[j$];\n            if (that = fn(node, name, i)) {\n              return that;\n            }\n          }\n        } else {\n          if ((that = fn(child, name)) != null) {\n            return that;\n          }\n        }\n      }\n    }\n  },\n  traverseChildren: function(fn, xscope){\n    var this$ = this;\n    return this.eachChild(function(node, name, index){\n      var ref$;\n      return (ref$ = fn(node, this$, name, index)) != null\n        ? ref$\n        : node.traverseChildren(fn, xscope);\n    });\n  },\n  anaphorize: function(){\n    var base, name, ref$;\n    this.children = this.aTargets;\n    if (this.eachChild(hasThat)) {\n      if ((base = this)[name = this.aSource] instanceof Existence) {\n        base = base[name];\n        name = 'it';\n      }\n      if (base[name].value !== 'that') {\n        base[name] = Assign(Var('that'), base[name]);\n      }\n    }\n    function hasThat(it){\n      var that;\n      return it.value === 'that' || ((that = it.aSource)\n        ? (that = it[that]) ? hasThat(that) : void 8\n        : it.eachChild(hasThat));\n    }\n    delete this.children;\n    return ref$ = this[this.aSource], ref$.cond = true, ref$;\n  },\n  carp: function(msg, type){\n    type == null && (type = SyntaxError);\n    throw type(msg + \" on line \" + (this.line || this.traverseChildren(function(it){\n      return it.line;\n    })));\n  },\n  delegate: function(names, fn){\n    var i$, len$, name;\n    for (i$ = 0, len$ = names.length; i$ < len$; ++i$) {\n      name = names[i$];\n      (fn$.call(this, name));\n    }\n    function fn$(name){\n      this[name] = function(it){\n        return fn.call(this, name, it);\n      };\n    }\n  },\n  children: [],\n  terminator: ';',\n  isComplex: YES,\n  isStatement: NO,\n  isAssignable: NO,\n  isCallable: NO,\n  isEmpty: NO,\n  isArray: NO,\n  isString: NO,\n  isRegex: NO,\n  isMatcher: function(){\n    return this.isString() || this.isRegex();\n  },\n  assigns: NO,\n  ripName: VOID,\n  unfoldSoak: VOID,\n  unfoldAssign: VOID,\n  unparen: THIS,\n  unwrap: THIS,\n  maybeKey: THIS,\n  expandSlice: THIS,\n  varName: String,\n  getAccessors: VOID,\n  getCall: VOID,\n  getDefault: VOID,\n  getJump: VOID,\n  invert: function(){\n    return Unary('!', this, true);\n  },\n  invertCheck: function(it){\n    if (it.inverted) {\n      this.invert();\n    }\n    return this;\n  },\n  addElse: function($else){\n    this['else'] = $else;\n    return this;\n  },\n  makeReturn: function(arref){\n    if (arref) {\n      return Call.make(JS(arref + '.push'), [this]);\n    } else {\n      return Return(this);\n    }\n  },\n  makeObjReturn: function(arref){\n    var base, items;\n    if (arref) {\n      base = this.lines[0];\n      if (this.lines[0] instanceof If) {\n        base = base.then.lines[0];\n      }\n      items = base.items;\n      if (items[0] == null || items[1] == null) {\n        this.carp('must specify both key and value for object comprehension');\n      }\n      return Assign(Chain(Var(arref)).add(Index(items[0], '.', true)), items[1]);\n    } else {\n      return Return(this);\n    }\n  },\n  show: String,\n  toString: function(idt){\n    var tree, that;\n    idt || (idt = '');\n    tree = '\\n' + idt + this.constructor.displayName;\n    if (that = this.show()) {\n      tree += ' ' + that;\n    }\n    this.eachChild(function(it){\n      tree += it.toString(idt + TAB);\n    });\n    return tree;\n  },\n  stringify: function(space){\n    return JSON.stringify(this, null, space);\n  },\n  toJSON: function(){\n    return import$({\n      type: this.constructor.displayName\n    }, this);\n  }\n};\nexports.parse = function(json){\n  return exports.fromJSON(JSON.parse(json));\n};\nexports.fromJSON = (function(){\n  function fromJSON(it){\n    var that, node, key, val, i$, len$, v, results$ = [];\n    if (!(it && typeof it === 'object')) {\n      return it;\n    }\n    if (that = it.type) {\n      node = clone$(exports[that].prototype);\n      for (key in it) {\n        val = it[key];\n        node[key] = fromJSON(val);\n      }\n      return node;\n    }\n    if (it.length != null) {\n      for (i$ = 0, len$ = it.length; i$ < len$; ++i$) {\n        v = it[i$];\n        results$.push(fromJSON(v));\n      }\n      return results$;\n    } else {\n      return it;\n    }\n  }\n  return fromJSON;\n}());\nNegatable = {\n  show: function(){\n    return this.negated && '!';\n  },\n  invert: function(){\n    this.negated = !this.negated;\n    return this;\n  }\n};\nexports.Block = Block = (function(superclass){\n  var prototype = extend$((import$(Block, superclass).displayName = 'Block', Block), superclass).prototype, constructor = Block;\n  function Block(body){\n    var this$ = this instanceof ctor$ ? this : new ctor$;\n    body || (body = []);\n    if ('length' in body) {\n      this$.lines = body;\n    } else {\n      this$.lines = [];\n      this$.add(body);\n    }\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.children = ['lines'];\n  prototype.toJSON = function(){\n    delete this.back;\n    return superclass.prototype.toJSON.call(this);\n  };\n  prototype.add = function(it){\n    var that, ref$;\n    it = it.unparen();\n    switch (false) {\n    case !(that = this.back):\n      that.add(it);\n      break;\n    case !(that = it.lines):\n      (ref$ = this.lines).push.apply(ref$, that);\n      break;\n    default:\n      this.lines.push(it);\n      if (that = it.back, delete it.back, that) {\n        this.back = that;\n      }\n    }\n    return this;\n  };\n  prototype.prepend = function(){\n    var ref$;\n    (ref$ = this.lines).splice.apply(ref$, [this.neck(), 0].concat(slice$.call(arguments)));\n    return this;\n  };\n  prototype.pipe = function(target, type){\n    var args;\n    args = type === '|>' ? this.lines.pop() : target;\n    if (toString$.call(args).slice(8, -1) !== 'Array') {\n      args = [args];\n    }\n    switch (type) {\n    case '|>':\n      this.lines.push(Call.make(target, args, {\n        pipe: true\n      }));\n      break;\n    case '<|':\n      this.lines.push(Call.make(this.lines.pop(), args));\n    }\n    return this;\n  };\n  prototype.unwrap = function(){\n    if (this.lines.length === 1) {\n      return this.lines[0];\n    } else {\n      return this;\n    }\n  };\n  prototype.chomp = function(){\n    var lines, i, that;\n    lines = this.lines;\n    i = lines.length;\n    while (that = lines[--i]) {\n      if (!that.comment) {\n        break;\n      }\n    }\n    lines.length = i + 1;\n    return this;\n  };\n  prototype.neck = function(){\n    var pos, i$, ref$, len$, x;\n    pos = 0;\n    for (i$ = 0, len$ = (ref$ = this.lines).length; i$ < len$; ++i$) {\n      x = ref$[i$];\n      if (!(x.comment || x instanceof Literal)) {\n        break;\n      }\n      ++pos;\n    }\n    return pos;\n  };\n  prototype.isComplex = function(){\n    var ref$;\n    return this.lines.length > 1 || ((ref$ = this.lines[0]) != null ? ref$.isComplex() : void 8);\n  };\n  prototype.delegate(['isCallable', 'isArray', 'isString', 'isRegex'], function(it){\n    var ref$, ref1$;\n    return (ref$ = (ref1$ = this.lines)[ref1$.length - 1]) != null ? ref$[it]() : void 8;\n  });\n  prototype.getJump = function(it){\n    var i$, ref$, len$, node, that;\n    for (i$ = 0, len$ = (ref$ = this.lines).length; i$ < len$; ++i$) {\n      node = ref$[i$];\n      if (that = node.getJump(it)) {\n        return that;\n      }\n    }\n  };\n  prototype.makeReturn = function(it){\n    var that, ref$, key$, ref1$;\n    if (that = (ref1$ = ref$ = this.lines)[key$ = ref1$.length - 1] != null ? ref$[key$] = ref$[key$].makeReturn(it) : void 8) {\n      if (that instanceof Return && !that.it) {\n        --this.lines.length;\n      }\n    }\n    return this;\n  };\n  prototype.compile = function(o, level){\n    var tab, codes, res$, i$, ref$, len$, node, code;\n    level == null && (level = o.level);\n    if (level) {\n      return this.compileExpressions(o, level);\n    }\n    o.block = this;\n    tab = o.indent;\n    res$ = [];\n    for (i$ = 0, len$ = (ref$ = this.lines).length; i$ < len$; ++i$) {\n      node = ref$[i$];\n      node = node.unfoldSoak(o) || node;\n      if (!(code = (node.front = true, node).compile(o, level))) {\n        continue;\n      }\n      node.isStatement() || (code += node.terminator);\n      res$.push(tab + code);\n    }\n    codes = res$;\n    return codes.join('\\n');\n  };\n  prototype.compileRoot = function(options){\n    var o, saveTo, bare, ref$, prefix, code;\n    o = (import$({\n      level: LEVEL_TOP,\n      scope: this.scope = Scope.root = new Scope\n    }, options));\n    if (saveTo = o.saveScope, delete o.saveScope, saveTo) {\n      o.scope = saveTo.savedScope || (saveTo.savedScope = o.scope);\n    }\n    delete o.filename;\n    o.indent = (bare = o.bare, delete o.bare, bare) ? '' : TAB;\n    if (/^\\s*(?:[/#]|javascript:)/.test((ref$ = this.lines[0]) != null ? ref$.code : void 8)) {\n      prefix = this.lines.shift().code + '\\n';\n    }\n    if ((ref$ = o.eval, delete o.eval, ref$) && this.chomp().lines.length) {\n      if (bare) {\n        this.lines.push(Parens(this.lines.pop()));\n      } else {\n        this.makeReturn();\n      }\n    }\n    code = this.compileWithDeclarations(o);\n    bare || (code = \"(function(){\\n\" + code + \"\\n}).call(this);\\n\");\n    return [prefix] + code;\n  };\n  prototype.compileWithDeclarations = function(o){\n    var pre, i, rest, post, that;\n    o.level = LEVEL_TOP;\n    pre = '';\n    if (i = this.neck()) {\n      rest = this.lines.splice(i, 9e9);\n      pre = this.compile(o);\n      this.lines = rest;\n    }\n    if (!(post = this.compile(o))) {\n      return pre;\n    }\n    return (pre && pre + \"\\n\") + ((that = this.scope) ? that.emit(post, o.indent) : post);\n  };\n  prototype.compileExpressions = function(o, level){\n    var lines, i, that, code, last, i$, len$, node;\n    lines = this.lines;\n    i = -1;\n    while (that = lines[++i]) {\n      if (that.comment) {\n        lines.splice(i--, 1);\n      }\n    }\n    if (!lines.length) {\n      lines.push(Literal('void'));\n    }\n    lines[0].front = this.front;\n    lines[lines.length - 1]['void'] = this['void'];\n    if (!lines[1]) {\n      return lines[0].compile(o, level);\n    }\n    code = '';\n    last = lines.pop();\n    for (i$ = 0, len$ = lines.length; i$ < len$; ++i$) {\n      node = lines[i$];\n      code += (node['void'] = true, node).compile(o, LEVEL_PAREN) + ', ';\n    }\n    code += last.compile(o, LEVEL_PAREN);\n    if (level < LEVEL_LIST) {\n      return code;\n    } else {\n      return \"(\" + code + \")\";\n    }\n  };\n  return Block;\n}(Node));\nAtom = (function(superclass){\n  var prototype = extend$((import$(Atom, superclass).displayName = 'Atom', Atom), superclass).prototype, constructor = Atom;\n  prototype.show = function(){\n    return this.value;\n  };\n  prototype.isComplex = NO;\n  function Atom(){\n    Atom.superclass.apply(this, arguments);\n  }\n  return Atom;\n}(Node));\nexports.Literal = Literal = (function(superclass){\n  var prototype = extend$((import$(Literal, superclass).displayName = 'Literal', Literal), superclass).prototype, constructor = Literal;\n  function Literal(value){\n    var this$ = this instanceof ctor$ ? this : new ctor$;\n    this$.value = value;\n    if (value.js) {\n      return JS(value + \"\", true);\n    }\n    if (value === 'super') {\n      return new Super;\n    }\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.isEmpty = function(){\n    var ref$;\n    return (ref$ = this.value) == 'void' || ref$ == 'null';\n  };\n  prototype.isCallable = function(){\n    var ref$;\n    return (ref$ = this.value) == 'this' || ref$ == 'eval' || ref$ == '..';\n  };\n  prototype.isString = function(){\n    return 0 <= '\\'\"'.indexOf((this.value + \"\").charAt());\n  };\n  prototype.isRegex = function(){\n    return (this.value + \"\").charAt() === '/';\n  };\n  prototype.isComplex = function(){\n    return this.isRegex() || this.value === 'debugger';\n  };\n  prototype.isWhat = function(){\n    switch (false) {\n    case !this.isEmpty():\n      return 'empty';\n    case !this.isCallable():\n      return 'callable';\n    case !this.isString():\n      return 'string';\n    case !this.isRegex():\n      return 'regex';\n    case !this.isComplex():\n      return 'complex';\n    }\n  };\n  prototype.varName = function(){\n    if (/^\\w+$/.test(this.value)) {\n      return '$' + this.value;\n    } else {\n      return '';\n    }\n  };\n  prototype.compile = function(o, level){\n    var val, ref$;\n    level == null && (level = o.level);\n    switch (val = this.value + \"\") {\n    case 'this':\n      return ((ref$ = o.scope.fun) != null ? ref$.bound : void 8) || val;\n    case 'undefined':\n      val = 'void';\n      // fallthrough\n    case 'void':\n      if (!level) {\n        return '';\n      }\n      val += ' 8';\n      // fallthrough\n    case 'null':\n      if (level === LEVEL_CALL) {\n        this.carp('invalid use of ' + this.value);\n      }\n      break;\n    case 'on':\n    case 'yes':\n      val = 'true';\n      break;\n    case 'off':\n    case 'no':\n      val = 'false';\n      break;\n    case '*':\n      this.carp('stray star');\n      break;\n    case '..':\n      if (!(val = o.ref)) {\n        this.carp('stray reference');\n      }\n      this.cascadee || (val.erred = true);\n      break;\n    case 'debugger':\n      if (level) {\n        return \"(function(){\\n\" + TAB + o.indent + \"debugger;\\n\" + o.indent + \"}())\";\n      }\n    }\n    return val;\n  };\n  return Literal;\n}(Atom));\nexports.Var = Var = (function(superclass){\n  var prototype = extend$((import$(Var, superclass).displayName = 'Var', Var), superclass).prototype, constructor = Var;\n  function Var(value){\n    var this$ = this instanceof ctor$ ? this : new ctor$;\n    this$.value = value;\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.isAssignable = prototype.isCallable = YES;\n  prototype.assigns = function(it){\n    return it === this.value;\n  };\n  prototype.maybeKey = function(){\n    var ref$;\n    return ref$ = Key(this.value), ref$.line = this.line, ref$;\n  };\n  prototype.varName = prototype.show;\n  prototype.compile = function(o){\n    if (this.temp) {\n      return o.scope.free(this.value);\n    } else {\n      return this.value;\n    }\n  };\n  return Var;\n}(Atom));\nexports.Key = Key = (function(superclass){\n  var prototype = extend$((import$(Key, superclass).displayName = 'Key', Key), superclass).prototype, constructor = Key;\n  function Key(name, reserved){\n    var this$ = this instanceof ctor$ ? this : new ctor$;\n    this$.reserved = reserved || name.reserved;\n    this$.name = '' + name;\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.isComplex = NO;\n  prototype.assigns = function(it){\n    return it === this.name;\n  };\n  prototype.varName = function(){\n    var name;\n    name = this.name;\n    if (this.reserved || (name == 'arguments' || name == 'eval')) {\n      return \"$\" + name;\n    } else {\n      return name;\n    }\n  };\n  prototype.compile = prototype.show = function(){\n    if (this.reserved) {\n      return \"'\" + this.name + \"'\";\n    } else {\n      return this.name;\n    }\n  };\n  return Key;\n}(Node));\nexports.Index = Index = (function(superclass){\n  var prototype = extend$((import$(Index, superclass).displayName = 'Index', Index), superclass).prototype, constructor = Index;\n  function Index(key, symbol, init){\n    var k, this$ = this instanceof ctor$ ? this : new ctor$;\n    symbol || (symbol = '.');\n    if (init && key instanceof Arr) {\n      switch (key.items.length) {\n      case 1:\n        if (!((k = key.items[0]) instanceof Splat)) {\n          key = Parens(k);\n        }\n      }\n    }\n    switch (symbol) {\n    case '[]':\n      this$.vivify = Arr;\n      break;\n    case '{}':\n      this$.vivify = Obj;\n      break;\n    default:\n      if ('=' === symbol.slice(-1)) {\n        this$.assign = symbol.slice(1);\n      }\n    }\n    this$.key = key;\n    this$.symbol = symbol;\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.children = ['key'];\n  prototype.show = function(){\n    return [this.soak ? '?' : void 8] + this.symbol;\n  };\n  prototype.isComplex = function(){\n    return this.key.isComplex();\n  };\n  prototype.varName = function(){\n    var ref$;\n    return ((ref$ = this.key) instanceof Key || ref$ instanceof Literal) && this.key.varName();\n  };\n  prototype.compile = function(o){\n    var code;\n    code = this.key.compile(o, LEVEL_PAREN);\n    if (this.key instanceof Key && '\\'' !== code.charAt(0)) {\n      return \".\" + code;\n    } else {\n      return \"[\" + code + \"]\";\n    }\n  };\n  return Index;\n}(Node));\nexports.Slice = Slice = (function(superclass){\n  var prototype = extend$((import$(Slice, superclass).displayName = 'Slice', Slice), superclass).prototype, constructor = Slice;\n  function Slice(arg$){\n    var this$ = this instanceof ctor$ ? this : new ctor$;\n    this$.type = arg$.type, this$.target = arg$.target, this$.from = arg$.from, this$.to = arg$.to;\n    this$.from == null && (this$.from = Literal(0));\n    if (this$.to && this$.type === 'to') {\n      this$.to = Binary('+', this$.to, Literal('1'));\n    }\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.children = ['target', 'from', 'to'];\n  prototype.show = function(){\n    return this.type;\n  };\n  prototype.compileNode = function(o){\n    var args;\n    if (this.to && this.type === 'to') {\n      this.to = Binary('||', this.to, Literal('9e9'));\n    }\n    args = [this.target, this.from];\n    if (this.to) {\n      args.push(this.to);\n    }\n    return Chain(Var(util('slice'))).add(Index(Key('call'), '.', true)).add(Call(args)).compile(o);\n  };\n  return Slice;\n}(Node));\nexports.Chain = Chain = (function(superclass){\n  var prototype = extend$((import$(Chain, superclass).displayName = 'Chain', Chain), superclass).prototype, constructor = Chain;\n  function Chain(head, tails){\n    var this$ = this instanceof ctor$ ? this : new ctor$;\n    if (!tails && head instanceof Chain) {\n      return head;\n    }\n    this$.head = head;\n    this$.tails = tails || [];\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.children = ['head', 'tails'];\n  prototype.add = function(it){\n    var ref$, bi, that, logics, call, f;\n    if (this.head instanceof Existence) {\n      ref$ = Chain(this.head.it), this.head = ref$.head, this.tails = ref$.tails;\n      it.soak = true;\n    }\n    this.tails.push(it);\n    bi = this.head instanceof Parens && this.head.it instanceof Binary && !this.head.it.partial\n      ? this.head.it\n      : this.head instanceof Binary && !this.head.partial ? this.head : void 8;\n    if (this.head instanceof Super) {\n      if (!this.head.called && it instanceof Call && !it.method) {\n        it.method = '.call';\n        it.args.unshift(Literal('this'));\n        this.head.called = true;\n      } else if (!this.tails[1] && ((ref$ = it.key) != null ? ref$.name : void 8) === 'prototype') {\n        this.head.sproto = true;\n      }\n    } else if (that = it.vivify, delete it.vivify, that) {\n      this.head = Assign(Chain(this.head, this.tails.splice(0, 9e9)), that(), '=', '||');\n    } else if (it instanceof Call && this.tails.length === 1 && bi && in$(bi.op, logics = ['&&', '||', 'xor'])) {\n      call = it;\n      f = function(x, key){\n        var y;\n        y = x[key];\n        if (y instanceof Binary && in$(y.op, logics)) {\n          f(y, 'first');\n          return f(y, 'second');\n        } else {\n          return x[key] = Chain(y).autoCompare(call.args);\n        }\n      };\n      f(bi, 'first');\n      f(bi, 'second');\n      return bi;\n    }\n    return this;\n  };\n  prototype.autoCompare = function(target){\n    var test;\n    test = this.head;\n    switch (false) {\n    case !(test instanceof Literal):\n      return Binary('===', test, target[0]);\n    case !(test instanceof Arr || test instanceof Obj):\n      return Binary('====', test, target[0]);\n    case !(test instanceof Var && test.value === '_'):\n      return Literal('true');\n    default:\n      return this.add(Call(target)) || [];\n    }\n  };\n  prototype.flipIt = function(){\n    this.flip = true;\n    return this;\n  };\n  prototype.unwrap = function(){\n    if (this.tails.length) {\n      return this;\n    } else {\n      return this.head;\n    }\n  };\n  prototype.delegate(['getJump', 'assigns', 'isStatement', 'isString'], function(it, arg){\n    return !this.tails.length && this.head[it](arg);\n  });\n  prototype.isComplex = function(){\n    return this.tails.length || this.head.isComplex();\n  };\n  prototype.isCallable = function(){\n    var that, ref$;\n    if (that = (ref$ = this.tails)[ref$.length - 1]) {\n      return !((ref$ = that.key) != null && ref$.items);\n    } else {\n      return this.head.isCallable();\n    }\n  };\n  prototype.isArray = function(){\n    var that, ref$;\n    if (that = (ref$ = this.tails)[ref$.length - 1]) {\n      return that.key instanceof Arr;\n    } else {\n      return this.head.isArray();\n    }\n  };\n  prototype.isRegex = function(){\n    return this.head.value === 'RegExp' && !this.tails[1] && this.tails[0] instanceof Call;\n  };\n  prototype.isAssignable = function(){\n    var tail, ref$, i$, len$;\n    if (!(tail = (ref$ = this.tails)[ref$.length - 1])) {\n      return this.head.isAssignable();\n    }\n    if (!(tail instanceof Index) || tail.key instanceof List || tail.symbol === '.~') {\n      return false;\n    }\n    for (i$ = 0, len$ = (ref$ = this.tails).length; i$ < len$; ++i$) {\n      tail = ref$[i$];\n      if (tail.assign) {\n        return false;\n      }\n    }\n    return true;\n  };\n  prototype.isSimpleAccess = function(){\n    return this.tails.length === 1 && !this.head.isComplex() && !this.tails[0].isComplex();\n  };\n  prototype.makeReturn = function(it){\n    if (this.tails.length) {\n      return superclass.prototype.makeReturn.apply(this, arguments);\n    } else {\n      return this.head.makeReturn(it);\n    }\n  };\n  prototype.getCall = function(){\n    var tail, ref$;\n    return (tail = (ref$ = this.tails)[ref$.length - 1]) instanceof Call && tail;\n  };\n  prototype.varName = function(){\n    var ref$, ref1$;\n    return (ref$ = (ref1$ = this.tails)[ref1$.length - 1]) != null ? ref$.varName() : void 8;\n  };\n  prototype.cacheReference = function(o){\n    var name, ref$, base, ref, bref, nref;\n    name = (ref$ = this.tails)[ref$.length - 1];\n    if (name instanceof Call) {\n      return this.cache(o, true);\n    }\n    if (this.tails.length < 2 && !this.head.isComplex() && !(name != null && name.isComplex())) {\n      return [this, this];\n    }\n    base = Chain(this.head, this.tails.slice(0, -1));\n    if (base.isComplex()) {\n      ref = o.scope.temporary();\n      base = Chain(Assign(Var(ref), base));\n      bref = (ref$ = Var(ref), ref$.temp = true, ref$);\n    }\n    if (!name) {\n      return [base, bref];\n    }\n    if (name.isComplex()) {\n      ref = o.scope.temporary('key');\n      name = Index(Assign(Var(ref), name.key));\n      nref = Index((ref$ = Var(ref), ref$.temp = true, ref$));\n    }\n    return [base.add(name), Chain(bref || base.head, [nref || name])];\n  };\n  prototype.compileNode = function(o){\n    var head, tails, that, i$, len$, t, hasPartial, pre, rest, broken, partial, post, idt, func, base, news, ref$;\n    if (this.flip) {\n      util('flip');\n      util('curry');\n    }\n    head = this.head, tails = this.tails;\n    head.front = this.front;\n    head.newed = this.newed;\n    if (!tails.length) {\n      return head.compile(o);\n    }\n    if (that = this.unfoldAssign(o)) {\n      return that.compile(o);\n    }\n    for (i$ = 0, len$ = tails.length; i$ < len$; ++i$) {\n      t = tails[i$];\n      if (t.partialized) {\n        hasPartial = true;\n        break;\n      }\n    }\n    if (hasPartial) {\n      util('slice');\n      pre = [];\n      rest = [];\n      for (i$ = 0, len$ = tails.length; i$ < len$; ++i$) {\n        t = tails[i$];\n        broken = broken || t.partialized != null;\n        if (broken) {\n          rest.push(t);\n        } else {\n          pre.push(t);\n        }\n      }\n      if (rest != null) {\n        partial = rest[0], post = slice$.call(rest, 1);\n      }\n      this.tails = pre;\n      return Chain(Chain(Var(util('partialize'))).add(Call([this, Arr(partial.args), Arr(partial.partialized)])), post).compile(o);\n    }\n    if (tails[0] instanceof Call && !head.isCallable()) {\n      this.carp('invalid callee');\n    }\n    this.expandSlice(o);\n    this.expandBind(o);\n    this.expandSplat(o);\n    this.expandStar(o);\n    if (this.splattedNewArgs) {\n      idt = o.indent + TAB;\n      func = Chain(this.head, tails.slice(0, -1));\n      return \"(function(func, args, ctor) {\\n\" + idt + \"ctor.prototype = func.prototype;\\n\" + idt + \"var child = new ctor, result = func.apply(child, args), t;\\n\" + idt + \"return (t = typeof result)  == \\\"object\\\" || t == \\\"function\\\" ? result || child : child;\\n\" + TAB + \"})(\" + func.compile(o) + \", \" + this.splattedNewArgs + \", function(){})\";\n    }\n    if (!this.tails.length) {\n      return this.head.compile(o);\n    }\n    base = this.head.compile(o, LEVEL_CALL);\n    news = rest = '';\n    for (i$ = 0, len$ = (ref$ = this.tails).length; i$ < len$; ++i$) {\n      t = ref$[i$];\n      if (t['new']) {\n        news += 'new ';\n      }\n      rest += t.compile(o);\n    }\n    if ('.' === rest.charAt(0) && SIMPLENUM.test(base)) {\n      base += ' ';\n    }\n    return news + base + rest;\n  };\n  prototype.unfoldSoak = function(o){\n    var that, ref$, i$, len$, i, node, ref1$, bust, test;\n    if (that = this.head.unfoldSoak(o)) {\n      (ref$ = that.then.tails).push.apply(ref$, this.tails);\n      return that;\n    }\n    for (i$ = 0, len$ = (ref$ = this.tails).length; i$ < len$; ++i$) {\n      i = i$;\n      node = ref$[i$];\n      if (ref1$ = node.soak, delete node.soak, ref1$) {\n        bust = Chain(this.head, this.tails.splice(0, i));\n        if (node.assign && !bust.isAssignable()) {\n          node.carp('invalid accessign');\n        }\n        test = node instanceof Call\n          ? (ref1$ = bust.cacheReference(o), test = ref1$[0], this.head = ref1$[1], JS(\"typeof \" + test.compile(o, LEVEL_OP) + \" === 'function'\"))\n          : (i && node.assign\n            ? (ref1$ = bust.cacheReference(o), test = ref1$[0], bust = ref1$[1], this.head = bust.head, (ref1$ = this.tails).unshift.apply(ref1$, bust.tails))\n            : (ref1$ = bust.unwrap().cache(o, true), test = ref1$[0], this.head = ref1$[1]), Existence(test));\n        return ref1$ = If(test, this), ref1$.soak = true, ref1$.cond = this.cond, ref1$['void'] = this['void'], ref1$;\n      }\n    }\n  };\n  prototype.unfoldAssign = function(o){\n    var that, ref$, i$, len$, i, index, op, left, lefts, rites, j$, len1$, node, ref1$;\n    if (that = this.head.unfoldAssign(o)) {\n      (ref$ = that.right.tails).push.apply(ref$, this.tails);\n      return that;\n    }\n    for (i$ = 0, len$ = (ref$ = this.tails).length; i$ < len$; ++i$) {\n      i = i$;\n      index = ref$[i$];\n      if (op = index.assign) {\n        index.assign = '';\n        left = Chain(this.head, this.tails.splice(0, i)).expandSlice(o).unwrap();\n        if (left instanceof Arr) {\n          lefts = left.items;\n          rites = (this.head = Arr()).items;\n          for (j$ = 0, len1$ = lefts.length; j$ < len1$; ++j$) {\n            i = j$;\n            node = lefts[j$];\n            ref1$ = Chain(node).cacheReference(o), rites[i] = ref1$[0], lefts[i] = ref1$[1];\n          }\n        } else {\n          ref1$ = Chain(left).cacheReference(o), left = ref1$[0], this.head = ref1$[1];\n        }\n        if (op === '=') {\n          op = ':=';\n        }\n        return ref1$ = Assign(left, this, op), ref1$.access = true, ref1$;\n      }\n    }\n  };\n  prototype.expandSplat = function(o){\n    var tails, i, call, args, ctx, ref$;\n    tails = this.tails;\n    i = -1;\n    while (call = tails[++i]) {\n      if (!(args = call.args)) {\n        continue;\n      }\n      ctx = call.method === '.call' && (args = args.concat()).shift();\n      if (!(args = Splat.compileArray(o, args, true))) {\n        continue;\n      }\n      if (call['new']) {\n        this.splattedNewArgs = args;\n      } else {\n        if (!ctx && tails[i - 1] instanceof Index) {\n          ref$ = Chain(this.head, tails.splice(0, i - 1)).cache(o, true), this.head = ref$[0], ctx = ref$[1];\n          i = 0;\n        }\n        call.method = '.apply';\n        call.args = [ctx || Literal('null'), JS(args)];\n      }\n    }\n  };\n  prototype.expandBind = function(o){\n    var tails, i, that, obj, key, call;\n    tails = this.tails;\n    i = -1;\n    while (that = tails[++i]) {\n      if (that.symbol !== '.~') {\n        continue;\n      }\n      that.symbol = '';\n      obj = Chain(this.head, tails.splice(0, i)).unwrap();\n      key = tails.shift().key;\n      call = Call.make(Util('bind'), [obj, (key.reserved = true, key)]);\n      this.head = this.newed ? Parens(call, true) : call;\n      i = -1;\n    }\n  };\n  prototype.expandStar = function(o){\n    var tails, i, that, stars, ref$, sub, ref, temps, value, i$, len$, star;\n    tails = this.tails;\n    i = -1;\n    while (that = tails[++i]) {\n      if (that.args || that.stars || that.key instanceof Key) {\n        continue;\n      }\n      stars = that.stars = [];\n      that.eachChild(seek);\n      if (!stars.length) {\n        continue;\n      }\n      ref$ = Chain(this.head, tails.splice(0, i)).unwrap().cache(o), sub = ref$[0], ref = ref$[1], temps = ref$[2];\n      value = Chain(ref, [Index(Key('length'))]).compile(o);\n      for (i$ = 0, len$ = stars.length; i$ < len$; ++i$) {\n        star = stars[i$];\n        star.value = value;\n        star.isAssignable = YES;\n      }\n      this.head = JS(sub.compile(o, LEVEL_CALL) + tails.shift().compile(o));\n      if (temps) {\n        o.scope.free(temps[0]);\n      }\n      i = -1;\n    }\n    function seek(it){\n      if (it.value === '*') {\n        stars.push(it);\n      } else if (!(it instanceof Index)) {\n        it.eachChild(seek);\n      }\n    }\n  };\n  prototype.expandSlice = function(o, assign){\n    var tails, i, tail, ref$, x;\n    tails = this.tails;\n    i = -1;\n    while (tail = tails[++i]) {\n      if ((ref$ = tail.key) != null && ref$.items) {\n        if (tails[i + 1] instanceof Call) {\n          tail.carp('calling a slice');\n        }\n        x = tails.splice(0, i + 1);\n        x = x.pop().key.toSlice(o, Chain(this.head, x).unwrap(), tail.symbol, assign);\n        this.head = (x.front = this.front, x);\n        i = -1;\n      }\n    }\n    return this;\n  };\n  return Chain;\n}(Node));\nexports.Call = Call = (function(superclass){\n  var prototype = extend$((import$(Call, superclass).displayName = 'Call', Call), superclass).prototype, constructor = Call;\n  function Call(args){\n    var splat, i$, len$, i, a, ref$, this$ = this instanceof ctor$ ? this : new ctor$;\n    args || (args = []);\n    if (args.length === 1 && (splat = args[0]) instanceof Splat) {\n      if (splat.filler) {\n        this$.method = '.call';\n        args[0] = Literal('this');\n        args[1] = Splat(Literal('arguments'));\n      } else if (splat.it instanceof Arr) {\n        args = splat.it.items;\n      }\n    } else {\n      for (i$ = 0, len$ = args.length; i$ < len$; ++i$) {\n        i = i$;\n        a = args[i$];\n        if (a.value === '_') {\n          args[i] = Chain(Literal('void'));\n          args[i].placeholder = true;\n          ((ref$ = this$.partialized) != null\n            ? ref$\n            : this$.partialized = []).push(Chain(Literal(i)));\n        }\n      }\n    }\n    this$.args = args;\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.children = ['args'];\n  prototype.show = function(){\n    return [this['new']] + [this.method] + [this.soak ? '?' : void 8];\n  };\n  prototype.compile = function(o){\n    var code, i$, ref$, len$, i, a;\n    code = (this.method || '') + '(' + (this.pipe ? \"\\n\" + o.indent : '');\n    for (i$ = 0, len$ = (ref$ = this.args).length; i$ < len$; ++i$) {\n      i = i$;\n      a = ref$[i$];\n      code += (i ? ', ' : '') + a.compile(o, LEVEL_LIST);\n    }\n    return code + ')';\n  };\n  Call.make = function(callee, args, opts){\n    var call;\n    call = Call(args);\n    if (opts) {\n      import$(call, opts);\n    }\n    return Chain(callee).add(call);\n  };\n  Call.block = function(fun, args, method){\n    var ref$, ref1$;\n    return ref$ = Parens(Chain(fun, [(ref1$ = Call(args), ref1$.method = method, ref1$)]), true), ref$.calling = true, ref$;\n  };\n  Call.back = function(params, node, bound, curried){\n    var fun, ref$, args, index, i$, len$, a;\n    fun = Fun(params, void 8, bound, curried);\n    if (fun['void'] = node.op === '!') {\n      node = node.it;\n    }\n    if (node instanceof Label) {\n      fun.name = node.label;\n      fun.labeled = true;\n      node = node.it;\n    }\n    if (!fun['void'] && (fun['void'] = node.op === '!')) {\n      node = node.it;\n    }\n    if ((ref$ = node.getCall()) != null) {\n      ref$.partialized = null;\n    }\n    args = (node.getCall() || (node = Chain(node).add(Call())).getCall()).args;\n    index = 0;\n    for (i$ = 0, len$ = args.length; i$ < len$; ++i$) {\n      a = args[i$];\n      if (a.placeholder) {\n        break;\n      }\n      ++index;\n    }\n    return node.back = (args[index] = fun).body, node;\n  };\n  Call['let'] = function(args, body){\n    var params, res$, i$, len$, i, a, that, gotThis;\n    res$ = [];\n    for (i$ = 0, len$ = args.length; i$ < len$; ++i$) {\n      i = i$;\n      a = args[i$];\n      if (that = a.op === '=' && !a.logic && a.right) {\n        args[i] = that;\n        if (i === 0 && (gotThis = a.left.value === 'this')) {\n          continue;\n        }\n        res$.push(a.left);\n      } else {\n        res$.push(Var(a.varName() || a.carp('invalid \"let\" argument')));\n      }\n    }\n    params = res$;\n    gotThis || args.unshift(Literal('this'));\n    return this.block(Fun(params, body), args, '.call');\n  };\n  Call.where = function(args, body){\n    var lines, res$, i$, len$, a, params, i;\n    res$ = [];\n    for (i$ = 0, len$ = args.length; i$ < len$; ++i$) {\n      a = args[i$];\n      if (a.op === '=' && !a.logic) {\n        res$.push(a);\n      }\n    }\n    lines = res$;\n    res$ = [];\n    for (i$ = 0, len$ = args.length; i$ < len$; ++i$) {\n      i = i$;\n      a = args[i$];\n      if (a.op === '=' && !a.logic) {\n        args[i] = Literal('void');\n        res$.push(a.left);\n      } else {\n        res$.push(Var(a.varName() || a.carp('invalid \"let\" argument')));\n      }\n    }\n    params = res$;\n    args.unshift(Literal('this'));\n    return this.block(Fun(params, Block(lines.concat(body.lines))), args, '.call');\n  };\n  return Call;\n}(Node));\nList = (function(superclass){\n  var prototype = extend$((import$(List, superclass).displayName = 'List', List), superclass).prototype, constructor = List;\n  prototype.children = ['items'];\n  prototype.show = function(){\n    return this.name;\n  };\n  prototype.named = function(name){\n    this.name = name;\n    return this;\n  };\n  prototype.isEmpty = function(){\n    return !this.items.length;\n  };\n  prototype.assigns = function(it){\n    var i$, ref$, len$, node;\n    for (i$ = 0, len$ = (ref$ = this.items).length; i$ < len$; ++i$) {\n      node = ref$[i$];\n      if (node.assigns(it)) {\n        return true;\n      }\n    }\n  };\n  List.compile = function(o, items, deepEq){\n    var indent, level, code, i, that, target;\n    switch (items.length) {\n    case 0:\n      return '';\n    case 1:\n      return items[0].compile(o, LEVEL_LIST);\n    }\n    indent = o.indent, level = o.level;\n    o.indent = indent + TAB;\n    o.level = LEVEL_LIST;\n    code = items[i = 0].compile(o);\n    while (that = items[++i]) {\n      code += ', ';\n      target = that;\n      if (deepEq) {\n        if (target instanceof Var && target.value === '_') {\n          target = Obj([Prop(Key('__placeholder__'), Literal(true))]);\n        } else if (target instanceof Obj || target instanceof Arr) {\n          target.deepEq = true;\n        }\n      }\n      code += target.compile(o);\n    }\n    if (~code.indexOf('\\n')) {\n      code = \"\\n\" + o.indent + code + \"\\n\" + indent;\n    }\n    o.indent = indent;\n    o.level = level;\n    return code;\n  };\n  function List(){\n    List.superclass.apply(this, arguments);\n  }\n  return List;\n}(Node));\nexports.Obj = Obj = (function(superclass){\n  var prototype = extend$((import$(Obj, superclass).displayName = 'Obj', Obj), superclass).prototype, constructor = Obj;\n  function Obj(items){\n    var this$ = this instanceof ctor$ ? this : new ctor$;\n    this$.items = items || [];\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.asObj = THIS;\n  prototype.toSlice = function(o, base, symbol, assign){\n    var items, ref$, ref, temps, i$, len$, i, node, name, chain, logic, key, val;\n    items = this.items;\n    if (items.length > 1) {\n      ref$ = base.cache(o), base = ref$[0], ref = ref$[1], temps = ref$[2];\n    } else {\n      ref = base;\n    }\n    for (i$ = 0, len$ = items.length; i$ < len$; ++i$) {\n      i = i$;\n      node = items[i$];\n      if (node.comment) {\n        continue;\n      }\n      if (node instanceof Prop || node instanceof Splat) {\n        node[name = (ref$ = node.children)[ref$.length - 1]] = chain = Chain(base, [Index(node[name].maybeKey())]);\n      } else {\n        if (logic = node.getDefault()) {\n          node = node.first;\n        }\n        if (node instanceof Parens) {\n          ref$ = node.cache(o, true), key = ref$[0], node = ref$[1];\n          if (assign) {\n            ref$ = [node, key], key = ref$[0], node = ref$[1];\n          }\n          key = Parens(key);\n        } else {\n          key = node;\n        }\n        val = chain = Chain(base, [Index(node.maybeKey(), symbol)]);\n        if (logic) {\n          val = (logic.first = val, logic);\n        }\n        items[i] = Prop(key, val);\n      }\n      base = ref;\n    }\n    chain || this.carp('empty slice');\n    if (temps) {\n      (chain.head = Var(temps[0])).temp = true;\n    }\n    return this;\n  };\n  prototype.compileNode = function(o){\n    var items, code, idt, dic, i$, len$, i, node, logic, rest, ref$, multi, key, val;\n    items = this.items;\n    if (!items.length) {\n      return this.front ? '({})' : '{}';\n    }\n    code = '';\n    idt = '\\n' + (o.indent += TAB);\n    dic = {};\n    for (i$ = 0, len$ = items.length; i$ < len$; ++i$) {\n      i = i$;\n      node = items[i$];\n      if (node.comment) {\n        code += idt + node.compile(o);\n        continue;\n      }\n      if (logic = node.getDefault()) {\n        node = node.first;\n      }\n      if (node instanceof Splat || (node.key || node) instanceof Parens) {\n        rest = items.slice(i);\n        break;\n      }\n      if (logic) {\n        if (node instanceof Prop) {\n          node.val = (logic.first = node.val, logic);\n        } else {\n          node = Prop(node, (logic.first = node, logic));\n        }\n      }\n      if (this.deepEq && node instanceof Prop) {\n        if (node.val instanceof Var && node.val.value === '_') {\n          node.val = Obj([Prop(Key('__placeholder__'), Literal(true))]);\n        } else if ((ref$ = node.val) instanceof Obj || ref$ instanceof Arr) {\n          node.val.deepEq = true;\n        }\n      }\n      if (multi) {\n        code += ',';\n      } else {\n        multi = true;\n      }\n      code += idt + (node instanceof Prop\n        ? (key = node.key, val = node.val, node.accessor\n          ? node.compileAccessor(o, key = key.compile(o))\n          : (val.ripName(key), (key = key.compile(o)) + \": \" + val.compile(o, LEVEL_LIST)))\n        : (key = node.compile(o)) + \": \" + key);\n      ID.test(key) || (key = Function(\"return \" + key)());\n      if (!(dic[key + \".\"] ^= 1)) {\n        node.carp(\"duplicate property \\\"\" + key + \"\\\"\");\n      }\n    }\n    code = \"{\" + (code && code + '\\n' + this.tab) + \"}\";\n    rest && (code = Import(JS(code), Obj(rest)).compile((o.indent = this.tab, o)));\n    if (this.front && '{' === code.charAt()) {\n      return \"(\" + code + \")\";\n    } else {\n      return code;\n    }\n  };\n  return Obj;\n}(List));\nexports.Prop = Prop = (function(superclass){\n  var prototype = extend$((import$(Prop, superclass).displayName = 'Prop', Prop), superclass).prototype, constructor = Prop;\n  function Prop(key, val){\n    var that, i$, len$, fun, this$ = this instanceof ctor$ ? this : new ctor$;\n    this$.key = key;\n    this$.val = val;\n    if (key.value === '...') {\n      return Splat(this$.val);\n    }\n    if (that = val.getAccessors()) {\n      this$.val = that;\n      for (i$ = 0, len$ = that.length; i$ < len$; ++i$) {\n        fun = that[i$];\n        fun.x = (fun['void'] = fun.params.length) ? 's' : 'g';\n      }\n      this$['accessor'] = 'accessor';\n    }\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.children = ['key', 'val'];\n  prototype.show = function(){\n    return this.accessor;\n  };\n  prototype.assigns = function(it){\n    var ref$;\n    return typeof (ref$ = this.val).assigns === 'function' ? ref$.assigns(it) : void 8;\n  };\n  prototype.compileAccessor = function(o, key){\n    var funs, fun;\n    funs = this.val;\n    if (funs[1] && funs[0].params.length + funs[1].params.length !== 1) {\n      funs[0].carp('invalid accessor parameter');\n    }\n    return (function(){\n      var i$, ref$, len$, results$ = [];\n      for (i$ = 0, len$ = (ref$ = funs).length; i$ < len$; ++i$) {\n        fun = ref$[i$];\n        fun.accessor = true;\n        results$.push(fun.x + \"et \" + key + fun.compile(o, LEVEL_LIST).slice(8));\n      }\n      return results$;\n    }()).join(',\\n' + o.indent);\n  };\n  prototype.compileDescriptor = function(o){\n    var obj, i$, ref$, len$, fun;\n    obj = Obj();\n    for (i$ = 0, len$ = (ref$ = this.val).length; i$ < len$; ++i$) {\n      fun = ref$[i$];\n      obj.items.push(Prop(Key(fun.x + 'et'), fun));\n    }\n    obj.items.push(Prop(Key('configurable'), Literal(true)));\n    obj.items.push(Prop(Key('enumerable'), Literal(true)));\n    return obj.compile(o);\n  };\n  return Prop;\n}(Node));\nexports.Arr = Arr = (function(superclass){\n  var prototype = extend$((import$(Arr, superclass).displayName = 'Arr', Arr), superclass).prototype, constructor = Arr;\n  function Arr(items){\n    var this$ = this instanceof ctor$ ? this : new ctor$;\n    this$.items = items || [];\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.isArray = YES;\n  prototype.asObj = function(){\n    var i, item;\n    return Obj((function(){\n      var i$, ref$, len$, results$ = [];\n      for (i$ = 0, len$ = (ref$ = this.items).length; i$ < len$; ++i$) {\n        i = i$;\n        item = ref$[i$];\n        results$.push(Prop(Literal(i), item));\n      }\n      return results$;\n    }.call(this)));\n  };\n  prototype.toSlice = function(o, base, symbol){\n    var items, ref$, ref, i$, len$, i, item, splat, chain;\n    items = this.items;\n    if (items.length > 1) {\n      ref$ = base.cache(o), base = ref$[0], ref = ref$[1];\n    } else {\n      ref = base;\n    }\n    for (i$ = 0, len$ = items.length; i$ < len$; ++i$) {\n      i = i$;\n      item = items[i$];\n      if (splat = item instanceof Splat) {\n        item = item.it;\n      }\n      if (item.isEmpty()) {\n        continue;\n      }\n      chain = Chain(base, [Index(item, symbol)]);\n      items[i] = splat ? Splat(chain) : chain;\n      base = ref;\n    }\n    chain || this.carp('empty slice');\n    return this;\n  };\n  prototype.compile = function(o){\n    var items, code;\n    items = this.items;\n    if (!items.length) {\n      return '[]';\n    }\n    if (code = Splat.compileArray(o, items)) {\n      return this.newed ? \"(\" + code + \")\" : code;\n    }\n    return \"[\" + List.compile(o, items, this.deepEq) + \"]\";\n  };\n  Arr.maybe = function(nodes){\n    if (nodes.length === 1 && !(nodes[0] instanceof Splat)) {\n      return nodes[0];\n    }\n    return constructor(nodes);\n  };\n  Arr.wrap = function(it){\n    return constructor([Splat((it.isArray = YES, it))]);\n  };\n  return Arr;\n}(List));\nexports.Unary = Unary = (function(superclass){\n  var prototype = extend$((import$(Unary, superclass).displayName = 'Unary', Unary), superclass).prototype, constructor = Unary;\n  function Unary(op, it, flag){\n    var that, i$, ref$, len$, node, this$ = this instanceof ctor$ ? this : new ctor$;\n    if (it != null) {\n      if (that = !flag && it.unaries) {\n        that.push(op);\n        return it;\n      }\n      switch (op) {\n      case '!':\n        if (flag) {\n          break;\n        }\n        if (it instanceof Fun && !it['void']) {\n          return it['void'] = true, it;\n        }\n        return it.invert();\n      case '++':\n      case '--':\n        if (flag) {\n          this$.post = true;\n        }\n        break;\n      case 'new':\n        if (it instanceof Existence && !it.negated) {\n          it = Chain(it).add(Call());\n        }\n        it.newed = true;\n        for (i$ = 0, len$ = (ref$ = it.tails || '').length; i$ < len$; ++i$) {\n          node = ref$[i$];\n          if (node instanceof Call && !node['new']) {\n            if (node.method === '.call') {\n              node.args.shift();\n            }\n            node['new'] = 'new';\n            node.method = '';\n            return it;\n          }\n        }\n        break;\n      case '~':\n        if (it instanceof Fun && it.statement && !it.bound) {\n          return it.bound = 'this$', it;\n        }\n      }\n    }\n    this$.op = op;\n    this$.it = it;\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.children = ['it'];\n  prototype.show = function(){\n    return [this.post ? '@' : void 8] + this.op;\n  };\n  prototype.isCallable = function(){\n    var ref$;\n    return ((ref$ = this.op) == 'do' || ref$ == 'new' || ref$ == 'delete') || this.it == null;\n  };\n  prototype.isArray = function(){\n    return this.it instanceof Arr && this.it.items.length || this.it instanceof Chain && this.it.isArray();\n  };\n  prototype.isString = function(){\n    var ref$;\n    return (ref$ = this.op) == 'typeof' || ref$ == 'classof';\n  };\n  prototype.invert = function(){\n    var ref$;\n    if (this.op === '!' && ((ref$ = this.it.op) == '!' || ref$ == '<' || ref$ == '>' || ref$ == '<=' || ref$ == '>=' || ref$ == 'of' || ref$ == 'instanceof')) {\n      return this.it;\n    }\n    return constructor('!', this, true);\n  };\n  prototype.unfoldSoak = function(o){\n    var ref$;\n    return ((ref$ = this.op) == '++' || ref$ == '--' || ref$ == 'delete') && this.it != null && If.unfoldSoak(o, this, 'it');\n  };\n  prototype.getAccessors = function(){\n    var items;\n    if (this.op !== '~') {\n      return;\n    }\n    if (this.it instanceof Fun) {\n      return [this.it];\n    }\n    if (this.it instanceof Arr) {\n      items = this.it.items;\n      if (!items[2] && items[0] instanceof Fun && items[1] instanceof Fun) {\n        return items;\n      }\n    }\n  };\n  function crement(it){\n    return {\n      '++': 'in',\n      '--': 'de'\n    }[it] + 'crement';\n  }\n  prototype.compileNode = function(o){\n    var that, op, it, x, code;\n    if (this.it == null) {\n      return this.compileAsFunc(o);\n    }\n    if (that = this.compileSpread(o)) {\n      return that;\n    }\n    op = this.op, it = this.it;\n    switch (op) {\n    case '!':\n      it.cond = true;\n      break;\n    case 'new':\n      it.isCallable() || it.carp('invalid constructor');\n      break;\n    case 'do':\n      if (o.level === LEVEL_TOP && it instanceof Fun && it.isStatement()) {\n        return it.compile(o) + \" \" + Unary('do', Var(it.name)).compile(o);\n      }\n      x = Parens(it instanceof Existence && !it.negated\n        ? Chain(it).add(Call())\n        : Call.make(it));\n      return (x.front = this.front, x.newed = this.newed, x).compile(o);\n    case 'delete':\n      if (it instanceof Var || !it.isAssignable()) {\n        this.carp('invalid delete');\n      }\n      if (o.level && !this['void']) {\n        return this.compilePluck(o);\n      }\n      break;\n    case '++':\n    case '--':\n      it.isAssignable() || this.carp('invalid ' + crement(op));\n      if (that = it instanceof Var && o.scope.checkReadOnly(it.value)) {\n        this.carp(crement(op) + \" of \" + that + \" \\\"\" + it.value + \"\\\"\", ReferenceError);\n      }\n      if (this.post) {\n        it.front = this.front;\n      }\n      break;\n    case '^^':\n      return util('clone') + \"(\" + it.compile(o, LEVEL_LIST) + \")\";\n    case 'jsdelete':\n      return \"delete \" + it.compile(o, LEVEL_LIST);\n    case 'classof':\n      return util('toString') + \".call(\" + it.compile(o, LEVEL_LIST) + \").slice(8, -1)\";\n    }\n    code = it.compile(o, LEVEL_OP + PREC.unary);\n    if (!code) {\n      console.log(it);\n      console.log(it.prototype);\n    }\n    if (this.post) {\n      code += op;\n    } else {\n      if ((op == 'new' || op == 'typeof' || op == 'delete') || (op == '+' || op == '-') && op === code.charAt()) {\n        op += ' ';\n      }\n      code = op + code;\n    }\n    if (o.level < LEVEL_CALL) {\n      return code;\n    } else {\n      return \"(\" + code + \")\";\n    }\n  };\n  prototype.compileSpread = function(o){\n    var it, ops, them, i$, len$, i, node, sp, j$, op, lat, ref$;\n    it = this.it;\n    ops = [this];\n    for (; it instanceof constructor; it = it.it) {\n      ops.push(it);\n    }\n    if (!((it = it.expandSlice(o).unwrap()) instanceof Arr && (them = it.items).length)) {\n      return '';\n    }\n    for (i$ = 0, len$ = them.length; i$ < len$; ++i$) {\n      i = i$;\n      node = them[i$];\n      if (sp = node instanceof Splat) {\n        node = node.it;\n      }\n      for (j$ = ops.length - 1; j$ >= 0; --j$) {\n        op = ops[j$];\n        node = constructor(op.op, node, op.post);\n      }\n      them[i] = sp ? lat = Splat(node) : node;\n    }\n    if (!lat && (this['void'] || !o.level)) {\n      it = (ref$ = Block(them), ref$.front = this.front, ref$['void'] = true, ref$);\n    }\n    return it.compile(o, LEVEL_PAREN);\n  };\n  prototype.compilePluck = function(o){\n    var ref$, get, del, code, ref;\n    ref$ = Chain(this.it).cacheReference(o), get = ref$[0], del = ref$[1];\n    code = this.assigned\n      ? ''\n      : (ref = o.scope.temporary()) + \" = \";\n    code += get.compile(o, LEVEL_LIST) + \", delete \" + del.compile(o, LEVEL_LIST);\n    if (this.assigned) {\n      return code;\n    }\n    code += \", \" + o.scope.free(ref);\n    if (o.level < LEVEL_LIST) {\n      return code;\n    } else {\n      return \"(\" + code + \")\";\n    }\n  };\n  prototype.compileAsFunc = function(o){\n    if (this.op === '!') {\n      return util('not');\n    } else {\n      return \"(\" + Fun([], Block(Unary(this.op, Chain(Var('it'))))).compile(o) + \")\";\n    }\n  };\n  return Unary;\n}(Node));\nexports.Binary = Binary = (function(superclass){\n  var COMPARER, INVERSIONS, prototype = extend$((import$(Binary, superclass).displayName = 'Binary', Binary), superclass).prototype, constructor = Binary;\n  function Binary(op, first, second, destructuring){\n    var logic, that, ref$, this$ = this instanceof ctor$ ? this : new ctor$;\n    if (destructuring) {\n      logic = op.logic;\n      if (toString$.call(destructuring).slice(8, -1) === 'String') {\n        logic = destructuring;\n      }\n      op = (function(){\n        switch (false) {\n        case !(that = logic):\n          return that;\n        case op !== '=':\n          return '?';\n        default:\n          return '=';\n        }\n      }());\n    }\n    this$.partial = first == null || second == null;\n    if (!this$.partial) {\n      if ('=' === op.charAt(op.length - 1) && ((ref$ = op.charAt(op.length - 2)) != '=' && ref$ != '<' && ref$ != '>' && ref$ != '!')) {\n        return Assign(first.unwrap(), second, op);\n      }\n      switch (op) {\n      case 'in':\n        return new In(first, second);\n      case 'with':\n        return new Import(Unary('^^', first), second, false);\n      case '<<<':\n      case '<<<<':\n        return Import(first, second, op === '<<<<');\n      case '<|':\n        return Block(first).pipe(second, op);\n      case '|>':\n        return Block(second).pipe(first, '<|');\n      }\n    }\n    this$.op = op;\n    this$.first = first;\n    this$.second = second;\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.children = ['first', 'second'];\n  prototype.show = function(){\n    return this.op;\n  };\n  prototype.isCallable = function(){\n    var ref$;\n    return this.partial || ((ref$ = this.op) == '&&' || ref$ == '||' || ref$ == '?' || ref$ == '!?' || ref$ == '<<' || ref$ == '>>') && this.first.isCallable() && this.second.isCallable();\n  };\n  prototype.isArray = function(){\n    switch (this.op) {\n    case '*':\n      return this.first.isArray();\n    case '/':\n      return this.second.isMatcher();\n    }\n  };\n  prototype.isString = function(){\n    switch (this.op) {\n    case '+':\n    case '*':\n      return this.first.isString() || this.second.isString();\n    case '-':\n      return this.second.isMatcher();\n    }\n  };\n  COMPARER = /^(?:[!=]=|[<>])=?$/;\n  INVERSIONS = {\n    '===': '!==',\n    '!==': '===',\n    '==': '!=',\n    '!=': '=='\n  };\n  prototype.invert = function(){\n    var that;\n    if (that = !COMPARER.test(this.second.op) && INVERSIONS[this.op]) {\n      this.op = that;\n      return this;\n    }\n    return Unary('!', Parens(this), true);\n  };\n  prototype.invertIt = function(){\n    this.inverted = true;\n    return this;\n  };\n  prototype.getDefault = function(){\n    switch (this.op) {\n    case '?':\n    case '||':\n    case '&&':\n    case '!?':\n      return this;\n    }\n  };\n  prototype.xorChildren = function(test){\n    var ref$, ref1$, first;\n    if (!(!(ref$ = first = test(this.first)) !== !(ref1$ = test(this.second)) && (ref$ || ref1$))) {\n      return false;\n    }\n    return first\n      ? [this.first, this.second]\n      : [this.second, this.first];\n  };\n  prototype.compileNode = function(o){\n    var top, rite, items, that, ref$, code, level;\n    if (this.partial) {\n      return this.compilePartial(o);\n    }\n    switch (this.op) {\n    case '?':\n    case '!?':\n      return this.compileExistence(o);\n    case '*':\n      if (this.second.isString()) {\n        return this.compileJoin(o);\n      }\n      if (this.first.isString() || this.first.isArray()) {\n        return this.compileRepeat(o);\n      }\n      break;\n    case '-':\n      if (this.second.isMatcher()) {\n        return this.compileRemove(o);\n      }\n      break;\n    case '/':\n      if (this.second.isMatcher()) {\n        return this.compileSplit(o);\n      }\n      break;\n    case '**':\n    case '^':\n      return this.compilePow(o);\n    case '<?':\n    case '>?':\n      return this.compileMinMax(o);\n    case '<<':\n    case '>>':\n      return this.compileCompose(o);\n    case '+++':\n      return this.compileConcat(o);\n    case '%%':\n      return this.compileMod(o);\n    case 'xor':\n      return this.compileXor(o);\n    case '&&':\n    case '||':\n      if (top = this['void'] || !o.level) {\n        this.second['void'] = true;\n      }\n      if (top || this.cond) {\n        this.first.cond = true;\n        this.second.cond = true;\n      }\n      break;\n    case 'instanceof':\n      rite = this.second.expandSlice(o).unwrap(), items = rite.items;\n      if (rite instanceof Arr) {\n        if (items[1]) {\n          return this.compileAnyInstanceOf(o, items);\n        }\n        this.second = items[0] || rite;\n      }\n      this.second.isCallable() || this.second.carp('invalid instanceof operand');\n      break;\n    case '====':\n    case '!===':\n      this.op = this.op.slice(0, 3);\n      // fallthrough\n    case '<==':\n    case '>==':\n    case '<<=':\n    case '>>=':\n      return this.compileDeepEq(o);\n    default:\n      if (COMPARER.test(this.op)) {\n        if (that = ((ref$ = this.op) == '===' || ref$ == '!==') && this.xorChildren(function(it){\n          return it.isRegex();\n        })) {\n          return this.compileRegexEquals(o, that);\n        }\n        if (this.op === '===' && (this.first instanceof Literal && this.second instanceof Literal) && this.first.isWhat() !== this.second.isWhat()) {\n          if (typeof console != 'undefined' && console !== null) {\n            console.warn(\"WARNING: strict comparison of two different types will always be false: \" + this.first.value + \" == \" + this.second.value);\n          }\n        }\n      }\n      if (COMPARER.test(this.op) && COMPARER.test(this.second.op)) {\n        return this.compileChain(o);\n      }\n    }\n    this.first.front = this.front;\n    code = this.first.compile(o, level = LEVEL_OP + PREC[this.op]) + \" \" + this.mapOp(this.op) + \" \" + this.second.compile(o, level);\n    if (o.level <= level) {\n      return code;\n    } else {\n      return \"(\" + code + \")\";\n    }\n  };\n  prototype.mapOp = function(op){\n    var that;\n    switch (false) {\n    case !(that = op.match(/\\.([&\\|\\^]|<<|>>>?)\\./)):\n      return that[1];\n    case op !== 'of':\n      return 'in';\n    default:\n      return op;\n    }\n  };\n  prototype.compileChain = function(o){\n    var code, level, ref$, sub;\n    code = this.first.compile(o, level = LEVEL_OP + PREC[this.op]);\n    ref$ = this.second.first.cache(o, true), sub = ref$[0], this.second.first = ref$[1];\n    code += \" \" + this.op + \" \" + sub.compile(o, level) + \" && \" + this.second.compile(o, LEVEL_OP);\n    if (o.level <= LEVEL_OP) {\n      return code;\n    } else {\n      return \"(\" + code + \")\";\n    }\n  };\n  prototype.compileExistence = function(o){\n    var x, ref$;\n    if (this.op === '!?') {\n      x = (ref$ = If(Existence(this.first), this.second), ref$.cond = this.cond, ref$['void'] = this['void'] || !o.level, ref$);\n      return x.compileExpression(o);\n    }\n    if (this['void'] || !o.level) {\n      x = Binary('&&', Existence(this.first, true), this.second);\n      return (x['void'] = true, x).compileNode(o);\n    }\n    x = this.first.cache(o, true);\n    return If(Existence(x[0]), x[1]).addElse(this.second).compileExpression(o);\n  };\n  prototype.compileAnyInstanceOf = function(o, items){\n    var ref$, sub, ref, test, i$, len$, item;\n    ref$ = this.first.cache(o), sub = ref$[0], ref = ref$[1], this.temps = ref$[2];\n    test = Binary('instanceof', sub, items.shift());\n    for (i$ = 0, len$ = items.length; i$ < len$; ++i$) {\n      item = items[i$];\n      test = Binary('||', test, Binary('instanceof', ref, item));\n    }\n    return Parens(test).compile(o);\n  };\n  prototype.compileMinMax = function(o){\n    var lefts, rites, x;\n    lefts = this.first.cache(o, true);\n    rites = this.second.cache(o, true);\n    x = Binary(this.op.charAt(), lefts[0], rites[0]);\n    return If(x, lefts[1]).addElse(rites[1]).compileExpression(o);\n  };\n  prototype.compileMethod = function(o, klass, method, arg){\n    var args;\n    args = [this.second].concat(arg || []);\n    if (this.first[\"is\" + klass]()) {\n      return Chain(this.first, [Index(Key(method)), Call(args)]).compile(o);\n    } else {\n      args.unshift(this.first);\n      return Call.make(JS(util(method) + '.call'), args).compile(o);\n    }\n  };\n  prototype.compileJoin = function(it){\n    return this.compileMethod(it, 'Array', 'join');\n  };\n  prototype.compileRemove = function(it){\n    return this.compileMethod(it, 'String', 'replace', JS(\"''\"));\n  };\n  prototype.compileSplit = function(it){\n    return this.compileMethod(it, 'String', 'split');\n  };\n  prototype.compileRepeat = function(o){\n    var x, n, items, arr, that, refs, i$, len$, i, item, ref$, q;\n    x = this.first, n = this.second;\n    items = (x = x.expandSlice(o).unwrap()).items;\n    arr = x.isArray() && 'Array';\n    if (that = items && Splat.compileArray(o, items)) {\n      x = JS(that);\n      items = null;\n    }\n    if (arr && !items || !(n instanceof Literal && n.value < 0x20)) {\n      return Call.make(Util('repeat' + (arr || 'String')), [x, n]).compile(o);\n    }\n    n = +n.value;\n    if (1 <= n && n < 2) {\n      return x.compile(o);\n    }\n    if (items) {\n      if (n < 1) {\n        return Block(items).add(JS('[]')).compile(o);\n      }\n      refs = [];\n      for (i$ = 0, len$ = items.length; i$ < len$; ++i$) {\n        i = i$;\n        item = items[i$];\n        ref$ = item.cache(o, 1), items[i] = ref$[0], refs[refs.length] = ref$[1];\n      }\n      items.push((ref$ = JS(), ref$.compile = function(){\n        return (repeatString$(\", \" + List.compile(o, refs), n - 1)).slice(2);\n      }, ref$));\n      return x.compile(o);\n    } else if (x instanceof Literal) {\n      return (q = (x = x.compile(o)).charAt()) + repeatString$(x.slice(1, -1) + \"\", n) + q;\n    } else {\n      if (n < 1) {\n        return Block(x.it).add(JS(\"''\")).compile(o);\n      }\n      x = (refs = x.cache(o, 1, LEVEL_OP))[0] + repeatString$(\" + \" + refs[1], n - 1);\n      if (o.level < LEVEL_OP + PREC['+']) {\n        return x;\n      } else {\n        return \"(\" + x + \")\";\n      }\n    }\n  };\n  prototype.compilePow = function(o){\n    return Call.make(JS('Math.pow'), [this.first, this.second]).compile(o);\n  };\n  prototype.compileConcat = function(o){\n    var f;\n    f = function(x){\n      switch (false) {\n      case !(x instanceof Binary && x.op === '+++'):\n        return f(x.first).concat(f(x.second));\n      default:\n        return [x];\n      }\n    };\n    return Chain(this.first).add(Index(Key('concat'), '.', true)).add(Call(f(this.second))).compile(o);\n  };\n  prototype.compileCompose = function(o){\n    var f, args;\n    f = function(x){\n      var ref$;\n      switch (false) {\n      case !(x instanceof Binary && ((ref$ = x.op) == '<<' || ref$ == '>>')):\n        return f(x.first).concat(f(x.second));\n      default:\n        return [x];\n      }\n    };\n    args = [this.first].concat(f(this.second));\n    if (this.op === '>>') {\n      args = args.reverse();\n    }\n    return Chain(Var(util('compose'))).add(Call([Arr(args)])).compile(o);\n  };\n  prototype.compileMod = function(o){\n    var ref, code;\n    ref = o.scope.temporary();\n    code = \"((\" + this.first.compile(o) + \") % (\" + ref + \" = \" + this.second.compile(o) + \") + \" + ref + \") % \" + ref;\n    o.scope.free(ref);\n    return code;\n  };\n  prototype.compilePartial = function(o){\n    var vit, x, y;\n    vit = Var('it');\n    switch (false) {\n    case !(this.first == null && this.second == null):\n      x = Var('x$');\n      y = Var('y$');\n      return Fun([x, y], Block(Binary(this.op, x, y).invertCheck(this)), false, true).compile(o);\n    case this.first == null:\n      return \"(\" + Fun([vit], Block(Binary(this.op, this.first, vit).invertCheck(this))).compile(o) + \")\";\n    default:\n      return \"(\" + Fun([vit], Block(Binary(this.op, vit, this.second).invertCheck(this))).compile(o) + \")\";\n    }\n  };\n  prototype.compileRegexEquals = function(o, arg$){\n    var regex, target;\n    regex = arg$[0], target = arg$[1];\n    if (this.op === '===') {\n      return Chain(regex).add(Index(Key('exec'))).add(Call([target])).compile(o);\n    } else {\n      return Unary('!', Chain(regex).add(Index(Key('test'))).add(Call([target]))).compile(o);\n    }\n  };\n  prototype.compileDeepEq = function(o){\n    var ref$, negate, i$, len$, x, r;\n    if ((ref$ = this.op) == '>==' || ref$ == '>>=') {\n      ref$ = [this.second, this.first], this.first = ref$[0], this.second = ref$[1];\n      this.op = this.op === '>==' ? '<==' : '<<=';\n    }\n    if (this.op === '!==') {\n      this.op = '===';\n      negate = true;\n    }\n    for (i$ = 0, len$ = (ref$ = [this.first, this.second]).length; i$ < len$; ++i$) {\n      x = ref$[i$];\n      if (x instanceof Obj || x instanceof Arr) {\n        x.deepEq = true;\n      }\n    }\n    r = Chain(Var(util('deepEq'))).add(Call([this.first, this.second, Literal(\"'\" + this.op + \"'\")]));\n    return (negate ? Unary('!', r) : r).compile(o);\n  };\n  prototype.compileXor = function(o){\n    var left, right;\n    left = Chain(this.first).cacheReference(o);\n    right = Chain(this.second).cacheReference(o);\n    return Binary('&&', Binary('!==', Unary('!', left[0]), Unary('!', right[0])), Parens(Binary('||', left[1], right[1]))).compile(o);\n  };\n  return Binary;\n}(Node));\nexports.Assign = Assign = (function(superclass){\n  var prototype = extend$((import$(Assign, superclass).displayName = 'Assign', Assign), superclass).prototype, constructor = Assign;\n  function Assign(left, rite, op, logic, defParam){\n    var this$ = this instanceof ctor$ ? this : new ctor$;\n    this$.left = left;\n    this$.op = op || '=';\n    this$.logic = logic || this$.op.logic;\n    this$.defParam = defParam;\n    this$.op += '';\n    this$[rite instanceof Node ? 'right' : 'unaries'] = rite;\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.children = ['left', 'right'];\n  prototype.show = function(){\n    return [void 8].concat(this.unaries).reverse().join(' ') + [this.logic] + this.op;\n  };\n  prototype.assigns = function(it){\n    return this.left.assigns(it);\n  };\n  prototype.delegate(['isCallable', 'isRegex'], function(it){\n    var ref$;\n    return ((ref$ = this.op) == '=' || ref$ == ':=') && this.right[it]();\n  });\n  prototype.isArray = function(){\n    switch (this.op) {\n    case '=':\n    case ':=':\n      return this.right.isArray();\n    case '/=':\n      return this.right.isMatcher();\n    }\n  };\n  prototype.isString = function(){\n    switch (this.op) {\n    case '=':\n    case ':=':\n    case '+=':\n    case '*=':\n      return this.right.isString();\n    case '-=':\n      return this.right.isMatcher();\n    }\n  };\n  prototype.unfoldSoak = function(o){\n    var that, ref$, rite, temps;\n    if (this.left instanceof Existence) {\n      if (that = (ref$ = this.left = this.left.it).name, delete ref$.name, that) {\n        rite = this.right;\n        rite = Assign(this.right = Var(that), rite);\n      } else {\n        ref$ = this.right.cache(o), rite = ref$[0], this.right = ref$[1], temps = ref$[2];\n      }\n      return ref$ = If(Existence(rite), this), ref$.temps = temps, ref$.cond = this.cond, ref$['void'] = this['void'], ref$;\n    }\n    return If.unfoldSoak(o, this, 'left');\n  };\n  prototype.unfoldAssign = function(){\n    return this.access && this;\n  };\n  prototype.compileNode = function(o){\n    var left, ref$, i$, len$, op, right, reft, sign, name, lvar, del, that, protoSplit, dotSplit, code, empty, res;\n    if (this.left instanceof Slice && this.op === '=') {\n      return this.compileSplice(o);\n    }\n    left = this.left.expandSlice(o, true).unwrap();\n    if (!this.right) {\n      left.isAssignable() || left.carp('invalid unary assign');\n      ref$ = Chain(left).cacheReference(o), left = ref$[0], this.right = ref$[1];\n      for (i$ = 0, len$ = (ref$ = this.unaries).length; i$ < len$; ++i$) {\n        op = ref$[i$];\n        this.right = Unary(op, this.right);\n      }\n    }\n    if (left.isEmpty()) {\n      return (ref$ = Parens(this.right), ref$.front = this.front, ref$.newed = this.newed, ref$).compile(o);\n    }\n    if (left.getDefault()) {\n      this.right = Binary(left.op, this.right, left.second);\n      left = left.first;\n    }\n    if (left.items) {\n      return this.compileDestructuring(o, left);\n    }\n    left.isAssignable() || left.carp('invalid assign');\n    if (this.logic) {\n      return this.compileConditional(o, left);\n    }\n    op = this.op, right = this.right;\n    if (op == '<?=' || op == '>?=') {\n      return this.compileMinMax(o, left, right);\n    }\n    if ((op == '**=' || op == '^=' || op == '%%=') || op === '*=' && right.isString() || (op == '-=' || op == '/=') && right.isMatcher()) {\n      ref$ = Chain(left).cacheReference(o), left = ref$[0], reft = ref$[1];\n      right = Binary(op.slice(0, -1), reft, right);\n      op = ':=';\n    }\n    if (op == '.&.=' || op == '.|.=' || op == '.^.=' || op == '.<<.=' || op == '.>>.=' || op == '.>>>.=') {\n      op = op.slice(1, -2) + '=';\n    }\n    (right = right.unparen()).ripName(left = left.unwrap());\n    sign = op.replace(':', '');\n    name = (left.front = true, left).compile(o, LEVEL_LIST);\n    if (lvar = left instanceof Var) {\n      del = right.op === 'delete';\n      if (op === '=') {\n        o.scope.declare(name, left, this['const'] || !this.defParam && o['const'] && '$' !== name.slice(-1));\n      } else if (that = o.scope.checkReadOnly(name)) {\n        left.carp(\"assignment to \" + that + \" \\\"\" + name + \"\\\"\", ReferenceError);\n      }\n    }\n    if (left instanceof Chain && right instanceof Fun) {\n      protoSplit = name.split('.prototype.');\n      dotSplit = name.split('.');\n      if (protoSplit.length > 1) {\n        right.inClass = protoSplit[0];\n      } else if (dotSplit.length > 1) {\n        right.inClassStatic = slice$.call(dotSplit, 0, -1).join('');\n      }\n    }\n    code = !o.level && right instanceof While && !right['else'] && (lvar || left.isSimpleAccess())\n      ? (empty = right.objComp ? '{}' : '[]', (res = o.scope.temporary('res')) + \" = \" + empty + \";\\n\" + this.tab + right.makeReturn(res).compile(o) + \"\\n\" + this.tab + name + \" \" + sign + \" \" + o.scope.free(res))\n      : (name + \" \" + sign + \" \") + (right.assigned = true, right).compile(o, LEVEL_LIST);\n    if (that = o.level) {\n      if (del) {\n        code += \", \" + name;\n      }\n      if (that > (del ? LEVEL_PAREN : LEVEL_LIST)) {\n        code = \"(\" + code + \")\";\n      }\n    }\n    return code;\n  };\n  prototype.compileConditional = function(o, left){\n    var ref$, lefts, morph;\n    if (left instanceof Var && ((ref$ = this.logic) == '?' || ref$ == '!?') && this.op === '=') {\n      o.scope.declare(left.value, left);\n    }\n    lefts = Chain(left).cacheReference(o);\n    o.level += LEVEL_OP < o.level;\n    morph = Binary(this.logic, lefts[0], (this.logic = false, this.left = lefts[1], this));\n    return (morph['void'] = this['void'], morph).compileNode(o);\n  };\n  prototype.compileMinMax = function(o, left, right){\n    var lefts, rites, test, put, ref$;\n    lefts = Chain(left).cacheReference(o);\n    rites = right.cache(o, true);\n    test = Binary(this.op.replace('?', ''), lefts[0], rites[0]);\n    put = Assign(lefts[1], rites[1], ':=');\n    if (this['void'] || !o.level) {\n      return Parens(Binary('||', test, put)).compile(o);\n    }\n    ref$ = test.first.cache(o, true), test.first = ref$[0], left = ref$[1];\n    return If(test, left).addElse(put).compileExpression(o);\n  };\n  prototype.compileDestructuring = function(o, left){\n    var items, len, ret, rite, that, cache, rref, list, code;\n    items = left.items, len = items.length;\n    ret = o.level && !this['void'];\n    rite = this.right.compile(o, len === 1 ? LEVEL_CALL : LEVEL_LIST);\n    if (that = left.name) {\n      cache = that + \" = \" + rite;\n      o.scope.declare(rite = that, left);\n    } else if ((ret || len > 1) && (!ID.test(rite) || left.assigns(rite))) {\n      cache = (rref = o.scope.temporary()) + \" = \" + rite;\n      rite = rref;\n    }\n    list = this[\"rend\" + left.constructor.displayName](o, items, rite);\n    if (rref) {\n      o.scope.free(rref);\n    }\n    if (cache) {\n      list.unshift(cache);\n    }\n    if (ret || !list.length) {\n      list.push(rite);\n    }\n    code = list.join(', ');\n    if (list.length < 2 || o.level < LEVEL_LIST) {\n      return code;\n    } else {\n      return \"(\" + code + \")\";\n    }\n  };\n  prototype.compileSplice = function(o){\n    var ref$, fromExpNode, fromExp, rightNode, right, toExp;\n    ref$ = Chain(this.left.from).cacheReference(o), fromExpNode = ref$[0], fromExp = ref$[1];\n    ref$ = Chain(this.right).cacheReference(o), rightNode = ref$[0], right = ref$[1];\n    toExp = Binary('-', this.left.to, fromExp);\n    return Block([Chain(Var(util('splice'))).add(Index(Key('apply'), '.', true)).add(Call([this.left.target, Chain(Arr([fromExpNode, toExp])).add(Index(Key('concat'), '.', true)).add(Call([rightNode]))])), right]).compile(o, LEVEL_LIST);\n  };\n  prototype.rendArr = function(o, nodes, rite){\n    var i$, len$, i, node, skip, len, val, ivar, start, inc, rcache, ref$, results$ = [];\n    for (i$ = 0, len$ = nodes.length; i$ < len$; ++i$) {\n      i = i$;\n      node = nodes[i$];\n      if (node.isEmpty()) {\n        continue;\n      }\n      if (node instanceof Splat) {\n        len && node.carp('multiple splat in an assignment');\n        skip = (node = node.it).isEmpty();\n        if (i + 1 === (len = nodes.length)) {\n          if (skip) {\n            break;\n          }\n          val = Arr.wrap(JS(util('slice') + '.call(' + rite + (i ? \", \" + i + \")\" : ')')));\n        } else {\n          val = ivar = rite + \".length - \" + (len - i - 1);\n          if (skip && i + 2 === len) {\n            continue;\n          }\n          start = i + 1;\n          this.temps = [ivar = o.scope.temporary('i')];\n          val = skip\n            ? (node = Var(ivar), Var(val))\n            : Arr.wrap(JS(i + \" < (\" + ivar + \" = \" + val + \")\\ ? \" + util('slice') + \".call(\" + rite + \", \" + i + \", \" + ivar + \")\\ : (\" + ivar + \" = \" + i + \", [])\"));\n        }\n      } else {\n        (inc = ivar) && start < i && (inc += \" + \" + (i - start));\n        val = Chain(rcache || (rcache = Literal(rite)), [Index(JS(inc || i))]);\n      }\n      if (node instanceof Assign) {\n        node = Binary(node.op, node.left, node.right, node.logic || true);\n      }\n      results$.push((ref$ = clone$(this), ref$.left = node, ref$.right = val, ref$['void'] = true, ref$).compile(o, LEVEL_PAREN));\n    }\n    return results$;\n  };\n  prototype.rendObj = function(o, nodes, rite){\n    var i$, len$, node, splat, logic, ref$, key, val, rcache, results$ = [];\n    for (i$ = 0, len$ = nodes.length; i$ < len$; ++i$) {\n      node = nodes[i$];\n      if (splat = node instanceof Splat) {\n        node = node.it;\n      }\n      if (logic = node.getDefault()) {\n        node = node.first;\n      }\n      if (node instanceof Parens) {\n        ref$ = Chain(node.it).cacheReference(o), node = ref$[0], key = ref$[1];\n      } else if (node instanceof Prop) {\n        node = (key = node.key, node).val;\n      } else {\n        key = node;\n      }\n      if (node instanceof Key) {\n        node = Var(node.name);\n      }\n      if (logic) {\n        node = (logic.first = node, logic);\n      }\n      val = Chain(rcache || (rcache = Var(rite)), [Index(key.maybeKey())]);\n      if (splat) {\n        val = Import(Obj(), val);\n      }\n      results$.push((ref$ = clone$(this), ref$.left = node, ref$.right = val, ref$['void'] = true, ref$).compile(o, LEVEL_PAREN));\n    }\n    return results$;\n  };\n  return Assign;\n}(Node));\nexports.Import = Import = (function(superclass){\n  var prototype = extend$((import$(Import, superclass).displayName = 'Import', Import), superclass).prototype, constructor = Import;\n  function Import(left, right, all){\n    var this$ = this instanceof ctor$ ? this : new ctor$;\n    this$.left = left;\n    this$.right = right;\n    this$.all = all && 'All';\n    if (!all && left instanceof Obj && right.items) {\n      return Obj(left.items.concat(right.asObj().items));\n    }\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.children = ['left', 'right'];\n  prototype.show = function(){\n    return this.all;\n  };\n  prototype.delegate(['isCallable', 'isArray'], function(it){\n    return this.left[it]();\n  });\n  prototype.unfoldSoak = function(o){\n    var left, value, ref$, temps;\n    left = this.left;\n    if (left instanceof Existence && !left.negated) {\n      if ((left = left.it) instanceof Var) {\n        value = (this.left = left).value;\n        if (!o.scope.check(value, true)) {\n          left = JS(\"typeof \" + value + \" != 'undefined' && \" + value);\n        }\n      } else {\n        ref$ = left.cache(o), left = ref$[0], this.left = ref$[1], temps = ref$[2];\n      }\n      return ref$ = If(left, this), ref$.temps = temps, ref$.soak = true, ref$.cond = this.cond, ref$['void'] = this['void'], ref$;\n    }\n    return If.unfoldSoak(o, this, 'left') || (this['void'] || !o.level) && If.unfoldSoak(o, this, 'right');\n  };\n  prototype.compileNode = function(o){\n    var right;\n    right = this.right;\n    if (!this.all) {\n      if (right instanceof Chain) {\n        right = right.unfoldSoak(o) || right.unfoldAssign(o) || right.expandSlice(o).unwrap();\n      }\n      if (right instanceof List) {\n        return this.compileAssign(o, right.asObj().items);\n      }\n    }\n    return Call.make(Util(\"import\" + (this.all || '')), [this.left, right]).compileNode(o);\n  };\n  prototype.compileAssign = function(o, items){\n    var top, reft, ref$, left, delim, space, code, i$, len$, i, node, com, logic, dyna, key, val;\n    if (!items.length) {\n      return this.left.compile(o);\n    }\n    top = !o.level;\n    if (items.length < 2 && (top || this['void'] || items[0] instanceof Splat)) {\n      reft = this.left;\n      if (reft.isComplex()) {\n        reft = Parens(reft);\n      }\n    } else {\n      ref$ = this.left.cache(o), left = ref$[0], reft = ref$[1], this.temps = ref$[2];\n    }\n    ref$ = top\n      ? [';', '\\n' + this.tab]\n      : [',', ' '], delim = ref$[0], space = ref$[1];\n    delim += space;\n    code = this.temps ? left.compile(o, LEVEL_PAREN) + delim : '';\n    for (i$ = 0, len$ = items.length; i$ < len$; ++i$) {\n      i = i$;\n      node = items[i$];\n      i && (code += com ? space : delim);\n      if (com = node.comment) {\n        code += node.compile(o);\n        continue;\n      }\n      if (node instanceof Splat) {\n        code += Import(reft, node.it).compile(o);\n        continue;\n      }\n      if (logic = node.getDefault()) {\n        node = node.first;\n      }\n      if (dyna = node instanceof Parens) {\n        ref$ = node.it.cache(o, true), key = ref$[0], val = ref$[1];\n      } else if (node instanceof Prop) {\n        key = node.key, val = node.val;\n        if (node.accessor) {\n          if (key instanceof Key) {\n            key = JS(\"'\" + key.name + \"'\");\n          }\n          code += \"Object.defineProperty(\" + reft.compile(o, LEVEL_LIST) + \", \" + key.compile(o, LEVEL_LIST) + \", \" + node.compileDescriptor(o) + \")\";\n          continue;\n        }\n      } else {\n        key = val = node;\n      }\n      dyna || (key = key.maybeKey());\n      logic && (val = (logic.first = val, logic));\n      code += Assign(Chain(reft, [Index(key)]), val).compile(o, LEVEL_PAREN);\n    }\n    if (top) {\n      return code;\n    }\n    this['void'] || node instanceof Splat || (code += (com ? ' ' : ', ') + reft.compile(o, LEVEL_PAREN));\n    if (o.level < LEVEL_LIST) {\n      return code;\n    } else {\n      return \"(\" + code + \")\";\n    }\n  };\n  return Import;\n}(Node));\nexports.In = In = (function(superclass){\n  var prototype = extend$((import$(In, superclass).displayName = 'In', In), superclass).prototype, constructor = In;\n  importAll$(prototype, arguments[1]);\n  function In(item, array){\n    this.item = item;\n    this.array = array;\n  }\n  prototype.children = ['item', 'array'];\n  prototype.compileNode = function(o){\n    var array, items, code, ref$, sub, ref, cmp, cnj, i$, len$, i, test;\n    items = (array = this.array.expandSlice(o).unwrap()).items;\n    if (!(array instanceof Arr) || items.length < 2) {\n      return (this.negated ? '!' : '') + \"\" + util('in') + \"(\" + this.item.compile(o, LEVEL_LIST) + \", \" + array.compile(o, LEVEL_LIST) + \")\";\n    }\n    code = '';\n    ref$ = this.item.cache(o, false, LEVEL_PAREN), sub = ref$[0], ref = ref$[1];\n    ref$ = this.negated\n      ? [' != ', ' && ']\n      : [' == ', ' || '], cmp = ref$[0], cnj = ref$[1];\n    for (i$ = 0, len$ = items.length; i$ < len$; ++i$) {\n      i = i$;\n      test = items[i$];\n      code && (code += cnj);\n      if (test instanceof Splat) {\n        code += (ref$ = new In(Var(ref), test.it), ref$.negated = this.negated, ref$).compile(o, LEVEL_TOP);\n        if (!(i || sub === ref)) {\n          code = \"(\" + sub + \", \" + code + \")\";\n        }\n      } else {\n        code += (i || sub === ref\n          ? ref\n          : \"(\" + sub + \")\") + cmp + test.compile(o, LEVEL_OP + PREC['==']);\n      }\n    }\n    sub === ref || o.scope.free(ref);\n    if (o.level < LEVEL_OP + PREC['||']) {\n      return code;\n    } else {\n      return \"(\" + code + \")\";\n    }\n  };\n  return In;\n}(Node, Negatable));\nexports.Existence = Existence = (function(superclass){\n  var prototype = extend$((import$(Existence, superclass).displayName = 'Existence', Existence), superclass).prototype, constructor = Existence;\n  importAll$(prototype, arguments[1]);\n  function Existence(it, negated){\n    var this$ = this instanceof ctor$ ? this : new ctor$;\n    this$.it = it;\n    this$.negated = negated;\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.children = ['it'];\n  prototype.compileNode = function(o){\n    var node, ref$, code, op, eq;\n    node = (ref$ = this.it.unwrap(), ref$.front = this.front, ref$);\n    code = node.compile(o, LEVEL_OP + PREC['==']);\n    if (node instanceof Var && !o.scope.check(code, true)) {\n      ref$ = this.negated\n        ? ['||', '=']\n        : ['&&', '!'], op = ref$[0], eq = ref$[1];\n      code = \"typeof \" + code + \" \" + eq + \"= 'undefined' \" + op + \" \" + code + \" \" + eq + \"== null\";\n    } else {\n      code += \" \" + (op = this.negated ? '==' : '!=') + \" null\";\n    }\n    if (o.level < LEVEL_OP + PREC[op]) {\n      return code;\n    } else {\n      return \"(\" + code + \")\";\n    }\n  };\n  return Existence;\n}(Node, Negatable));\nexports.Fun = Fun = (function(superclass){\n  var prototype = extend$((import$(Fun, superclass).displayName = 'Fun', Fun), superclass).prototype, constructor = Fun;\n  function Fun(params, body, bound, curried){\n    var this$ = this instanceof ctor$ ? this : new ctor$;\n    this$.params = params || [];\n    this$.body = body || Block();\n    this$.bound = bound && 'this$';\n    this$.curried = curried || false;\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.children = ['params', 'body'];\n  prototype.show = function(){\n    var that;\n    return [this.name] + [(that = this.bound) ? \"~\" + that : void 8];\n  };\n  prototype.named = function(it){\n    return this.name = it, this.statement = true, this;\n  };\n  prototype.isCallable = YES;\n  prototype.isStatement = function(){\n    return !!this.statement;\n  };\n  prototype.traverseChildren = function(arg$, xscope){\n    if (xscope) {\n      return superclass.prototype.traverseChildren.apply(this, arguments);\n    }\n  };\n  prototype.makeReturn = function(){\n    if (this.statement) {\n      return this.returns = true, this;\n    } else {\n      return superclass.prototype.makeReturn.apply(this, arguments);\n    }\n  };\n  prototype.ripName = function(it){\n    this.name || (this.name = it.varName());\n  };\n  prototype.compileNode = function(o){\n    var pscope, sscope, scope, that, inLoop, body, name, tab, code, ref$, curryCodeCheck, this$ = this;\n    pscope = o.scope;\n    sscope = pscope.shared || pscope;\n    scope = o.scope = this.body.scope = new Scope(this.wrapper ? pscope : sscope, this.wrapper && sscope);\n    scope.fun = this;\n    if (that = this.proto) {\n      scope.assign('prototype', that.compile(o) + \".prototype\");\n    }\n    if (that = this.cname) {\n      scope.assign('constructor', that);\n    }\n    if (inLoop = o.loop, delete o.loop, inLoop) {\n      o.indent = this.tab = '';\n    }\n    o.indent += TAB;\n    body = this.body, name = this.name, tab = this.tab;\n    code = 'function';\n    if (this.bound === 'this$') {\n      if (this.ctor) {\n        scope.assign('this$', 'this instanceof ctor$ ? this : new ctor$');\n        body.add(Return(Literal('this$')));\n      } else if (that = (ref$ = sscope.fun) != null ? ref$.bound : void 8) {\n        this.bound = that;\n      } else {\n        sscope.assign('this$', 'this');\n      }\n    }\n    if (this.statement) {\n      name || this.carp('nameless function declaration');\n      pscope === o.block.scope || this.carp('misplaced function declaration');\n      this.accessor && this.carp('named accessor');\n      pscope.add(name, 'function', this);\n    }\n    if (this.statement || name && this.labeled) {\n      code += ' ' + scope.add(name, 'function', this);\n    }\n    this['void'] || this.ctor || body.makeReturn();\n    code += \"(\" + this.compileParams(scope) + \"){\";\n    if (that = body.compileWithDeclarations(o)) {\n      code += \"\\n\" + that + \"\\n\" + tab;\n    }\n    code += '}';\n    curryCodeCheck = function(){\n      if (this$.curried) {\n        if (this$.hasSplats) {\n          this$.carp('cannot curry a function with a variable number of arguments');\n        }\n        return util('curry') + \"(\" + code + \")\";\n      } else {\n        return code;\n      }\n    };\n    if (inLoop) {\n      return pscope.assign(pscope.temporary('fn'), curryCodeCheck());\n    }\n    if (this.returns) {\n      code += \"\\n\" + tab + \"return \" + name + \";\";\n    } else if (this.bound && this.ctor) {\n      code += ' function ctor$(){} ctor$.prototype = prototype;';\n    }\n    code = curryCodeCheck();\n    if (this.front && !this.statement) {\n      return \"(\" + code + \")\";\n    } else {\n      return code;\n    }\n  };\n  prototype.compileParams = function(scope){\n    var params, body, names, assigns, i$, len$, i, p, splace, rest, that, dic, vr, df, v, ref$, ref1$, name;\n    params = this.params, body = this.body;\n    names = [];\n    assigns = [];\n    for (i$ = 0, len$ = params.length; i$ < len$; ++i$) {\n      i = i$;\n      p = params[i$];\n      if (p instanceof Splat) {\n        splace = i;\n        this.hasSplats = true;\n      } else if (p.op === '=') {\n        params[i] = Binary(p.logic || '?', p.left, p.right);\n      }\n    }\n    if (splace != null) {\n      rest = params.splice(splace, 9e9);\n      if (!rest[1] && rest[0].it.isEmpty()) {\n        rest = 0;\n      }\n    } else if (this.accessor) {\n      if (that = params[1]) {\n        that.carp('excess accessor parameter');\n      }\n    } else if (!(params.length || this.wrapper)) {\n      if (body.traverseChildren(function(it){\n        return it.value === 'it' || null;\n      })) {\n        params[0] = Var('it');\n      }\n    }\n    if (params.length) {\n      dic = {};\n      for (i$ = 0, len$ = params.length; i$ < len$; ++i$) {\n        p = params[i$];\n        vr = p;\n        if (df = vr.getDefault()) {\n          vr = vr.first;\n        }\n        if (vr.isEmpty()) {\n          vr = Var(scope.temporary('arg'));\n        } else if (!(vr instanceof Var)) {\n          v = Var((ref1$ = (ref$ = vr.it || vr).name, delete ref$.name, ref1$) || vr.varName() || scope.temporary('arg'));\n          assigns.push(Assign(vr, df ? Binary(p.op, v, p.second) : v));\n          vr = v;\n        } else if (df) {\n          assigns.push(Assign(vr, p.second, '=', p.op, true));\n        }\n        names.push(name = scope.add(vr.value, 'arg', p));\n        if (!(dic[name + \".\"] ^= 1)) {\n          p.carp(\"duplicate parameter \\\"\" + name + \"\\\"\");\n        }\n      }\n    }\n    if (rest) {\n      while (splace--) {\n        rest.unshift(Arr());\n      }\n      assigns.push(Assign(Arr(rest), Literal('arguments')));\n    }\n    if (assigns.length) {\n      (ref$ = this.body).prepend.apply(ref$, assigns);\n    }\n    return names.join(', ');\n  };\n  return Fun;\n}(Node));\nexports.Class = Class = (function(superclass){\n  var prototype = extend$((import$(Class, superclass).displayName = 'Class', Class), superclass).prototype, constructor = Class;\n  function Class(arg$){\n    var body;\n    this.title = arg$.title, this.sup = arg$.sup, this.mixins = arg$.mixins, body = arg$.body;\n    this.fun = Fun([], body);\n  }\n  prototype.children = ['title', 'sup', 'mixins', 'fun'];\n  prototype.isCallable = YES;\n  prototype.ripName = function(it){\n    this.name = it.varName();\n  };\n  prototype.compile = function(o, level){\n    var fun, body, lines, title, boundFuncs, decl, name, proto, ctorName, ctor, ctorPlace, importProtoObj, i$, len$, i, node, ref$, f, vname, args, that, imports, res$, clas;\n    fun = this.fun, body = fun.body, lines = body.lines, title = this.title;\n    boundFuncs = [];\n    decl = title != null ? title.varName() : void 8;\n    name = decl || this.name;\n    if (ID.test(name || '')) {\n      fun.cname = name;\n    } else {\n      name = 'constructor';\n    }\n    proto = Var('prototype');\n    ctorName = 'constructor$$';\n    importProtoObj = function(node, i){\n      var j, prop, ref$, i$, len$, f;\n      j = 0;\n      for (; j < node.items.length; j++) {\n        prop = node.items[j];\n        if ((ref$ = prop.key) instanceof Key || ref$ instanceof Literal) {\n          if ((prop.key instanceof Key && prop.key.name === ctorName) || (prop.key instanceof Literal && prop.key.value === \"'\" + ctorName + \"'\")) {\n            if (ctor) {\n              node.carp('redundant constructor');\n            }\n            ctor = prop.val;\n            node.items.splice(j--, 1);\n            ctorPlace = i;\n          } else if (prop.val instanceof Fun) {\n            prop.val.meth = prop.key;\n            if (prop.val.bound) {\n              boundFuncs.push(prop.key);\n              prop.val.bound = false;\n            }\n          } else if (prop.accessor) {\n            for (i$ = 0, len$ = (ref$ = prop.val).length; i$ < len$; ++i$) {\n              f = ref$[i$];\n              f.meth = prop.key;\n            }\n          }\n        }\n      }\n      if (node.items.length) {\n        return Import(proto, node);\n      } else {\n        return Literal('void');\n      }\n    };\n    for (i$ = 0, len$ = lines.length; i$ < len$; ++i$) {\n      i = i$;\n      node = lines[i$];\n      if (node instanceof Obj) {\n        lines[i] = importProtoObj(node, i);\n      } else if (node instanceof Fun && !node.statement) {\n        ctor && node.carp('redundant constructor');\n        ctor = node;\n      } else if (node instanceof Assign && node.left instanceof Chain && node.left.head.value === 'this' && node.right instanceof Fun) {\n        node.right.stat = node.left.tails[0].key;\n      } else {\n        node.traverseChildren(fn$);\n      }\n    }\n    ctor || (ctor = lines[lines.length] = this.sup && ((ref$ = this.sup) instanceof Fun || ref$ instanceof Var)\n      ? Fun([], Block(Chain(new Super).add(Call([Splat(Literal('arguments'))]))))\n      : Fun());\n    if (!(ctor instanceof Fun)) {\n      lines.splice(ctorPlace + 1, 0, Assign(Var(ctorName), ctor));\n      lines.unshift(ctor = Fun([], Block(Return(Chain(Var(ctorName)).add(Call([Splat('arguments', true)]))))));\n    }\n    ctor.name = name;\n    ctor.ctor = true;\n    ctor.statement = true;\n    for (i$ = 0, len$ = boundFuncs.length; i$ < len$; ++i$) {\n      f = boundFuncs[i$];\n      ctor.body.lines.unshift(Assign(Chain(Literal('this')).add(Index(f)), Chain(Var(util('bind'))).add(Call([Literal('this'), Literal(\"'\" + f.name + \"'\"), Var('prototype')]))));\n    }\n    lines.push(vname = fun.proto = Var(fun.bound = name));\n    args = [];\n    if (that = this.sup) {\n      args.push(that);\n      imports = Chain(Import(Literal('this'), Var('superclass')));\n      fun.proto = Util.Extends(fun.cname ? Block([Assign(imports.add(Index(Key('displayName'))), Literal(\"'\" + name + \"'\")), Literal(name)]) : imports, (ref$ = fun.params)[ref$.length] = Var('superclass'));\n    }\n    if (that = this.mixins) {\n      res$ = [];\n      for (i$ = 0, len$ = that.length; i$ < len$; ++i$) {\n        args[args.length] = that[i$];\n        res$.push(Import(proto, JS(\"arguments[\" + (args.length - 1) + \"]\"), true));\n      }\n      imports = res$;\n      body.prepend.apply(body, imports);\n    }\n    if (fun.cname && !this.sup) {\n      body.prepend(Literal(name + \".displayName = '\" + name + \"'\"));\n    }\n    clas = Parens(Call.make(fun, args), true);\n    if (decl && title.isComplex()) {\n      clas = Assign(vname, clas);\n    }\n    if (title) {\n      clas = Assign(title, clas);\n    }\n    return clas.compile(o, level);\n    function fn$(it){\n      var i$, ref$, len$, k, child;\n      if (it instanceof Block) {\n        for (i$ = 0, len$ = (ref$ = it.lines).length; i$ < len$; ++i$) {\n          k = i$;\n          child = ref$[i$];\n          if (child instanceof Obj) {\n            it.lines[k] = importProtoObj(child, i);\n          }\n        }\n      }\n    }\n  };\n  return Class;\n}(Node));\nexports.Super = Super = (function(superclass){\n  var prototype = extend$((import$(Super, superclass).displayName = 'Super', Super), superclass).prototype, constructor = Super;\n  function Super(){}\n  prototype.isCallable = YES;\n  prototype.compile = function(o){\n    var scope, that, result, ref$;\n    scope = o.scope;\n    if (!this.sproto) {\n      for (; that = !scope.get('superclass') && scope.fun; scope = scope.parent) {\n        result = that;\n        if (that = result.meth) {\n          return 'superclass.prototype' + Index(that).compile(o);\n        }\n        if (that = result.stat) {\n          return 'superclass' + Index(that).compile(o);\n        }\n        if (that = scope.fun.inClass) {\n          return that + \".superclass.prototype.\" + scope.fun.name;\n        } else if (that = scope.fun.inClassStatic) {\n          return that + \".superclass.\" + scope.fun.name;\n        }\n      }\n      if (that = (ref$ = o.scope.fun) != null ? ref$.name : void 8) {\n        return that + \".superclass\";\n      }\n    }\n    return 'superclass';\n  };\n  return Super;\n}(Node));\nexports.Parens = Parens = (function(superclass){\n  var prototype = extend$((import$(Parens, superclass).displayName = 'Parens', Parens), superclass).prototype, constructor = Parens;\n  function Parens(it, keep, string){\n    var this$ = this instanceof ctor$ ? this : new ctor$;\n    this$.it = it;\n    this$.keep = keep;\n    this$.string = string;\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.children = ['it'];\n  prototype.show = function(){\n    return this.string && '\"\"';\n  };\n  prototype.delegate(['isComplex', 'isCallable', 'isArray', 'isRegex'], function(it){\n    return this.it[it]();\n  });\n  prototype.isString = function(){\n    return this.string || this.it.isString();\n  };\n  prototype.unparen = function(){\n    if (this.keep) {\n      return this;\n    } else {\n      return this.it.unparen();\n    }\n  };\n  prototype.compile = function(o, level){\n    var it;\n    level == null && (level = o.level);\n    it = this.it;\n    it.cond || (it.cond = this.cond), it['void'] || (it['void'] = this['void']);\n    if (this.calling && (!level || this['void'])) {\n      it.head['void'] = true;\n    }\n    if (!(this.keep || this.newed || level >= LEVEL_OP + PREC[it.op])) {\n      return (it.front = this.front, it).compile(o, level || LEVEL_PAREN);\n    }\n    if (it.isStatement()) {\n      return it.compileClosure(o);\n    } else {\n      return \"(\" + it.compile(o, LEVEL_PAREN) + \")\";\n    }\n  };\n  return Parens;\n}(Node));\nexports.Splat = Splat = (function(superclass){\n  var ref$, prototype = extend$((import$(Splat, superclass).displayName = 'Splat', Splat), superclass).prototype, constructor = Splat;\n  function Splat(it, filler){\n    var this$ = this instanceof ctor$ ? this : new ctor$;\n    this$.it = it;\n    this$.filler = filler;\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  ref$ = Parens.prototype, prototype.children = ref$.children, prototype.isComplex = ref$.isComplex;\n  prototype.isAssignable = YES;\n  prototype.assigns = function(it){\n    return this.it.assigns(it);\n  };\n  prototype.compile = function(){\n    return this.carp('invalid splat');\n  };\n  Splat.compileArray = function(o, list, apply){\n    var index, i$, len$, node, args, atoms, ref$;\n    expand(list);\n    index = 0;\n    for (i$ = 0, len$ = list.length; i$ < len$; ++i$) {\n      node = list[i$];\n      if (node instanceof Splat) {\n        break;\n      }\n      ++index;\n    }\n    if (index >= list.length) {\n      return '';\n    }\n    if (!list[1]) {\n      return (apply ? Object : ensureArray)(list[0].it).compile(o, LEVEL_LIST);\n    }\n    args = [];\n    atoms = [];\n    for (i$ = 0, len$ = (ref$ = list.splice(index, 9e9)).length; i$ < len$; ++i$) {\n      node = ref$[i$];\n      if (node instanceof Splat) {\n        if (atoms.length) {\n          args.push(Arr(atoms.splice(0, 9e9)));\n        }\n        args.push(ensureArray(node.it));\n      } else {\n        atoms.push(node);\n      }\n    }\n    if (atoms.length) {\n      args.push(Arr(atoms));\n    }\n    return (index\n      ? Arr(list)\n      : args.shift()).compile(o, LEVEL_CALL) + (\".concat(\" + List.compile(o, args) + \")\");\n  };\n  function expand(nodes){\n    var index, node, it;\n    index = -1;\n    while (node = nodes[++index]) {\n      if (node instanceof Splat) {\n        it = node.it;\n        if (it.isEmpty()) {\n          nodes.splice(index--, 1);\n        } else if (it instanceof Arr) {\n          nodes.splice.apply(nodes, [index, 1].concat(slice$.call(expand(it.items))));\n          index += it.items.length - 1;\n        }\n      }\n    }\n    return nodes;\n  }\n  function ensureArray(node){\n    if (node.isArray()) {\n      return node;\n    }\n    return Call.make(JS(util('slice') + '.call'), [node]);\n  }\n  return Splat;\n}(Node));\nexports.Jump = Jump = (function(superclass){\n  var prototype = extend$((import$(Jump, superclass).displayName = 'Jump', Jump), superclass).prototype, constructor = Jump;\n  function Jump(verb, label){\n    this.verb = verb;\n    this.label = label;\n  }\n  prototype.show = function(){\n    var that;\n    return (this.verb || '') + ((that = this.label) ? ' ' + that : '');\n  };\n  prototype.isStatement = YES;\n  prototype.makeReturn = THIS;\n  prototype.getJump = function(ctx){\n    var that, ref$;\n    ctx || (ctx = {});\n    if (!ctx[this.verb]) {\n      return this;\n    }\n    if (that = this.label) {\n      return !in$(that, (ref$ = ctx.labels) != null\n        ? ref$\n        : ctx.labels = []) && this;\n    }\n  };\n  prototype.compileNode = function(o){\n    var that, ref$;\n    if (that = this.label) {\n      in$(that, (ref$ = o.labels) != null\n        ? ref$\n        : o.labels = []) || this.carp(\"unknown label \\\"\" + that + \"\\\"\");\n    } else {\n      o[this.verb] || this.carp(\"stray \" + this.verb);\n    }\n    return this.show() + ';';\n  };\n  Jump.extended = function(sub){\n    sub.prototype.children = ['it'];\n    this[sub.displayName.toLowerCase()] = sub;\n  };\n  return Jump;\n}(Node));\nexports.Throw = Throw = (function(superclass){\n  var prototype = extend$((import$(Throw, superclass).displayName = 'Throw', Throw), superclass).prototype, constructor = Throw;\n  function Throw(it){\n    var this$ = this instanceof ctor$ ? this : new ctor$;\n    this$.it = it;\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.getJump = VOID;\n  prototype.compileNode = function(o){\n    var ref$;\n    return \"throw \" + (((ref$ = this.it) != null ? ref$.compile(o, LEVEL_PAREN) : void 8) || 'null') + \";\";\n  };\n  return Throw;\n}(Jump));\nexports.Return = Return = (function(superclass){\n  var prototype = extend$((import$(Return, superclass).displayName = 'Return', Return), superclass).prototype, constructor = Return;\n  function Return(it){\n    var this$ = this instanceof ctor$ ? this : new ctor$;\n    if (it && it.value !== 'void') {\n      this$.it = it;\n    }\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.getJump = THIS;\n  prototype.compileNode = function(o){\n    var that;\n    return \"return\" + ((that = this.it) ? ' ' + that.compile(o, LEVEL_PAREN) : '') + \";\";\n  };\n  return Return;\n}(Jump));\nexports.While = While = (function(superclass){\n  var prototype = extend$((import$(While, superclass).displayName = 'While', While), superclass).prototype, constructor = While;\n  function While(test, un, mode){\n    this.un = un;\n    mode && (mode instanceof Node\n      ? this.update = mode\n      : this.post = true);\n    if (this.post || test.value !== '' + !un) {\n      this.test = test;\n    }\n  }\n  prototype.children = ['test', 'body', 'update', 'else'];\n  prototype.aSource = 'test';\n  prototype.aTargets = ['body', 'update'];\n  prototype.show = function(){\n    return [this.un ? '!' : void 8, this.post ? 'do' : void 8].join('');\n  };\n  prototype.isStatement = prototype.isArray = YES;\n  prototype.makeComprehension = function(toAdd, loops){\n    this.isComprehension = true;\n    while (loops.length) {\n      toAdd = loops.pop().addBody(Block(toAdd));\n      if (!toAdd.isComprehension) {\n        toAdd.inComprehension = true;\n      }\n    }\n    return this.addBody(Block(toAdd));\n  };\n  prototype.getJump = function(ctx){\n    var i$, ref$, ref1$, len$, node;\n    ctx || (ctx = {});\n    ctx['continue'] = true;\n    ctx['break'] = true;\n    for (i$ = 0, len$ = (ref$ = ((ref1$ = this.body) != null ? ref1$.lines : void 8) || []).length; i$ < len$; ++i$) {\n      node = ref$[i$];\n      if (node.getJump(ctx)) {\n        return node;\n      }\n    }\n  };\n  prototype.addBody = function(body){\n    var top;\n    this.body = body;\n    if (this.guard) {\n      this.body = Block(If(this.guard, body));\n    }\n    top = this.body.lines[0];\n    if ((top != null ? top.verb : void 8) === 'continue' && !top.label) {\n      this.body.lines.length = 0;\n    }\n    return this;\n  };\n  prototype.addGuard = function(guard){\n    this.guard = guard;\n    return this;\n  };\n  prototype.addObjComp = function(objComp){\n    this.objComp = objComp != null ? objComp : true;\n    return this;\n  };\n  prototype.makeReturn = function(it){\n    var last, ref$;\n    if (it) {\n      if (this.objComp) {\n        this.body = Block(this.body.makeObjReturn(it));\n        if (this.guard) {\n          this.body = If(this.guard, this.body);\n        }\n      } else {\n        if (!(this.body || this.index)) {\n          this.addBody(Block(Var(this.index = 'ridx$')));\n        }\n        last = (ref$ = this.body.lines) != null ? ref$[ref$.length - 1] : void 8;\n        if ((this.isComprehension || this.inComprehension) && !(last != null && last.isComprehension)) {\n          this.body.makeReturn(it);\n          if ((ref$ = this['else']) != null) {\n            ref$.makeReturn(it);\n          }\n        } else {\n          this.resVar = it;\n          if ((ref$ = this['else']) != null) {\n            ref$.makeReturn(it);\n          }\n        }\n      }\n    } else {\n      this.getJump() || (this.returns = true);\n    }\n    return this;\n  };\n  prototype.compileNode = function(o){\n    var test, ref$, head, that;\n    o.loop = true;\n    this.test && (this.un\n      ? this.test = this.test.invert()\n      : this.anaphorize());\n    if (this.post) {\n      return 'do {' + this.compileBody((o.indent += TAB, o));\n    }\n    test = ((ref$ = this.test) != null ? ref$.compile(o, LEVEL_PAREN) : void 8) || '';\n    if (!(this.update || this['else'])) {\n      head = test ? \"while (\" + test : 'for (;;';\n    } else {\n      head = 'for (';\n      if (this['else']) {\n        head += (this.yet = o.scope.temporary('yet')) + \" = true\";\n      }\n      head += \";\" + (test && ' ' + test) + \";\";\n      if (that = this.update) {\n        head += ' ' + that.compile(o, LEVEL_PAREN);\n      }\n    }\n    return head + ') {' + this.compileBody((o.indent += TAB, o));\n  };\n  prototype.compileBody = function(o){\n    var lines, yet, tab, code, ret, mid, empty, last, hasLoop, res, temp, key$, ref$, that;\n    o['break'] = o['continue'] = true;\n    lines = this.body.lines, yet = this.yet, tab = this.tab;\n    code = ret = mid = '';\n    empty = this.objComp ? '{}' : '[]';\n    last = lines != null ? lines[lines.length - 1] : void 8;\n    if (!((this.isComprehension || this.inComprehension) && !(last != null && last.isComprehension))) {\n      this.traverseChildren(function(it){\n        if (it instanceof While) {\n          hasLoop = true;\n        }\n      });\n      if (this.returns && !this.resVar) {\n        this.resVar = res = o.scope.assign('results$', empty);\n      }\n      if (this.resVar && (last instanceof While || hasLoop)) {\n        temp = o.scope.temporary('lresult');\n        lines.unshift(Assign(Var(temp), Arr(), '='));\n        if (lines[key$ = lines.length - 1] != null) {\n          lines[key$] = lines[key$].makeReturn(temp);\n        }\n        mid += TAB + \"\" + Chain(Var(this.resVar)).add(Index(Key('push'), '.', true)).add(Call([Chain(Var(temp))])).compile(o) + \";\\n\" + this.tab;\n      } else {\n        this.hasReturned = true;\n        if (this.resVar) {\n          this.body.makeReturn(this.resVar);\n        }\n      }\n    }\n    if (this.returns) {\n      if (this.objComp) {\n        this.body = Block(this.body.makeObjReturn('results$'));\n      }\n      if (this.guard && this.objComp) {\n        this.body = If(this.guard, this.body);\n      }\n      if ((!last instanceof While && !this.hasReturned) || this.isComprehension || this.inComprehension) {\n        if (lines[key$ = lines.length - 1] != null) {\n          lines[key$] = lines[key$].makeReturn(res = o.scope.assign('results$', empty));\n        }\n      }\n      ret += \"\\n\" + this.tab + \"return \" + (res || empty) + \";\";\n      if ((ref$ = this['else']) != null) {\n        ref$.makeReturn();\n      }\n    }\n    yet && lines.unshift(JS(yet + \" = false;\"));\n    if (that = this.body.compile(o, LEVEL_TOP)) {\n      code += \"\\n\" + that + \"\\n\" + tab;\n    }\n    code += mid;\n    code += '}';\n    if (this.post) {\n      code += \" while (\" + this.test.compile((o.tab = tab, o), LEVEL_PAREN) + \");\";\n    }\n    if (yet) {\n      code += \" if (\" + yet + \") \" + this.compileBlock(o, Block(this['else']));\n      o.scope.free(yet);\n    }\n    return code + ret;\n  };\n  return While;\n}(Node));\nexports.For = For = (function(superclass){\n  var prototype = extend$((import$(For, superclass).displayName = 'For', For), superclass).prototype, constructor = For;\n  function For(it){\n    importAll$(this, it);\n    if (this.item instanceof Var && !this.item.value) {\n      this.item = null;\n    }\n  }\n  prototype.children = ['item', 'source', 'from', 'to', 'step', 'body'];\n  prototype.aSource = null;\n  prototype.show = function(){\n    return this.index;\n  };\n  prototype.compileNode = function(o){\n    var temps, idx, ref$, pvar, step, tvar, tail, fvar, vars, eq, cond, svar, srcPart, lvar, head, that, body;\n    o.loop = true;\n    temps = this.temps = [];\n    if (this.object && this.index) {\n      o.scope.declare(idx = this.index);\n    } else {\n      temps.push(idx = o.scope.temporary('i'));\n    }\n    if (!this.body) {\n      this.addBody(Block(Var(idx)));\n    }\n    if (!this.object) {\n      ref$ = (this.step || Literal(1)).compileLoopReference(o, 'step'), pvar = ref$[0], step = ref$[1];\n      pvar === step || temps.push(pvar);\n    }\n    if (this.from) {\n      ref$ = this.to.compileLoopReference(o, 'to'), tvar = ref$[0], tail = ref$[1];\n      fvar = this.from.compile(o, LEVEL_LIST);\n      vars = idx + \" = \" + fvar;\n      if (tail !== tvar) {\n        vars += \", \" + tail;\n        temps.push(tvar);\n      }\n      if (!this.step && +fvar > +tvar) {\n        pvar = step = -1;\n      }\n      eq = this.op === 'til' ? '' : '=';\n      cond = +pvar\n        ? idx + \" \" + '<>'.charAt(pvar < 0) + eq + \" \" + tvar\n        : pvar + \" < 0 ? \" + idx + \" >\" + eq + \" \" + tvar + \" : \" + idx + \" <\" + eq + \" \" + tvar;\n    } else {\n      if (this.item || this.object && this.own) {\n        ref$ = this.source.compileLoopReference(o, 'ref', !this.object), svar = ref$[0], srcPart = ref$[1];\n        svar === srcPart || temps.push(svar);\n      } else {\n        svar = srcPart = this.source.compile(o, LEVEL_PAREN);\n      }\n      if (!this.object) {\n        if (0 > pvar && ~~pvar === +pvar) {\n          vars = idx + \" = \" + srcPart + \".length - 1\";\n          cond = idx + \" >= 0\";\n        } else {\n          temps.push(lvar = o.scope.temporary('len'));\n          vars = idx + \" = 0, \" + lvar + \" = \" + srcPart + \".length\";\n          cond = idx + \" < \" + lvar;\n        }\n      }\n    }\n    this['else'] && (this.yet = o.scope.temporary('yet'));\n    head = 'for (';\n    if (this.object) {\n      head += idx + \" in \";\n    }\n    if (that = this.yet) {\n      head += that + \" = true, \";\n    }\n    if (this.object) {\n      head += srcPart;\n    } else {\n      step === pvar || (vars += ', ' + step);\n      head += (vars + \"; \" + cond + \"; \") + (1 == Math.abs(pvar)\n        ? (pvar < 0 ? '--' : '++') + idx\n        : idx + (pvar < 0\n          ? ' -= ' + pvar.slice(1)\n          : ' += ' + pvar));\n    }\n    this.own && (head += \") if (\" + o.scope.assign('own$', '{}.hasOwnProperty') + \".call(\" + svar + \", \" + idx + \")\");\n    head += ') {';\n    this.infuseIIFE();\n    o.indent += TAB;\n    if (this.index && !this.object) {\n      head += '\\n' + o.indent + Assign(Var(this.index), JS(idx)).compile(o, LEVEL_TOP) + ';';\n    }\n    if (this.item && !this.item.isEmpty()) {\n      head += '\\n' + o.indent + Assign(this.item, JS(svar + \"[\" + idx + \"]\")).compile(o, LEVEL_TOP) + ';';\n    }\n    body = this.compileBody(o);\n    if ((this.item || (this.index && !this.object)) && '}' === body.charAt(0)) {\n      head += '\\n' + this.tab;\n    }\n    return head + body;\n  };\n  prototype.infuseIIFE = function(){\n    var this$ = this;\n    function dup(params, name){\n      var i$, len$, p;\n      if (name) {\n        for (i$ = 0, len$ = params.length; i$ < len$; ++i$) {\n          p = params[i$];\n          if (name === p.value) {\n            return true;\n          }\n        }\n      }\n    }\n    this.body.traverseChildren(function(it){\n      var fun, params, call, index, item, that;\n      if (!(it.calling || it.op === 'new' && (fun = it.it).params)) {\n        return;\n      }\n      if (fun) {\n        it.it = Call.make((fun['void'] = true, fun));\n      } else {\n        fun = it.it.head;\n      }\n      params = fun.params;\n      call = it.it.tails[0];\n      if (params.length ^ call.args.length - !!call.method) {\n        return;\n      }\n      index = this$.index, item = this$.item;\n      if (index && !dup(params, index)) {\n        call.args.push(params[params.length] = Var(index));\n      }\n      if (that = item instanceof List && item.name) {\n        item = Var(that);\n      }\n      if (item instanceof Var && !dup(params, item.value)) {\n        call.args.push(params[params.length] = item);\n      }\n    });\n  };\n  return For;\n}(While));\nexports.Try = Try = (function(superclass){\n  var prototype = extend$((import$(Try, superclass).displayName = 'Try', Try), superclass).prototype, constructor = Try;\n  function Try(attempt, thrown, recovery, ensure){\n    var ref$;\n    this.attempt = attempt;\n    this.thrown = thrown;\n    this.recovery = recovery;\n    this.ensure = ensure;\n    if ((ref$ = this.recovery) != null) {\n      ref$.lines.unshift(Assign(this.thrown || Var('e'), Var('e$')));\n    }\n  }\n  prototype.children = ['attempt', 'recovery', 'ensure'];\n  prototype.show = function(){\n    return this.thrown;\n  };\n  prototype.isStatement = YES;\n  prototype.isCallable = function(){\n    var ref$;\n    return ((ref$ = this.recovery) != null ? ref$.isCallable() : void 8) && this.attempt.isCallable();\n  };\n  prototype.getJump = function(it){\n    var ref$;\n    return this.attempt.getJump(it) || ((ref$ = this.recovery) != null ? ref$.getJump(it) : void 8);\n  };\n  prototype.makeReturn = function(it){\n    this.attempt = this.attempt.makeReturn(it);\n    if (this.recovery != null) {\n      this.recovery = this.recovery.makeReturn(it);\n    }\n    return this;\n  };\n  prototype.compileNode = function(o){\n    var code, that;\n    o.indent += TAB;\n    code = 'try ' + this.compileBlock(o, this.attempt);\n    if (that = this.recovery || !this.ensure && JS('')) {\n      code += ' catch (e$) ' + this.compileBlock(o, that);\n    }\n    if (that = this.ensure) {\n      code += ' finally ' + this.compileBlock(o, that);\n    }\n    return code;\n  };\n  return Try;\n}(Node));\nexports.Switch = Switch = (function(superclass){\n  var prototype = extend$((import$(Switch, superclass).displayName = 'Switch', Switch), superclass).prototype, constructor = Switch;\n  function Switch(type, topic, cases, $default){\n    var last, ref$;\n    this.type = type;\n    this.topic = topic;\n    this.cases = cases;\n    this['default'] = $default;\n    if (type === 'match') {\n      if (topic) {\n        this.target = Arr(topic);\n      }\n      this.topic = null;\n    } else {\n      if (topic) {\n        if (topic.length > 1) {\n          throw \"can't have more than one topic in switch statement\";\n        }\n        this.topic = this.topic[0];\n      }\n    }\n    if (this.cases.length && (last = (ref$ = this.cases)[ref$.length - 1]).tests.length === 1 && last.tests[0] instanceof Var && last.tests[0].value === '_') {\n      this.cases.pop();\n      this['default'] = last.body;\n    }\n  }\n  prototype.children = ['topic', 'cases', 'default'];\n  prototype.aSource = 'topic';\n  prototype.aTargets = ['cases'];\n  prototype.show = function(){\n    return this.type;\n  };\n  prototype.isStatement = YES;\n  prototype.isCallable = function(){\n    var i$, ref$, len$, c;\n    for (i$ = 0, len$ = (ref$ = this.cases).length; i$ < len$; ++i$) {\n      c = ref$[i$];\n      if (!c.isCallable()) {\n        return false;\n      }\n    }\n    return (ref$ = this['default']) != null ? ref$.isCallable() : void 8;\n  };\n  prototype.getJump = function(ctx){\n    var i$, ref$, len$, c, that;\n    ctx || (ctx = {});\n    ctx['break'] = true;\n    for (i$ = 0, len$ = (ref$ = this.cases).length; i$ < len$; ++i$) {\n      c = ref$[i$];\n      if (that = c.body.getJump(ctx)) {\n        return that;\n      }\n    }\n    return (ref$ = this['default']) != null ? ref$.getJump(ctx) : void 8;\n  };\n  prototype.makeReturn = function(it){\n    var i$, ref$, len$, c;\n    for (i$ = 0, len$ = (ref$ = this.cases).length; i$ < len$; ++i$) {\n      c = ref$[i$];\n      c.makeReturn(it);\n    }\n    if ((ref$ = this['default']) != null) {\n      ref$.makeReturn(it);\n    }\n    return this;\n  };\n  prototype.compileNode = function(o){\n    var tab, ref$, targetNode, target, topic, t, code, stop, i$, len$, i, c, that;\n    tab = this.tab;\n    if (this.target) {\n      ref$ = Chain(this.target).cacheReference(o), targetNode = ref$[0], target = ref$[1];\n    }\n    topic = this.type === 'match'\n      ? (t = target\n        ? [targetNode]\n        : [], Block(t.concat([Literal('false')])).compile(o, LEVEL_PAREN))\n      : !!this.topic && this.anaphorize().compile(o, LEVEL_PAREN);\n    code = \"switch (\" + topic + \") {\\n\";\n    stop = this['default'] || this.cases.length - 1;\n    o['break'] = true;\n    for (i$ = 0, len$ = (ref$ = this.cases).length; i$ < len$; ++i$) {\n      i = i$;\n      c = ref$[i$];\n      code += c.compileCase(o, tab, i === stop, this.type === 'match' || !topic, this.type, target);\n    }\n    if (this['default']) {\n      o.indent = tab + TAB;\n      if (that = this['default'].compile(o, LEVEL_TOP)) {\n        code += tab + (\"default:\\n\" + that + \"\\n\");\n      }\n    }\n    return code + tab + '}';\n  };\n  return Switch;\n}(Node));\nexports.Case = Case = (function(superclass){\n  var prototype = extend$((import$(Case, superclass).displayName = 'Case', Case), superclass).prototype, constructor = Case;\n  function Case(tests, body){\n    this.tests = tests;\n    this.body = body;\n  }\n  prototype.children = ['tests', 'body'];\n  prototype.isCallable = function(){\n    return this.body.isCallable();\n  };\n  prototype.makeReturn = function(it){\n    var ref$, ref1$;\n    if (((ref$ = (ref1$ = this.body.lines)[ref1$.length - 1]) != null ? ref$.value : void 8) !== 'fallthrough') {\n      this.body.makeReturn(it);\n    }\n    return this;\n  };\n  prototype.compileCase = function(o, tab, nobr, bool, type, target){\n    var tests, i$, ref$, len$, test, j$, ref1$, len1$, t, i, tar, binary, that, code, lines, last, ft;\n    tests = [];\n    for (i$ = 0, len$ = (ref$ = this.tests).length; i$ < len$; ++i$) {\n      test = ref$[i$];\n      test = test.expandSlice(o).unwrap();\n      if (test instanceof Arr && type !== 'match') {\n        for (j$ = 0, len1$ = (ref1$ = test.items).length; j$ < len1$; ++j$) {\n          t = ref1$[j$];\n          tests.push(t);\n        }\n      } else {\n        tests.push(test);\n      }\n    }\n    tests.length || tests.push(Literal('void'));\n    if (type === 'match') {\n      for (i$ = 0, len$ = tests.length; i$ < len$; ++i$) {\n        i = i$;\n        test = tests[i$];\n        tar = Chain(target).add(Index(Literal(i), '.', true));\n        tests[i] = Chain(test).autoCompare(target ? [tar] : null);\n      }\n    }\n    if (bool) {\n      binary = type === 'match' ? '&&' : '||';\n      t = tests[0];\n      i = 0;\n      while (that = tests[++i]) {\n        t = Binary(binary, t, that);\n      }\n      tests = [(this.t = t, this.aSource = 't', this.aTargets = ['body'], this).anaphorize().invert()];\n    }\n    code = '';\n    for (i$ = 0, len$ = tests.length; i$ < len$; ++i$) {\n      t = tests[i$];\n      code += tab + (\"case \" + t.compile(o, LEVEL_PAREN) + \":\\n\");\n    }\n    lines = this.body.lines;\n    last = lines[lines.length - 1];\n    if (ft = (last != null ? last.value : void 8) === 'fallthrough') {\n      lines[lines.length - 1] = JS('// fallthrough');\n    }\n    o.indent = tab += TAB;\n    if (that = this.body.compile(o, LEVEL_TOP)) {\n      code += that + '\\n';\n    }\n    if (!(nobr || ft || last instanceof Jump)) {\n      code += tab + 'break;\\n';\n    }\n    return code;\n  };\n  return Case;\n}(Node));\nexports.If = If = (function(superclass){\n  var prototype = extend$((import$(If, superclass).displayName = 'If', If), superclass).prototype, constructor = If;\n  function If($if, then, un){\n    var this$ = this instanceof ctor$ ? this : new ctor$;\n    this$['if'] = $if;\n    this$.then = then;\n    this$.un = un;\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.children = ['if', 'then', 'else'];\n  prototype.aSource = 'if';\n  prototype.aTargets = ['then'];\n  prototype.show = function(){\n    return this.un && '!';\n  };\n  prototype.terminator = '';\n  prototype.delegate(['isCallable', 'isArray', 'isString', 'isRegex'], function(it){\n    var ref$;\n    return ((ref$ = this['else']) != null ? ref$[it]() : void 8) && this.then[it]();\n  });\n  prototype.getJump = function(it){\n    var ref$;\n    return this.then.getJump(it) || ((ref$ = this['else']) != null ? ref$.getJump(it) : void 8);\n  };\n  prototype.makeReturn = function(it){\n    this.then = this.then.makeReturn(it);\n    if (this['else'] != null) {\n      this['else'] = this['else'].makeReturn(it);\n    }\n    return this;\n  };\n  prototype.compileNode = function(o){\n    if (this.un) {\n      this['if'] = this['if'].invert();\n    } else {\n      this.soak || this.anaphorize();\n    }\n    if (o.level) {\n      return this.compileExpression(o);\n    } else {\n      return this.compileStatement(o);\n    }\n  };\n  prototype.compileStatement = function(o){\n    var code, els;\n    code = \"if (\" + this['if'].compile(o, LEVEL_PAREN) + \") \";\n    o.indent += TAB;\n    code += this.compileBlock(o, Block(this.then));\n    if (!(els = this['else'])) {\n      return code;\n    }\n    return code + ' else ' + (els instanceof constructor\n      ? els.compile((o.indent = this.tab, o), LEVEL_TOP)\n      : this.compileBlock(o, els));\n  };\n  prototype.compileExpression = function(o){\n    var thn, els, code, pad;\n    thn = this.then, els = this['else'] || Literal('void');\n    this['void'] && (thn['void'] = els['void'] = true);\n    if (!this['else'] && (this.cond || this['void'])) {\n      return Parens(Binary('&&', this['if'], thn)).compile(o);\n    }\n    code = this['if'].compile(o, LEVEL_COND);\n    pad = els.isComplex() ? '\\n' + (o.indent += TAB) : ' ';\n    code += pad + \"? \" + thn.compile(o, LEVEL_LIST) + \"\" + pad + \": \" + els.compile(o, LEVEL_LIST);\n    if (o.level < LEVEL_COND) {\n      return code;\n    } else {\n      return \"(\" + code + \")\";\n    }\n  };\n  If.unfoldSoak = function(o, parent, name){\n    var that;\n    if (that = parent[name].unfoldSoak(o)) {\n      parent[name] = that.then;\n      return that.cond = parent.cond, that['void'] = parent['void'], that.then = Chain(parent), that;\n    }\n  };\n  return If;\n}(Node));\nexports.Label = Label = (function(superclass){\n  var ref$, prototype = extend$((import$(Label, superclass).displayName = 'Label', Label), superclass).prototype, constructor = Label;\n  function Label(label, it){\n    var fun;\n    this.label = label || '_';\n    this.it = it;\n    if (fun = (it instanceof Fun || it instanceof Class) && it || it.calling && it.it.head) {\n      fun.name || (fun.name = this.label, fun.labeled = true);\n      return it;\n    }\n  }\n  ref$ = Parens.prototype, prototype.children = ref$.children, prototype.isCallable = ref$.isCallable, prototype.isArray = ref$.isArray;\n  prototype.show = function(){\n    return this.label;\n  };\n  prototype.isStatement = YES;\n  prototype.getJump = function(ctx){\n    var ref$;\n    ctx || (ctx = {});\n    ((ref$ = ctx.labels) != null\n      ? ref$\n      : ctx.labels = []).push(this.label);\n    return this.it.getJump((ctx['break'] = true, ctx));\n  };\n  prototype.makeReturn = function(it){\n    this.it = this.it.makeReturn(it);\n    return this;\n  };\n  prototype.compileNode = function(o){\n    var label, it, labels;\n    label = this.label, it = this.it;\n    labels = o.labels = slice$.call(o.labels || []);\n    if (in$(label, labels)) {\n      this.carp(\"duplicate label \\\"\" + label + \"\\\"\");\n    }\n    labels.push(label);\n    it.isStatement() || (it = Block(it));\n    return (label + \": \") + (it instanceof Block\n      ? (o.indent += TAB, this.compileBlock(o, it))\n      : it.compile(o));\n  };\n  return Label;\n}(Node));\nexports.Cascade = Cascade = (function(superclass){\n  var prototype = extend$((import$(Cascade, superclass).displayName = 'Cascade', Cascade), superclass).prototype, constructor = Cascade;\n  function Cascade(input, output){\n    this.input = input;\n    this.output = output;\n  }\n  prototype.children = ['input', 'output'];\n  prototype.terminator = '';\n  prototype.delegate(['isCallable', 'isArray', 'isString', 'isRegex'], function(it){\n    return this.output[it]();\n  });\n  prototype.getJump = function(it){\n    return this.output.getJump(it);\n  };\n  prototype.makeReturn = function(ret){\n    this.ret = ret;\n    return this;\n  };\n  prototype.compileNode = function(o){\n    var level, input, output, ref, ref$, code, out;\n    level = o.level;\n    input = this.input, output = this.output, ref = this.ref;\n    if ('ret' in this || level && !this['void']) {\n      output.add((ref$ = Literal('..'), ref$.cascadee = true, ref$));\n    }\n    if ('ret' in this) {\n      output = output.makeReturn(this.ret);\n    }\n    if (ref) {\n      output = Assign(Arr(), output);\n    } else {\n      this.temps = [ref = o.scope.temporary('x')];\n    }\n    if (input instanceof Cascade) {\n      input.ref = ref;\n    } else {\n      input = Assign(JS(ref), input);\n    }\n    o.level && (o.level = LEVEL_PAREN);\n    code = input.compile(o);\n    o.ref = new String(ref);\n    out = Block(output).compile(o);\n    o.ref.erred || this.carp(\"unreferred cascadee\");\n    if (!level) {\n      return code + \"\" + input.terminator + \"\\n\" + out;\n    }\n    code += \", \" + out;\n    if (level > LEVEL_PAREN) {\n      return \"(\" + code + \")\";\n    } else {\n      return code;\n    }\n  };\n  return Cascade;\n}(Node));\nexports.JS = JS = (function(superclass){\n  var prototype = extend$((import$(JS, superclass).displayName = 'JS', JS), superclass).prototype, constructor = JS;\n  function JS(code, literal, comment){\n    var this$ = this instanceof ctor$ ? this : new ctor$;\n    this$.code = code;\n    this$.literal = literal;\n    this$.comment = comment;\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.show = function(){\n    if (this.comment) {\n      return this.code;\n    } else {\n      return \"`\" + this.code + \"`\";\n    }\n  };\n  prototype.terminator = '';\n  prototype.isAssignable = prototype.isCallable = function(){\n    return !this.comment;\n  };\n  prototype.compile = function(it){\n    if (this.literal) {\n      return entab(this.code, it.indent);\n    } else {\n      return this.code;\n    }\n  };\n  return JS;\n}(Node));\nexports.Require = Require = (function(superclass){\n  var prototype = extend$((import$(Require, superclass).displayName = 'Require', Require), superclass).prototype, constructor = Require;\n  function Require(body){\n    var this$ = this instanceof ctor$ ? this : new ctor$;\n    this$.body = body;\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.children = ['body'];\n  prototype.compile = function(o){\n    var chain, stripString, getFileName, getValue, processItem, item, this$ = this;\n    stripString = function(val){\n      var that;\n      if (that = /^['\"](.*)['\"]$/.exec(val)) {\n        return that[1];\n      } else {\n        return val;\n      }\n    };\n    getFileName = function(val){\n      var ref$;\n      return (ref$ = stripString(val).split('/'))[ref$.length - 1].split('.')[0].replace(/-[a-z]/ig, function(it){\n        return it.charAt(1).toUpperCase();\n      });\n    };\n    getValue = function(item){\n      var ref$;\n      switch (false) {\n      case !(item instanceof Key):\n        return item.name;\n      case !(item instanceof Var):\n        return item.value;\n      case !(item instanceof Literal):\n        return item.value;\n      case !(item instanceof Index):\n        return getValue(item.key);\n      case !(item instanceof Chain):\n        if ((ref$ = item.tails) != null && ref$.length) {\n          chain = item.tails;\n        }\n        return getValue(item.head);\n      default:\n        return item;\n      }\n    };\n    processItem = function(item){\n      var ref$, asg, value, main;\n      ref$ = (function(){\n        var ref$;\n        switch (false) {\n        case !(item instanceof Prop):\n          return [getValue(item.key), item.val];\n        case !(item instanceof Chain):\n          if ((ref$ = item.tails) != null && ref$.length) {\n            chain = item.tails;\n            return [(ref$ = item.tails)[ref$.length - 1], item.head];\n          } else {\n            return [item.head, item.head];\n          }\n          break;\n        default:\n          return [item, item];\n        }\n      }()), asg = ref$[0], value = ref$[1];\n      asg = getFileName(getValue(asg));\n      value = stripString(getValue(value));\n      main = Chain(Var('require')).add(Call([Literal(\"'\" + value + \"'\")]));\n      return Assign(Var(asg), chain ? Chain(main, chain) : main).compile(o);\n    };\n    if (this.body.items != null) {\n      return (function(){\n        var i$, ref$, len$, results$ = [];\n        for (i$ = 0, len$ = (ref$ = this.body.items).length; i$ < len$; ++i$) {\n          item = ref$[i$];\n          results$.push(processItem(item));\n        }\n        return results$;\n      }.call(this)).join(\";\\n\" + o.indent);\n    } else {\n      return processItem(this.body);\n    }\n  };\n  return Require;\n}(Node));\nexports.Util = Util = (function(superclass){\n  var prototype = extend$((import$(Util, superclass).displayName = 'Util', Util), superclass).prototype, constructor = Util;\n  function Util(verb){\n    var this$ = this instanceof ctor$ ? this : new ctor$;\n    this$.verb = verb;\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.show = Jump.prototype.show;\n  prototype.isCallable = YES;\n  prototype.compile = function(){\n    return util(this.verb);\n  };\n  Util.Extends = function(){\n    return Call.make(Util('extend'), [arguments[0], arguments[1]]);\n  };\n  return Util;\n}(Node));\nexports.Vars = Vars = (function(superclass){\n  var prototype = extend$((import$(Vars, superclass).displayName = 'Vars', Vars), superclass).prototype, constructor = Vars;\n  function Vars(vars){\n    var this$ = this instanceof ctor$ ? this : new ctor$;\n    this$.vars = vars;\n    return this$;\n  } function ctor$(){} ctor$.prototype = prototype;\n  prototype.children = ['vars'];\n  prototype.makeReturn = THIS;\n  prototype.compile = function(o, level){\n    var i$, ref$, len$, v, value;\n    for (i$ = 0, len$ = (ref$ = this.vars).length; i$ < len$; ++i$) {\n      v = ref$[i$], value = v.value;\n      if (!(v instanceof Var)) {\n        v.carp('invalid variable declaration');\n      }\n      if (o.scope.check(value)) {\n        v.carp(\"redeclaration of \\\"\" + value + \"\\\"\");\n      }\n      o.scope.declare(value, v);\n    }\n    return Literal('void').compile(o, level);\n  };\n  return Vars;\n}(Node));\nexports.L = function(yylineno, node){\n  return node.line = yylineno + 1, node;\n};\nexports.Decl = function(type, nodes, lno){\n  if (!nodes[0]) {\n    throw SyntaxError(\"empty \" + type + \" on line \" + lno);\n  }\n  return DECLS[type](nodes);\n};\nDECLS = {\n  'export': function(lines){\n    var i, out, node, that, ref$;\n    i = -1;\n    out = Util('out');\n    while (node = lines[++i]) {\n      if (node instanceof Block) {\n        lines.splice.apply(lines, [i--, 1].concat(slice$.call(node.lines)));\n        continue;\n      }\n      if (that = node instanceof Fun && node.name) {\n        lines.splice(i++, 0, Assign(Chain(out, [Index(Key(that))]), Var(that)));\n        continue;\n      }\n      lines[i] = (that = node.varName() || node instanceof Assign && node.left.varName() || node instanceof Class && ((ref$ = node.title) != null ? ref$.varName() : void 8))\n        ? Assign(Chain(out, [Index(Key(that))]), node)\n        : Import(out, node);\n    }\n    return Block(lines);\n  },\n  'import': function(lines, all){\n    var i$, len$, i, line;\n    for (i$ = 0, len$ = lines.length; i$ < len$; ++i$) {\n      i = i$;\n      line = lines[i$];\n      lines[i] = Import(Literal('this'), line, all);\n    }\n    return Block(lines);\n  },\n  importAll: function(it){\n    return this['import'](it, true);\n  },\n  'const': function(lines){\n    var i$, len$, node;\n    for (i$ = 0, len$ = lines.length; i$ < len$; ++i$) {\n      node = lines[i$];\n      node.op === '=' || node.carp('invalid constant variable declaration');\n      node['const'] = true;\n    }\n    return Block(lines);\n  },\n  'var': Vars\n};\nfunction Scope(parent, shared){\n  this.parent = parent;\n  this.shared = shared;\n  this.variables = {};\n}\nref$ = Scope.prototype;\nref$.READ_ONLY = {\n  'const': 'constant',\n  'function': 'function',\n  undefined: 'undeclared'\n};\nref$.add = function(name, type, node){\n  var t, that;\n  if (node && (t = this.variables[name + \".\"])) {\n    if (that = this.READ_ONLY[t] || this.READ_ONLY[type]) {\n      node.carp(\"redeclaration of \" + that + \" \\\"\" + name + \"\\\"\");\n    } else if (t === type && type === 'arg') {\n      node.carp(\"duplicate parameter \\\"\" + name + \"\\\"\");\n    } else if (t === 'upvar') {\n      node.carp(\"accidental shadow of \\\"\" + name + \"\\\"\");\n    }\n    if (t == 'arg' || t == 'function') {\n      return name;\n    }\n  }\n  this.variables[name + \".\"] = type;\n  return name;\n};\nref$.get = function(name){\n  return this.variables[name + \".\"];\n};\nref$.declare = function(name, node, constant){\n  var that, scope;\n  if (that = this.shared) {\n    if (this.check(name)) {\n      return;\n    }\n    scope = that;\n  } else {\n    scope = this;\n  }\n  return scope.add(name, constant ? 'const' : 'var', node);\n};\nref$.assign = function(name, value){\n  return this.add(name, {\n    value: value\n  });\n};\nref$.temporary = function(name){\n  var ref$;\n  name || (name = 'ref');\n  while ((ref$ = this.variables[name + \"$.\"]) != 'reuse' && ref$ != void 8) {\n    name = name.length < 2 && name < 'z'\n      ? String.fromCharCode(name.charCodeAt() + 1)\n      : name.replace(/\\d*$/, fn$);\n  }\n  return this.add(name + '$', 'var');\n  function fn$(it){\n    return ++it;\n  }\n};\nref$.free = function(name){\n  return this.add(name, 'reuse');\n};\nref$.check = function(name, above){\n  var type, ref$;\n  if ((type = this.variables[name + \".\"]) || !above) {\n    return type;\n  }\n  return (ref$ = this.parent) != null ? ref$.check(name, above) : void 8;\n};\nref$.checkReadOnly = function(name){\n  var that, ref$, key$;\n  if (that = this.READ_ONLY[this.check(name, true)]) {\n    return that;\n  }\n  (ref$ = this.variables)[key$ = name + \".\"] || (ref$[key$] = 'upvar');\n  return '';\n};\nref$.emit = function(code, tab){\n  var vrs, asn, fun, name, ref$, type, that, val;\n  vrs = [];\n  asn = [];\n  fun = [];\n  for (name in ref$ = this.variables) {\n    type = ref$[name];\n    name = name.slice(0, -1);\n    if (type == 'var' || type == 'const' || type == 'reuse') {\n      vrs.push(name);\n    } else if (that = type.value) {\n      if (~(val = entab(that, tab)).lastIndexOf('function(', 0)) {\n        fun.push(\"function \" + name + val.slice(8));\n      } else {\n        asn.push(name + \" = \" + val);\n      }\n    }\n  }\n  if (that = vrs.concat(asn).join(', ')) {\n    code = tab + \"var \" + that + \";\\n\" + code;\n  }\n  if (that = fun.join(\"\\n\" + tab)) {\n    return code + \"\\n\" + tab + that;\n  } else {\n    return code;\n  }\n};\nfunction YES(){\n  return true;\n}\nfunction NO(){\n  return false;\n}\nfunction THIS(){\n  return this;\n}\nfunction VOID(){}\nUTILS = {\n  clone: 'function(it){\\n  function fun(){} fun.prototype = it;\\n  return new fun;\\n}',\n  extend: 'function(sub, sup){\\n  function fun(){} fun.prototype = (sub.superclass = sup).prototype;\\n  (sub.prototype = new fun).constructor = sub;\\n  if (typeof sup.extended == \\'function\\') sup.extended(sub);\\n  return sub;\\n}',\n  bind: 'function(obj, key, target){\\n  return function(){ return (target || obj)[key].apply(obj, arguments) };\\n}',\n  'import': 'function(obj, src){\\n  var own = {}.hasOwnProperty;\\n  for (var key in src) if (own.call(src, key)) obj[key] = src[key];\\n  return obj;\\n}',\n  importAll: 'function(obj, src){\\n  for (var key in src) obj[key] = src[key];\\n  return obj;\\n}',\n  repeatString: 'function(str, n){\\n  for (var r = \\'\\'; n > 0; (n >>= 1) && (str += str)) if (n & 1) r += str;\\n  return r;\\n}',\n  repeatArray: 'function(arr, n){\\n  for (var r = []; n > 0; (n >>= 1) && (arr = arr.concat(arr)))\\n    if (n & 1) r.push.apply(r, arr);\\n  return r;\\n}',\n  'in': 'function(x, arr){\\n  var i = -1, l = arr.length >>> 0;\\n  while (++i < l) if (x === arr[i] && i in arr) return true;\\n  return false;\\n}',\n  out: 'typeof exports != \\'undefined\\' && exports || this',\n  curry: 'function(f, args){\\n  return f.length > 1 ? function(){\\n    var params = args ? args.concat() : [];\\n    return params.push.apply(params, arguments) < f.length && arguments.length ?\\n      curry$.call(this, f, params) : f.apply(this, params);\\n  } : f;\\n}',\n  compose: 'function(fs){\\n  return function(){\\n    var i, args = arguments;\\n    for (i = fs.length; i > 0; --i) { args = [fs[i-1].apply(this, args)]; }\\n    return args[0];\\n  };\\n}',\n  flip: 'function(f){\\n  return curry$(function (x, y) { return f(y, x); });\\n}',\n  partialize: 'function(f, args, where){\\n  return function(){\\n    var params = slice$.call(arguments), i,\\n        len = params.length, wlen = where.length,\\n        ta = args ? args.concat() : [], tw = where ? where.concat() : [];\\n    for(i = 0; i < len; ++i) { ta[tw[0]] = params[i]; tw.shift(); }\\n    return len < wlen && len ? partialize$(f, ta, tw) : f.apply(this, ta);\\n  };\\n}',\n  not: 'function(x){ return !x; }',\n  deepEq: 'function(x, y, type){\\n  var toString = {}.toString, hasOwnProperty = {}.hasOwnProperty,\\n      has = function (obj, key) { return hasOwnProperty.call(obj, key); };\\n  first = true;\\n  return eq(x, y, []);\\n  function eq(a, b, stack) {\\n    var className, length, size, result, alength, blength, r, key, ref, sizeB;\\n    if (a == null || b == null) { return a === b; }\\n    if (a.__placeholder__ || b.__placeholder__) { return true; }\\n    if (a === b) { return a !== 0 || 1 / a == 1 / b; }\\n    className = toString.call(a);\\n    if (toString.call(b) != className) { return false; }\\n    switch (className) {\\n      case \\'[object String]\\': return a == String(b);\\n      case \\'[object Number]\\':\\n        return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);\\n      case \\'[object Date]\\':\\n      case \\'[object Boolean]\\':\\n        return +a == +b;\\n      case \\'[object RegExp]\\':\\n        return a.source == b.source &&\\n               a.global == b.global &&\\n               a.multiline == b.multiline &&\\n               a.ignoreCase == b.ignoreCase;\\n    }\\n    if (typeof a != \\'object\\' || typeof b != \\'object\\') { return false; }\\n    length = stack.length;\\n    while (length--) { if (stack[length] == a) { return true; } }\\n    stack.push(a);\\n    size = 0;\\n    result = true;\\n    if (className == \\'[object Array]\\') {\\n      alength = a.length;\\n      blength = b.length;\\n      if (first) { \\n        switch (type) {\\n        case \\'===\\': result = alength === blength; break;\\n        case \\'<==\\': result = alength <= blength; break;\\n        case \\'<<=\\': result = alength < blength; break;\\n        }\\n        size = alength;\\n        first = false;\\n      } else {\\n        result = alength === blength;\\n        size = alength;\\n      }\\n      if (result) {\\n        while (size--) {\\n          if (!(result = size in a == size in b && eq(a[size], b[size], stack))){ break; }\\n        }\\n      }\\n    } else {\\n      if (\\'constructor\\' in a != \\'constructor\\' in b || a.constructor != b.constructor) {\\n        return false;\\n      }\\n      for (key in a) {\\n        if (has(a, key)) {\\n          size++;\\n          if (!(result = has(b, key) && eq(a[key], b[key], stack))) { break; }\\n        }\\n      }\\n      if (result) {\\n        sizeB = 0;\\n        for (key in b) {\\n          if (has(b, key)) { ++sizeB; }\\n        }\\n        if (first) {\\n          if (type === \\'<<=\\') {\\n            result = size < sizeB;\\n          } else if (type === \\'<==\\') {\\n            result = size <= sizeB\\n          } else {\\n            result = size === sizeB;\\n          }\\n        } else {\\n          first = false;\\n          result = size === sizeB;\\n        }\\n      }\\n    }\\n    stack.pop();\\n    return result;\\n  }\\n}',\n  split: \"''.split\",\n  replace: \"''.replace\",\n  toString: '{}.toString',\n  join: '[].join',\n  slice: '[].slice',\n  splice: '[].splice'\n};\nLEVEL_TOP = 0;\nLEVEL_PAREN = 1;\nLEVEL_LIST = 2;\nLEVEL_COND = 3;\nLEVEL_OP = 4;\nLEVEL_CALL = 5;\n(function(){\n  this['&&'] = this['||'] = this['xor'] = 0.2;\n  this['.&.'] = this['.^.'] = this['.|.'] = 0.3;\n  this['=='] = this['!='] = this['~='] = this['!~='] = this['==='] = this['!=='] = 0.4;\n  this['<'] = this['>'] = this['<='] = this['>='] = this.of = this['instanceof'] = this['+++'] = 0.5;\n  this['<<='] = this['>>='] = this['<=='] = this['>=='] = 0.5;\n  this['.<<.'] = this['.>>.'] = this['.>>>.'] = 0.6;\n  this['+'] = this['-'] = 0.7;\n  this['*'] = this['/'] = this['%'] = 0.8;\n}.call(PREC = {\n  unary: 0.9\n}));\nTAB = '  ';\nID = /^(?!\\d)[\\w$\\xAA-\\uFFDC]+$/;\nSIMPLENUM = /^\\d+$/;\nfunction util(it){\n  return Scope.root.assign(it + '$', UTILS[it]);\n}\nfunction entab(code, tab){\n  return code.replace(/\\n/g, '\\n' + tab);\n}\nfunction import$(obj, src){\n  var own = {}.hasOwnProperty;\n  for (var key in src) if (own.call(src, key)) obj[key] = src[key];\n  return obj;\n}\nfunction clone$(it){\n  function fun(){} fun.prototype = it;\n  return new fun;\n}\nfunction extend$(sub, sup){\n  function fun(){} fun.prototype = (sub.superclass = sup).prototype;\n  (sub.prototype = new fun).constructor = sub;\n  if (typeof sup.extended == 'function') sup.extended(sub);\n  return sub;\n}\nfunction in$(x, arr){\n  var i = -1, l = arr.length >>> 0;\n  while (++i < l) if (x === arr[i] && i in arr) return true;\n  return false;\n}\nfunction repeatString$(str, n){\n  for (var r = ''; n > 0; (n >>= 1) && (str += str)) if (n & 1) r += str;\n  return r;\n}\nfunction importAll$(obj, src){\n  for (var key in src) obj[key] = src[key];\n  return obj;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/ast.js\n// module id = 2\n// module chunks = 0","var string, TABS, unlines, enlines, enslash, reslash, camelize, character, KEYWORDS_SHARED, KEYWORDS_UNUSED, KEYWORDS, ID, SYMBOL, SPACE, MULTIDENT, SIMPLESTR, JSTOKEN, BSTOKEN, NUMBER, NUMBER_OMIT, REGEX, HEREGEX_OMIT, LASTDENT, INLINEDENT, NONASCII, OPENERS, CLOSERS, INVERSES, i, o, c, CHAIN, ARG, BLOCK_USERS, slice$ = [].slice;\nexports.lex = function(code, options){\n  return clone$(exports).tokenize(code || '', options || {});\n};\nexports.rewrite = function(it){\n  var ref$;\n  it || (it = this.tokens);\n  firstPass(it);\n  addImplicitIndentation(it);\n  rewriteBlockless(it);\n  addImplicitParentheses(it);\n  addImplicitBraces(it);\n  expandLiterals(it);\n  if (((ref$ = it[0]) != null ? ref$[0] : void 8) === 'NEWLINE') {\n    it.shift();\n  }\n  return it;\n};\nexports.tokenize = function(code, o){\n  var i, c, that;\n  this.inter || (code = code.replace(/[\\r\\u2028\\u2029\\uFEFF]/g, ''));\n  code = '\\n' + code;\n  this.tokens = [this.last = ['NEWLINE', '\\n', 0]];\n  this.line = ~-o.line;\n  this.dents = [];\n  this.closes = [];\n  this.parens = [];\n  i = 0;\n  while (c = code.charAt(i)) {\n    switch (c) {\n    case ' ':\n      i += this.doSpace(code, i);\n      break;\n    case '\\n':\n      i += this.doLine(code, i);\n      break;\n    case '\\\\':\n      i += this.doBackslash(code, i);\n      break;\n    case '\\'':\n    case '\"':\n      i += this.doString(code, i, c);\n      break;\n    case \"0\":\n    case \"1\":\n    case \"2\":\n    case \"3\":\n    case \"4\":\n    case \"5\":\n    case \"6\":\n    case \"7\":\n    case \"8\":\n    case \"9\":\n      i += this.doNumber(code, i);\n      break;\n    case '/':\n      switch (code.charAt(i + 1)) {\n      case '*':\n        i += this.doComment(code, i);\n        break;\n      case '/':\n        i += this.doHeregex(code, i);\n        break;\n      default:\n        i += this.doRegex(code, i) || this.doLiteral(code, i);\n      }\n      break;\n    case '`':\n      if ('`' === code.charAt(i + 1)) {\n        i += this.doJS(code, i);\n      } else {\n        i += this.doLiteral(code, i);\n      }\n      break;\n    default:\n      i += this.doID(code, i) || this.doLiteral(code, i) || this.doSpace(code, i);\n    }\n  }\n  this.dedent(this.dent);\n  if (that = this.closes.pop()) {\n    this.carp(\"missing `\" + that + \"`\");\n  }\n  if (this.inter) {\n    this.rest == null && this.carp('unterminated interpolation');\n  } else {\n    this.last.spaced = true;\n    this.newline();\n  }\n  o.raw || this.rewrite();\n  return this.tokens;\n};\nexports.dent = 0;\nexports.identifiers = {};\nexports.hasOwn = Object.prototype.hasOwnProperty;\nexports.checkConsistency = function(camel, id){\n  if (this.hasOwn.call(this.identifiers, camel) && this.identifiers[camel] !== id) {\n    throw new ReferenceError(\"Inconsistent use of \" + camel + \" as \" + id + \" on line \" + (-~this.line));\n  } else {\n    return this.identifiers[camel] = id;\n  }\n};\nexports.doID = function(code, index){\n  var regexMatch, input, id, e, last, ref$, tag, ref1$, that;\n  input = (regexMatch = (ID.lastIndex = index, ID).exec(code))[0];\n  if (!input) {\n    return 0;\n  }\n  id = camelize(regexMatch[1]);\n  if (/-/.test(regexMatch[1])) {\n    this.checkConsistency(id, regexMatch[1]);\n  }\n  if (NONASCII.test(id)) {\n    try {\n      Function(\"var \" + id);\n    } catch (e$) {\n      e = e$;\n      this.carp(\"invalid identifier \\\"\" + id + \"\\\"\");\n    }\n  }\n  last = this.last;\n  if (regexMatch[2] || last[0] === 'DOT' || this.adi()) {\n    this.token('ID', in$(id, KEYWORDS) ? (ref$ = Object(id), ref$.reserved = true, ref$) : id);\n    if (regexMatch[2]) {\n      this.token(':', ':');\n    }\n    return input.length;\n  }\n  switch (id) {\n  case 'true':\n  case 'false':\n  case 'on':\n  case 'off':\n  case 'yes':\n  case 'no':\n  case 'null':\n  case 'void':\n  case 'undefined':\n  case 'arguments':\n  case 'debugger':\n    tag = 'LITERAL';\n    break;\n  case 'new':\n  case 'do':\n  case 'typeof':\n  case 'delete':\n    tag = 'UNARY';\n    break;\n  case 'return':\n  case 'throw':\n    tag = 'HURL';\n    break;\n  case 'break':\n  case 'continue':\n    tag = 'JUMP';\n    break;\n  case 'this':\n  case 'eval':\n  case 'super':\n    return this.token('LITERAL', id, true).length;\n  case 'for':\n    this.seenFor = true;\n    // fallthrough\n  case 'then':\n    this.wantBy = false;\n    break;\n  case 'catch':\n  case 'function':\n    id = '';\n    break;\n  case 'where':\n    break;\n  case 'in':\n  case 'of':\n    if (this.seenFor) {\n      this.seenFor = false;\n      if (id === 'in') {\n        this.wantBy = true;\n        id = '';\n        if (last[0] === 'ID' && ((ref$ = (ref1$ = this.tokens)[ref1$.length - 2][0]) == ',' || ref$ == ']' || ref$ == '}')) {\n          id = this.tokens.pop()[1];\n          if ((ref$ = this.tokens)[ref$.length - 1][0] === ',') {\n            this.tokens.pop();\n          }\n        }\n      }\n      break;\n    }\n    // fallthrough\n  case 'instanceof':\n    if (last[1] === '!') {\n      id = this.tokens.pop()[1] + id;\n    }\n    tag = (ref$ = this.tokens)[ref$.length - 1][0] === '(' ? 'BIOPR' : 'RELATION';\n    break;\n  case 'not':\n    if (last.alias && last[1] === '===') {\n      return last[1] = '!==', 3;\n    }\n    tag = 'UNARY';\n    id = '!';\n    break;\n  case 'and':\n  case 'or':\n  case 'xor':\n  case 'is':\n  case 'isnt':\n    this.unline();\n    tag = id == 'is' || id == 'isnt' ? 'COMPARE' : 'LOGIC';\n    if (last[0] === '(') {\n      tag = 'BIOP';\n    }\n    this.token(tag, (function(){\n      switch (id) {\n      case 'is':\n        return '===';\n      case 'isnt':\n        return '!==';\n      case 'or':\n        return '||';\n      case 'and':\n        return '&&';\n      case 'xor':\n        return 'xor';\n      }\n    }()));\n    this.last.alias = true;\n    return id.length;\n  case 'unless':\n    tag = 'IF';\n    break;\n  case 'until':\n    tag = 'WHILE';\n    break;\n  case 'import':\n    if (last[0] === '(') {\n      id = '<<<';\n      tag = 'BIOP';\n    } else {\n      if (able(this.tokens)) {\n        id = '<<<';\n      } else {\n        tag = 'DECL';\n      }\n    }\n    break;\n  case 'export':\n  case 'const':\n  case 'var':\n    tag = 'DECL';\n    break;\n  case 'with':\n    tag = (function(){\n      switch (false) {\n      case !able(this.tokens):\n        return 'CLONEPORT';\n      case last[0] !== '(':\n        return 'BIOP';\n      default:\n        return 'WITH';\n      }\n    }.call(this));\n    break;\n  case 'when':\n    tag = 'CASE';\n    // fallthrough\n  case 'case':\n    if (this.doCase()) {\n      return input.length;\n    }\n    break;\n  case 'match':\n    tag = 'SWITCH';\n    break;\n  case 'loop':\n    this.token('WHILE', id);\n    this.token('LITERAL', 'true');\n    return input.length;\n  default:\n    if (in$(id, KEYWORDS_SHARED)) {\n      break;\n    }\n    if (in$(id, KEYWORDS_UNUSED)) {\n      this.carp(\"reserved word \\\"\" + id + \"\\\"\");\n    }\n    if (!last[1] && ((ref$ = last[0]) == 'FUNCTION' || ref$ == 'LABEL')) {\n      last[1] = id;\n      last.spaced = false;\n      return input.length;\n    }\n    tag = 'ID';\n    switch (id) {\n    case 'own':\n      if (last[0] === 'FOR') {\n        tag = 'OWN';\n      }\n      break;\n    case 'otherwise':\n      if ((ref$ = last[0]) == 'CASE' || ref$ == '|') {\n        last[0] = 'DEFAULT';\n        return id.length;\n      }\n      break;\n    case 'all':\n      if (that = last[1] === '<<<' && '<' || last[1] === 'import' && 'All') {\n        last[1] += that;\n        return 3;\n      }\n      break;\n    case 'from':\n      this.forange() && (tag = 'FROM');\n      break;\n    case 'to':\n    case 'til':\n      this.forange() && this.tokens.push(['FROM', '', this.line], ['STRNUM', '0', this.line]);\n      if (this.seenFrom) {\n        this.seenFrom = false;\n        this.wantBy = true;\n        tag = 'TO';\n      } else if (!last.callable && last[0] === 'STRNUM' && (ref$ = this.tokens)[ref$.length - 2][0] === '[') {\n        last[0] = 'RANGE';\n        last.op = id;\n        return id.length;\n      } else if (in$(']', this.closes)) {\n        this.token('TO', id);\n        return id.length;\n      }\n      break;\n    case 'by':\n      if (last[0] === 'STRNUM' && (ref$ = this.tokens)[ref$.length - 2][0] === 'RANGE' && (ref$ = this.tokens)[ref$.length - 3][0] === '[') {\n        tag = 'RANGE_BY';\n      } else if (in$(']', this.closes)) {\n        tag = 'BY';\n      } else {\n        this.wantBy && (this.wantBy = !(tag = 'BY'));\n      }\n      break;\n    case 'ever':\n      if (last[0] === 'FOR') {\n        this.seenFor = false;\n        last[0] = 'WHILE';\n        tag = 'LITERAL';\n        id = 'true';\n      }\n    }\n  }\n  tag || (tag = regexMatch[1].toUpperCase());\n  if ((tag == 'COMPARE' || tag == 'LOGIC' || tag == 'RELATION') && last[0] === '(') {\n    tag = tag === 'RELATION' ? 'BIOPR' : 'BIOP';\n  }\n  if (tag == 'RELATION' || tag == 'THEN' || tag == 'ELSE' || tag == 'CASE' || tag == 'DEFAULT' || tag == 'CATCH' || tag == 'FINALLY' || tag == 'IN' || tag == 'OF' || tag == 'FROM' || tag == 'TO' || tag == 'BY' || tag == 'EXTENDS' || tag == 'IMPLEMENTS' || tag == 'WHERE') {\n    this.unline();\n  }\n  this.token(tag, id);\n  return input.length;\n};\nexports.doNumber = function(code, lastIndex){\n  var input, regexMatch, last, radix, num, rnum, ref$;\n  NUMBER.lastIndex = lastIndex;\n  if (!(input = (regexMatch = NUMBER.exec(code))[0])) {\n    return 0;\n  }\n  last = this.last;\n  if (regexMatch[5] && (last[0] === 'DOT' || this.adi())) {\n    this.token('STRNUM', regexMatch[4].replace(NUMBER_OMIT, ''));\n    return regexMatch[4].length;\n  }\n  if (radix = regexMatch[1]) {\n    num = parseInt(rnum = regexMatch[2].replace(NUMBER_OMIT, ''), radix);\n    if (radix > 36 || radix < 2) {\n      this.carp(\"invalid number base \" + radix + \" (with number \" + rnum + \"), base must be from 2 to 36\");\n    }\n    if (isNaN(num) || num === parseInt(rnum.slice(0, -1), radix)) {\n      this.carp(\"invalid number \" + rnum + \" in base \" + radix);\n    }\n    num += '';\n  } else {\n    num = (regexMatch[3] || input).replace(NUMBER_OMIT, '');\n    if (regexMatch[3] && num.charAt() === '0' && ((ref$ = num.charAt(1)) != '' && ref$ != '.')) {\n      this.carp(\"deprecated octal literal \" + regexMatch[4]);\n    }\n  }\n  if (!last.spaced && last[0] === '+-') {\n    last[0] = 'STRNUM';\n    last[1] += num;\n    return input.length;\n  }\n  this.strnum(num);\n  return input.length;\n};\nexports.doString = function(code, index, q){\n  var parts, str;\n  if (q === code.charAt(index + 1)) {\n    return q === code.charAt(index + 2)\n      ? this.doHeredoc(code, index, q)\n      : (this.strnum(q + q), 2);\n  }\n  if (q === '\"') {\n    parts = this.interpolate(code, index, q);\n    this.addInterpolated(parts, unlines);\n    return 1 + parts.size;\n  }\n  str = (SIMPLESTR.lastIndex = index, SIMPLESTR).exec(code)[0] || this.carp('unterminated string');\n  this.strnum(unlines(this.string(q, str.slice(1, -1))));\n  return this.countLines(str).length;\n};\nexports.doHeredoc = function(code, index, q){\n  var end, raw, doc, parts, tabs, i$, len$, i, t;\n  if (q === '\\'') {\n    ~(end = code.indexOf(q + q + q, index + 3)) || this.carp('unterminated heredoc');\n    raw = code.slice(index + 3, end);\n    doc = raw.replace(LASTDENT, '');\n    this.strnum(enlines(this.string(q, lchomp(detab(doc, heretabs(doc))))));\n    return this.countLines(raw).length + 6;\n  }\n  parts = this.interpolate(code, index, q + q + q);\n  tabs = heretabs(code.slice(index + 3, index + parts.size).replace(LASTDENT, ''));\n  for (i$ = 0, len$ = parts.length; i$ < len$; ++i$) {\n    i = i$;\n    t = parts[i$];\n    if (t[0] === 'S') {\n      if (i + 1 === parts.length) {\n        t[1] = t[1].replace(LASTDENT, '');\n      }\n      t[1] = detab(t[1], tabs);\n      if (i === 0) {\n        t[1] = lchomp(t[1]);\n      }\n    }\n  }\n  this.addInterpolated(parts, enlines);\n  return 3 + parts.size;\n};\nexports.doComment = function(code, index){\n  var comment, end, ref$;\n  comment = ~(end = code.indexOf('*/', index + 2))\n    ? code.slice(index, end + 2)\n    : code.slice(index) + '*/';\n  if ((ref$ = this.last[0]) == 'NEWLINE' || ref$ == 'INDENT' || ref$ == 'THEN') {\n    this.token('COMMENT', detab(comment, this.dent));\n    this.token('NEWLINE', '\\n');\n  }\n  return this.countLines(comment).length;\n};\nexports.doJS = function(code, lastIndex){\n  var js, ref$;\n  JSTOKEN.lastIndex = lastIndex;\n  js = JSTOKEN.exec(code)[0] || this.carp('unterminated JS literal');\n  this.token('LITERAL', (ref$ = Object(detab(js.slice(2, -2), this.dent)), ref$.js = true, ref$), true);\n  return this.countLines(js).length;\n};\nexports.doRegex = function(code, index){\n  var divisible, ref$, input, body, flag;\n  if (divisible = able(this.tokens) || this.last[0] === 'CREMENT') {\n    if (!this.last.spaced || ((ref$ = code.charAt(index + 1)) == ' ' || ref$ == '=')) {\n      return 0;\n    }\n  }\n  ref$ = (REGEX.lastIndex = index, REGEX).exec(code), input = ref$[0], body = ref$[1], flag = ref$[2];\n  if (input) {\n    this.regex(body, flag);\n  } else if (!divisible && this.last[0] !== '(') {\n    this.carp('unterminated regex');\n  }\n  return input.length;\n};\nexports.doHeregex = function(code, index){\n  var tokens, last, parts, rest, flag, i$, i, t, dynaflag, len$, val, one;\n  tokens = this.tokens, last = this.last;\n  parts = this.interpolate(code, index, '//');\n  rest = code.slice(index + 2 + parts.size);\n  flag = this.validate(/^(?:[gimy]{1,4}|[?$]?)/.exec(rest)[0]);\n  if (parts[1]) {\n    if (flag === '$') {\n      this.adi();\n      this.token('(', '\"');\n    } else {\n      tokens.push(['ID', 'RegExp', last[2]], ['CALL(', '', last[2]]);\n      if (flag === '?') {\n        for (i$ = parts.length - 1; i$ >= 0; --i$) {\n          i = i$;\n          t = parts[i$];\n          if (t[0] === 'TOKENS') {\n            dynaflag = parts.splice(i, 1)[0][1];\n            break;\n          }\n        }\n      }\n    }\n    for (i$ = 0, len$ = parts.length; i$ < len$; ++i$) {\n      i = i$;\n      t = parts[i$];\n      if (t[0] === 'TOKENS') {\n        tokens.push.apply(tokens, t[1]);\n      } else {\n        val = t[1].replace(HEREGEX_OMIT, '');\n        if (one && !val) {\n          continue;\n        }\n        one = tokens.push((t[0] = 'STRNUM', t[1] = this.string('\\'', enslash(val)), t));\n      }\n      tokens.push(['+-', '+', tokens[tokens.length - 1][2]]);\n    }\n    --tokens.length;\n    if (dynaflag || flag >= 'g') {\n      this.token(',', ',');\n      if (dynaflag) {\n        tokens.push.apply(tokens, dynaflag);\n      } else {\n        this.token('STRNUM', \"'\" + flag + \"'\");\n      }\n    }\n    this.token(flag === '$' ? ')' : ')CALL', '');\n  } else {\n    this.regex(reslash(parts[0][1].replace(HEREGEX_OMIT, '')), flag);\n  }\n  return 2 + parts.size + flag.length;\n};\nexports.doBackslash = function(code, lastIndex){\n  var ref$, input, word;\n  BSTOKEN.lastIndex = lastIndex;\n  ref$ = BSTOKEN.exec(code), input = ref$[0], word = ref$[1];\n  if (word) {\n    this.strnum(this.string('\\'', word));\n  } else {\n    this.countLines(input);\n  }\n  return input.length;\n};\nexports.doLine = function(code, index){\n  var ref$, input, tabs, length, last, that, delta, tag, val;\n  ref$ = (MULTIDENT.lastIndex = index, MULTIDENT).exec(code), input = ref$[0], tabs = ref$[1];\n  length = this.countLines(input).length;\n  last = this.last;\n  last.eol = true;\n  last.spaced = true;\n  if (index + length >= code.length) {\n    return length;\n  }\n  if (that = tabs && (this.emender || (this.emender = RegExp('[^' + tabs.charAt() + ']'))).exec(tabs)) {\n    this.carp(\"contaminated indent \" + escape(that));\n  }\n  if (0 > (delta = tabs.length - this.dent)) {\n    this.dedent(-delta);\n    this.newline();\n  } else {\n    tag = last[0], val = last[1];\n    if (tag === 'ASSIGN' && ((ref$ = val + '') != '=' && ref$ != ':=' && ref$ != '+=') || (tag == '+-' || tag == 'PIPE' || tag == 'BACKPIPE' || tag == 'DOT' || tag == 'LOGIC' || tag == 'MATH' || tag == 'COMPARE' || tag == 'RELATION' || tag == 'SHIFT' || tag == 'IN' || tag == 'OF' || tag == 'TO' || tag == 'BY' || tag == 'FROM' || tag == 'EXTENDS' || tag == 'IMPLEMENTS')) {\n      return length;\n    }\n    if (delta) {\n      this.indent(delta);\n    } else {\n      this.newline();\n    }\n  }\n  this.wantBy = false;\n  return length;\n};\nexports.doSpace = function(code, lastIndex){\n  var input;\n  SPACE.lastIndex = lastIndex;\n  if (input = SPACE.exec(code)[0]) {\n    this.last.spaced = true;\n  }\n  return input.length;\n};\nexports.doCase = function(){\n  var ref$, ref1$;\n  if (((ref$ = this.last[0]) == 'ASSIGN' || ref$ == '->' || ref$ == ':') || (this.last[0] === 'INDENT' && ((ref$ = (ref1$ = this.tokens)[ref1$.length - 2][0]) == 'ASSIGN' || ref$ == '->' || ref$ == ':'))) {\n    this.token('SWITCH', 'switch');\n    this.line++;\n    return this.token('CASE', 'case');\n  }\n};\nexports.doLiteral = function(code, index){\n  var sym, tag, val, ref$, ref1$, arrow, i$, i, t, that, up, this$ = this;\n  if (!(sym = (SYMBOL.lastIndex = index, SYMBOL).exec(code)[0])) {\n    return 0;\n  }\n  switch (tag = val = sym) {\n  case '=>':\n    tag = 'THEN';\n    this.unline();\n    break;\n  case '|':\n    tag = 'CASE';\n    if (this.doCase()) {\n      return sym.length;\n    }\n    break;\n  case '|>':\n    tag = 'PIPE';\n    break;\n  case '`':\n    tag = 'BACKTICK';\n    break;\n  case '<<':\n  case '>>':\n    tag = 'COMPOSE';\n    break;\n  case '<|':\n    tag = 'BACKPIPE';\n    break;\n  case '+':\n  case '-':\n    tag = '+-';\n    break;\n  case '&&':\n  case '||':\n    tag = 'LOGIC';\n    break;\n  case '.&.':\n  case '.|.':\n  case '.^.':\n    tag = 'BITWISE';\n    break;\n  case '^^':\n    tag = 'CLONE';\n    break;\n  case '**':\n  case '^':\n    tag = 'POWER';\n    break;\n  case '?':\n  case '!?':\n    if (this.last[0] === '(') {\n      createItFunc();\n    } else {\n      if (this.last.spaced) {\n        tag = 'LOGIC';\n      }\n    }\n    break;\n  case '/':\n  case '%':\n  case '%%':\n    tag = 'MATH';\n    break;\n  case '+++':\n    tag = 'CONCAT';\n    break;\n  case '++':\n  case '--':\n    tag = 'CREMENT';\n    break;\n  case '<<<':\n  case '<<<<':\n    tag = 'IMPORT';\n    break;\n  case ';':\n    tag = 'NEWLINE';\n    this.wantBy = false;\n    break;\n  case '..':\n    if (able(this.tokens)) {\n      this.token('CASCADE', '..');\n    }\n    this.token('LITERAL', '..', true);\n    return 2;\n  case '.':\n    if (this.last[0] === '(') {\n      createItFunc();\n    }\n    if (this.last[1] === '?') {\n      this.last[0] = '?';\n    }\n    tag = 'DOT';\n    break;\n  case ',':\n    switch (this.last[0]) {\n    case ',':\n    case '[':\n    case '(':\n    case 'CALL(':\n      this.token('LITERAL', 'void');\n      break;\n    case 'FOR':\n    case 'OWN':\n      this.token('ID', '');\n    }\n    break;\n  case '!=':\n  case '~=':\n    if (!(able(this.tokens) || ((ref$ = this.last[0]) == '(' || ref$ == 'CREMENT'))) {\n      this.tokens.push(val === '!='\n        ? ['UNARY', '!', this.line]\n        : ['UNARY', '~', this.line], ['ASSIGN', '=', this.line]);\n      return 2;\n    }\n    // fallthrough\n  case '!~=':\n  case '==':\n    val = (function(){\n      switch (val) {\n      case '~=':\n        return '==';\n      case '!~=':\n        return '!=';\n      case '==':\n        return '===';\n      case '!=':\n        return '!==';\n      }\n    }());\n    tag = 'COMPARE';\n    break;\n  case '===':\n  case '!==':\n    val += '=';\n    // fallthrough\n  case '<':\n  case '>':\n  case '<=':\n  case '>=':\n  case '<==':\n  case '>==':\n  case '>>=':\n  case '<<=':\n    tag = 'COMPARE';\n    break;\n  case '.<<.':\n  case '.>>.':\n  case '.>>>.':\n  case '<?':\n  case '>?':\n    tag = 'SHIFT';\n    break;\n  case '(':\n    if (!(((ref$ = this.last[0]) == 'FUNCTION' || ref$ == 'LET') || this.able(true) || this.last[1] === '.@')) {\n      this.token('(', '(');\n      this.closes.push(')');\n      this.parens.push(this.last);\n      return 1;\n    }\n    tag = 'CALL(';\n    this.closes.push(')CALL');\n    break;\n  case '[':\n  case '{':\n    this.adi();\n    this.closes.push(']}'.charAt(val === '{'));\n    break;\n  case '}':\n    if (this.inter && val !== (ref$ = this.closes)[ref$.length - 1]) {\n      this.rest = code.slice(index + 1);\n      return 9e9;\n    }\n    // fallthrough\n  case ']':\n  case ')':\n    if (tag === ')' && ((ref$ = this.last[0]) == '+-' || ref$ == 'COMPARE' || ref$ == 'LOGIC' || ref$ == 'MATH' || ref$ == 'POWER' || ref$ == 'SHIFT' || ref$ == 'BITWISE' || ref$ == 'CONCAT' || ref$ == 'COMPOSE' || ref$ == 'RELATION' || ref$ == 'PIPE' || ref$ == 'BACKPIPE' || ref$ == 'IMPORT' || ref$ == 'CLONEPORT' || ref$ == 'ASSIGN')) {\n      (ref$ = this.tokens)[ref$.length - 1][0] = (function(){\n        switch (this.last[0]) {\n        case 'RELATION':\n          return 'BIOPR';\n        case 'PIPE':\n          this.parameters(false, -1);\n          return 'BIOPP';\n        default:\n          return 'BIOP';\n        }\n      }.call(this));\n    }\n    if (')' === (tag = val = this.pair(val))) {\n      this.lpar = this.parens.pop();\n    }\n    break;\n  case '=':\n  case ':':\n    if (this.last[0] === 'UNARY' && this.last[1] === '!' && ((ref$ = (ref1$ = this.tokens)[ref1$.length - 2][1]) == '.@' || ref$ == 'this')) {\n      this.tokens.pop();\n      this.token('CALL(', '(');\n      this.token(')CALL', ')');\n    } else if (this.last[0] === ')CALL') {\n      if (typeof console != 'undefined' && console !== null) {\n        console.warn(\"WARNING on line \" + this.line + \": `func(x) = ...` type functions are deprecated and will be removed in a future LiveScript release. Please use long arrows --> for your curried functions instead.\");\n      }\n      if (val === '=') {\n        tag = 'ASSIGN';\n      }\n      arrow = '-->';\n      this.tokens.pop();\n      this.token(')PARAM', ')');\n      for (i$ = (ref$ = this.tokens).length - 1; i$ >= 0; --i$) {\n        i = i$;\n        t = ref$[i$];\n        if (t[0] === 'CALL(') {\n          break;\n        }\n      }\n      this.tokens.splice(i, 1, [tag, val, this.line], ['PARAM(', '(', this.line]);\n      if ((ref$ = (ref1$ = this.tokens[i - 2]) != null ? ref1$[1] : void 8) == '.~' || ref$ == '~') {\n        this.tokens.splice(i - 2, 1);\n        --i;\n        if (able(this.tokens.slice(0, i - 1))) {\n          this.tokens.splice(i - 2 + 1, 0, ['DOT', '.', this.line]);\n          ++i;\n        }\n        arrow = '~~>';\n      }\n      this.token('->', arrow);\n      return sym.length;\n    }\n    if (val === ':') {\n      switch (this.last[0]) {\n      case 'ID':\n      case 'STRNUM':\n      case ')':\n        break;\n      case '...':\n        this.last[0] = 'STRNUM';\n        break;\n      default:\n        tag = 'LABEL';\n        val = '';\n      }\n      this.token(tag, val);\n      return sym.length;\n    }\n    // fallthrough\n  case ':=':\n  case '+=':\n  case '-=':\n  case '*=':\n  case '/=':\n  case '%=':\n  case '%%=':\n  case '<?=':\n  case '>?=':\n  case '**=':\n  case '^=':\n  case '.&.=':\n  case '.|.=':\n  case '.^.=':\n  case '.<<.=':\n  case '.>>.=':\n  case '.>>>.=':\n    if (this.last[1] === '.' || this.last[0] === '?' && this.adi()) {\n      this.last[1] += val;\n      return val.length;\n    }\n    if (this.last[0] === 'LOGIC') {\n      (val = Object(val)).logic = this.tokens.pop()[1];\n    } else if ((val == '+=' || val == '-=') && !able(this.tokens) && ((ref$ = this.last[0]) != '+-' && ref$ != 'UNARY' && ref$ != 'LABEL')) {\n      this.token('UNARY', val.charAt());\n      val = '=';\n    }\n    tag = 'ASSIGN';\n    break;\n  case '::=':\n    this.token('DOT', '.');\n    this.token('ID', 'prototype');\n    this.token('IMPORT', '<<');\n    return sym.length;\n  case '*':\n    if (that = ((ref$ = this.last[0]) == 'NEWLINE' || ref$ == 'INDENT' || ref$ == 'THEN' || ref$ == '=>') && (INLINEDENT.lastIndex = index + 1, INLINEDENT).exec(code)[0].length) {\n      this.tokens.push(['LITERAL', 'void', this.line], ['ASSIGN', '=', this.line]);\n      this.indent(index + that - 1 - this.dent - code.lastIndexOf('\\n', index - 1));\n      return that;\n    }\n    tag = able(this.tokens) || this.last[0] === 'CREMENT' && able(this.tokens, this.tokens.length - 1) || this.last[0] === '(' ? 'MATH' : 'STRNUM';\n    break;\n  case '@':\n    this.adi();\n    if (this.last[0] === 'DOT' && this.last[1] === '.' && (ref$ = this.tokens)[ref$.length - 2][0] === 'ID' && (ref$ = this.tokens)[ref$.length - 2][1] === 'constructor') {\n      this.tokens.pop();\n      this.tokens.pop();\n      this.token('LITERAL', 'this', true);\n      this.adi();\n      this.token('ID', 'constructor', true);\n    } else {\n      this.token('LITERAL', 'this', true);\n    }\n    return 1;\n  case '@@':\n    this.adi();\n    this.token('ID', 'constructor', true);\n    return 2;\n  case '&':\n    this.token('LITERAL', 'arguments');\n    return 1;\n  case '!':\n    switch (false) {\n    default:\n      if (!this.last.spaced) {\n        if (this.last[1] === 'require') {\n          this.last[0] = 'REQUIRE';\n          this.last[1] = 'require!';\n        } else if (able(this.tokens, null, true)) {\n          this.token('CALL(', '!');\n          this.token(')CALL', ')');\n        } else if (this.last[1] === 'typeof') {\n          this.last[1] = 'classof';\n        } else if (this.last[1] === 'delete') {\n          this.last[1] = 'jsdelete';\n        } else {\n          break;\n        }\n        return 1;\n      }\n    }\n    tag = 'UNARY';\n    break;\n  case '&':\n    if (!able(this.tokens)) {\n      tag = 'LITERAL';\n    }\n    break;\n  case '|':\n    tag = 'BITWISE';\n    break;\n  case '~':\n    if (this.dotcat(val)) {\n      return 1;\n    }\n    tag = 'UNARY';\n    break;\n  case '->':\n  case '~>':\n  case '-->':\n  case '~~>':\n    up = '->';\n    // fallthrough\n  case '<-':\n  case '<~':\n  case '<--':\n  case '<~~':\n    this.parameters(tag = up || '<-');\n    break;\n  case '::':\n    this.adi();\n    val = 'prototype';\n    tag = 'ID';\n    break;\n  default:\n    switch (val.charAt(0)) {\n    case '(':\n      this.token('CALL(', '(');\n      tag = ')CALL';\n      val = ')';\n      break;\n    case '<':\n      if (val.length < 4) {\n        this.carp('unterminated words');\n      }\n      this.token('WORDS', val.slice(2, -2), this.adi());\n      return val.length;\n    }\n  }\n  if ((tag == '+-' || tag == 'COMPARE' || tag == 'LOGIC' || tag == 'MATH' || tag == 'POWER' || tag == 'SHIFT' || tag == 'BITWISE' || tag == 'CONCAT' || tag == 'COMPOSE' || tag == 'RELATION' || tag == 'PIPE' || tag == 'BACKPIPE' || tag == 'IMPORT') && this.last[0] === '(') {\n    tag = tag === 'BACKPIPE' ? 'BIOPBP' : 'BIOP';\n  }\n  if (tag == ',' || tag == 'CASE' || tag == 'PIPE' || tag == 'BACKPIPE' || tag == 'DOT' || tag == 'LOGIC' || tag == 'COMPARE' || tag == 'MATH' || tag == 'POWER' || tag == 'IMPORT' || tag == 'SHIFT' || tag == 'BITWISE') {\n    this.unline();\n  }\n  function createItFunc(){\n    this$.token('PARAM(', '(');\n    this$.token(')PARAM', ')');\n    this$.token('->', '->');\n    return this$.token('ID', 'it');\n  }\n  this.token(tag, val);\n  return sym.length;\n};\nexports.token = function(tag, value, callable){\n  this.tokens.push(this.last = [tag, value, this.line]);\n  if (callable) {\n    this.last.callable = true;\n  }\n  return value;\n};\nexports.indent = function(delta){\n  this.dent += delta;\n  this.dents.push(this.token('INDENT', delta));\n  this.closes.push('DEDENT');\n};\nexports.dedent = function(debt){\n  var dent;\n  this.dent -= debt;\n  while (debt > 0 && (dent = this.dents.pop())) {\n    if (debt < dent && !this.inter) {\n      this.carp(\"unmatched dedent (\" + debt + \" for \" + dent + \")\");\n    }\n    this.pair('DEDENT');\n    debt -= typeof dent === 'number' ? this.token('DEDENT', dent) : dent;\n  }\n};\nexports.newline = function(){\n  var ref$;\n  this.last[1] === '\\n' || this.tokens.push(this.last = (ref$ = ['NEWLINE', '\\n', this.line], ref$.spaced = true, ref$));\n};\nexports.unline = function(){\n  var ref$;\n  if (!this.tokens[1]) {\n    return;\n  }\n  switch (this.last[0]) {\n  case 'INDENT':\n    (ref$ = this.dents)[ref$.length - 1] += '';\n    // fallthrough\n  case 'NEWLINE':\n    this.tokens.length--;\n  }\n};\nexports.parameters = function(arrow, offset){\n  var i$, ref$, i, t, ref1$;\n  if (this.last[0] === ')' && ')' === this.last[1]) {\n    this.lpar[0] = 'PARAM(';\n    this.last[0] = ')PARAM';\n    return;\n  }\n  if (arrow === '->') {\n    this.token('PARAM(', '');\n  } else {\n    for (i$ = (ref$ = this.tokens).length - 1; i$ >= 0; --i$) {\n      i = i$;\n      t = ref$[i$];\n      if ((ref1$ = t[0]) == 'NEWLINE' || ref1$ == 'INDENT' || ref1$ == 'THEN' || ref1$ == '=>' || ref1$ == '(') {\n        break;\n      }\n    }\n    this.tokens.splice(i + 1, 0, ['PARAM(', '', t[2]]);\n  }\n  if (offset) {\n    this.tokens.splice(this.tokens.length + offset, 0, [')PARAM', '', t[2]]);\n  } else {\n    this.token(')PARAM', '');\n  }\n};\nexports.interpolate = function(str, idx, end){\n  var parts, end0, pos, i, ch, c1, id, stringified, length, tag, e, delta, nested, clone, ref$;\n  parts = [];\n  end0 = end.charAt(0);\n  pos = 0;\n  i = -1;\n  str = str.slice(idx + end.length);\n  while (ch = str.charAt(++i)) {\n    switch (ch) {\n    case end0:\n      if (end !== str.slice(i, i + end.length)) {\n        continue;\n      }\n      parts.push(['S', this.countLines(str.slice(0, i)), this.line]);\n      return parts.size = pos + i + end.length, parts;\n    case '#':\n      c1 = str.charAt(i + 1);\n      id = in$(c1, ['@']) && c1 || (ID.lastIndex = i + 1, ID).exec(str)[1];\n      if (!(id || c1 === '{')) {\n        continue;\n      }\n      break;\n    case '\\\\':\n      ++i;\n      // fallthrough\n    default:\n      continue;\n    }\n    if (i || nested && !stringified) {\n      stringified = parts.push(['S', this.countLines(str.slice(0, i)), this.line]);\n    }\n    if (id) {\n      length = id.length;\n      if (id === '@') {\n        id = 'this';\n      }\n      if (in$(id, ['this'])) {\n        tag = 'LITERAL';\n      } else {\n        id = camelize(id);\n        try {\n          Function(\"'use strict'; var \" + id);\n        } catch (e$) {\n          e = e$;\n          this.carp(\"invalid variable interpolation \\\"\" + id + \"\\\"\");\n        }\n        tag = 'ID';\n      }\n      str = str.slice(delta = i + 1 + length);\n      parts.push(['TOKENS', nested = [[tag, id, this.line]]]);\n    } else {\n      clone = (ref$ = clone$(exports), ref$.inter = true, ref$.emender = this.emender, ref$);\n      nested = clone.tokenize(str.slice(i + 2), {\n        line: this.line,\n        raw: true\n      });\n      delta = str.length - clone.rest.length;\n      str = clone.rest, this.line = clone.line;\n      while (((ref$ = nested[0]) != null ? ref$[0] : void 8) === 'NEWLINE') {\n        nested.shift();\n      }\n      if (nested.length) {\n        nested.unshift(['(', '(', nested[0][2]]);\n        nested.push([')', ')', this.line]);\n        parts.push(['TOKENS', nested]);\n      }\n    }\n    pos += delta;\n    i = -1;\n  }\n  this.carp(\"missing `\" + end + \"`\");\n};\nexports.addInterpolated = function(parts, nlines){\n  var tokens, last, ref$, left, right, joint, callable, i$, len$, i, t;\n  if (!parts[1]) {\n    return this.strnum(nlines(this.string('\"', parts[0][1])));\n  }\n  tokens = this.tokens, last = this.last;\n  ref$ = !last.spaced && last[1] === '%'\n    ? (--tokens.length, this.last = last = tokens[tokens.length - 1], ['[', ']', [',', ',']])\n    : ['(', ')', ['+-', '+']], left = ref$[0], right = ref$[1], joint = ref$[2];\n  callable = this.adi();\n  tokens.push([left, '\"', last[2]]);\n  for (i$ = 0, len$ = parts.length; i$ < len$; ++i$) {\n    i = i$;\n    t = parts[i$];\n    if (t[0] === 'TOKENS') {\n      tokens.push.apply(tokens, t[1]);\n    } else {\n      if (i > 1 && !t[1]) {\n        continue;\n      }\n      tokens.push(['STRNUM', nlines(this.string('\"', t[1])), t[2]]);\n    }\n    tokens.push(joint.concat(tokens[tokens.length - 1][2]));\n  }\n  --tokens.length;\n  this.token(right, '', callable);\n};\nexports.strnum = function(it){\n  this.token('STRNUM', it, this.adi() || this.last[0] === 'DOT');\n};\nexports.regex = function(body, flag){\n  var e;\n  try {\n    RegExp(body);\n  } catch (e$) {\n    e = e$;\n    this.carp(e.message);\n  }\n  if (flag === '$') {\n    return this.strnum(this.string('\\'', enslash(body)));\n  }\n  return this.token('LITERAL', \"/\" + (body || '(?:)') + \"/\" + this.validate(flag));\n};\nexports.adi = function(){\n  if (this.last.spaced) {\n    return;\n  }\n  if (this.last[0] === '!?') {\n    this.last[0] = 'CALL(';\n    this.token(')CALL', '');\n    this.token('?', '?');\n  } else if (!able(this.tokens)) {\n    return;\n  }\n  return this.token('DOT', '.');\n};\nexports.dotcat = function(it){\n  if (this.last[1] === '.' || this.adi()) {\n    return this.last[1] += it;\n  }\n};\nexports.pair = function(it){\n  var wanted, ref$;\n  if (!(it === (wanted = (ref$ = this.closes)[ref$.length - 1]) || ')CALL' === wanted && it === ')')) {\n    if ('DEDENT' !== wanted) {\n      this.carp(\"unmatched `\" + it + \"`\");\n    }\n    this.dedent((ref$ = this.dents)[ref$.length - 1]);\n    return this.pair(it);\n  }\n  this.unline();\n  return this.closes.pop();\n};\nexports.able = function(call){\n  return !this.last.spaced && able(this.tokens, null, call);\n};\nexports.countLines = function(it){\n  var pos;\n  while (pos = 1 + it.indexOf('\\n', pos)) {\n    ++this.line;\n  }\n  return it;\n};\nexports.forange = function(){\n  var ref$, ref1$, ref2$;\n  if (((ref$ = (ref1$ = this.tokens)[ref1$.length - 2 - ((ref2$ = this.last[0]) == 'NEWLINE' || ref2$ == 'INDENT')]) != null ? ref$[0] : void 8) === 'FOR' || this.last[0] === 'FOR') {\n    return this.seenFor = false, this.seenFrom = true, this;\n  }\n};\nexports.validate = function(flag){\n  var that;\n  if (that = flag && /(.).*\\1/.exec(flag)) {\n    this.carp(\"duplicate regex flag `\" + that[1] + \"`\");\n  }\n  return flag;\n};\nexports.carp = function(it){\n  carp(it, this.line);\n};\nexports.string = function(q, body){\n  return string(q, body, this.line);\n};\nfunction carp(msg, lno){\n  throw SyntaxError(msg + \" on line \" + (-~lno));\n}\nfunction able(tokens, i, call){\n  var token, tag;\n  i == null && (i = tokens.length);\n  tag = (token = tokens[i - 1])[0];\n  return (tag == 'ID' || tag == ']' || tag == '?') || (call\n    ? token.callable || (tag == ')' || tag == ')CALL' || tag == 'BIOPBP') && token[1]\n    : tag == '}' || tag == ')' || tag == ')CALL' || tag == 'STRNUM' || tag == 'LITERAL' || tag == 'WORDS');\n}\nstring = (function(re){\n  return function(q, body, lno){\n    body = body.replace(re, function(it, oct, xu, rest){\n      if (it == q || it == '\\\\') {\n        return '\\\\' + it;\n      }\n      if (oct) {\n        return '\\\\x' + (0x100 + parseInt(oct, 8)).toString(16).slice(1);\n      }\n      if (xu) {\n        carp('malformed character escape sequence', lno);\n      }\n      if (!rest || q === rest) {\n        return it;\n      } else {\n        return rest;\n      }\n    });\n    return q + body + q;\n  };\n}.call(this, /['\"]|\\\\(?:([0-3]?[0-7]{2}|[1-7]|0(?=[89]))|x[\\dA-Fa-f]{2}|u[\\dA-Fa-f]{4}|([xu])|[\\\\0bfnrtv]|[^\\n\\S]|([\\w\\W]))?/g));\nfunction heretabs(doc){\n  var dent, that, ref$;\n  dent = 0 / 0;\n  while (that = TABS.exec(doc)) {\n    dent <= (ref$ = that[0].length - 1) || (dent = ref$);\n  }\n  return dent;\n}\nTABS = /\\n(?!$)[^\\n\\S]*/mg;\nfunction detab(str, len){\n  if (len) {\n    return str.replace(detab[len] || (detab[len] = RegExp('\\\\n[^\\\\n\\\\S]{1,' + len + '}', 'g')), '\\n');\n  } else {\n    return str;\n  }\n}\nfunction replacer(re, to){\n  return function(it){\n    return it.replace(re, to);\n  };\n}\nunlines = replacer(/\\n[^\\n\\S]*/g, '');\nenlines = replacer(/\\n/g, '\\\\n');\nenslash = replacer(/\\\\/g, '\\\\\\\\');\nreslash = replacer(/(\\\\.)|\\//g, function(){\n  return arguments[1] || '\\\\/';\n});\ncamelize = replacer(/-[a-z]/ig, function(it){\n  return it.charAt(1).toUpperCase();\n});\nfunction lchomp(it){\n  return it.slice(1 + it.lastIndexOf('\\n', 0));\n}\nfunction decode(val, lno){\n  if (!isNaN(val)) {\n    return [+val];\n  }\n  val = val.length > 8\n    ? 'ng'\n    : Function('return' + val)();\n  val.length === 1 || carp('bad string in range', lno);\n  return [val.charCodeAt(), true];\n}\nfunction uxxxx(it){\n  return '\"\\\\u' + ('000' + it.toString(16)).slice(-4) + '\"';\n}\ncharacter = typeof JSON == 'undefined' || JSON === null\n  ? uxxxx\n  : function(it){\n    switch (it) {\n    case 0x2028:\n    case 0x2029:\n      return uxxxx(it);\n    default:\n      return JSON.stringify(String.fromCharCode(it));\n    }\n  };\nfunction firstPass(tokens){\n  var prev, i, token, tag, val, line, parens, i$, j;\n  prev = ['NEWLINE', '\\n', 0];\n  i = 0;\n  while (token = tokens[++i]) {\n    tag = token[0], val = token[1], line = token[2];\n    switch (false) {\n    case !(tag === 'DOT' && prev[0] === ']' && tokens[i - 2][0] === '[' && tokens[i - 3][0] === 'DOT'):\n      tokens.splice(i - 2, 3);\n      tokens[i - 3][1] = '[]';\n      break;\n    case !(tag === 'DOT' && prev[0] === '}' && tokens[i - 2][0] === '{' && tokens[i - 3][0] === 'DOT'):\n      tokens.splice(i - 2, 3);\n      tokens[i - 3][1] = '{}';\n      break;\n    case !(tag === 'CASCADE' && val === '..'):\n      if (tokens[i + 2][0] !== 'DOT') {\n        tokens.splice(i, 1);\n      }\n      break;\n    case !(val === '.' && token.spaced && prev.spaced):\n      tokens[i] = ['COMPOSE', '<<', line];\n      break;\n    case !(tag === ')' && prev[1] === '.'):\n      tokens.splice(i, 0, ['[', '[', line], ['ID', 'it', line], [']', ']', line]);\n      parens = 1;\n      LOOP: for (i$ = i; i$ >= 0; --i$) {\n        j = i$;\n        switch (tokens[j][0]) {\n        case ')':\n          ++parens;\n          break;\n        case '(':\n          if (--parens === 0) {\n            tokens.splice(j + 1, 0, ['PARAM(', '(', line], ['ID', 'it', line], [')PARAM', ')', line], ['->', '->', line]);\n            break LOOP;\n          }\n        }\n      }\n    }\n    prev = token;\n    continue;\n  }\n}\nfunction rewriteBlockless(tokens){\n  var i$, len$, i, token, tag;\n  for (i$ = 0, len$ = tokens.length; i$ < len$; ++i$) {\n    i = i$;\n    token = tokens[i$], tag = token[0];\n    if (tag == 'IF' || tag == 'CLASS' || tag == 'CATCH') {\n      detectEnd(tokens, i + 1, ok, go);\n    }\n  }\n  function ok(it){\n    var ref$;\n    return (ref$ = it[0]) == 'NEWLINE' || ref$ == 'INDENT';\n  }\n  function go(it, i){\n    var lno;\n    if (tag === 'IF') {\n      if (it[0] !== 'INDENT' || !it[1] && !it.then || in$(tokens[i - 1][0], BLOCK_USERS)) {\n        token[0] = 'POST_IF';\n      }\n    } else if (it[0] !== 'INDENT') {\n      tokens.splice(i, 0, ['INDENT', 0, lno = tokens[i - 1][2]], ['DEDENT', 0, lno]);\n    }\n  }\n}\nfunction addImplicitIndentation(tokens){\n  var i, token, tag, next, indent, dedent, ref$, idx;\n  i = 0;\n  while (token = tokens[++i]) {\n    tag = token[0];\n    if (tag != '->' && tag != 'THEN' && tag != 'ELSE' && tag != 'DEFAULT' && tag != 'TRY' && tag != 'FINALLY' && tag != 'DECL') {\n      continue;\n    }\n    switch (next = tokens[i + 1][0]) {\n    case 'IF':\n      if (tag === 'ELSE') {\n        continue;\n      }\n      break;\n    case 'INDENT':\n    case 'THEN':\n      if (tag === 'THEN') {\n        tokens.splice(i--, 1);\n      }\n      continue;\n    }\n    indent = ['INDENT', 0, token[2]];\n    dedent = ['DEDENT', 0];\n    if (tag === 'THEN') {\n      (tokens[i] = indent).then = true;\n    } else {\n      tokens.splice(++i, 0, indent);\n    }\n    switch (false) {\n    case tag !== 'DECL':\n      break;\n    case next != 'DOT' && next != '?' && next != ',' && next != 'PIPE' && next != 'BACKPIPE':\n      --i;\n      // fallthrough\n    case !((next == 'ID' || next == 'STRNUM' || next == 'LITERAL') && ',' === ((ref$ = tokens[i + 2]) != null ? ref$[0] : void 8)):\n      go(0, i += 2);\n      ++i;\n      continue;\n    case !((next == '(' || next == '[' || next == '{') && ',' === ((ref$ = tokens[idx = 1 + indexOfPair(tokens, i + 1)]) != null ? ref$[0] : void 8)):\n      go(0, idx);\n      ++i;\n      continue;\n    }\n    detectEnd(tokens, i + 1, ok, go);\n  }\n  function ok(token, i){\n    var t0, t;\n    t0 = token[0];\n    t = tag;\n    if (tag === t0 || tag === 'THEN' && t0 === 'SWITCH') {\n      tag = '';\n    }\n    switch (t0) {\n    case 'NEWLINE':\n      return token[1] !== ';';\n    case 'DOT':\n    case '?':\n    case ',':\n    case 'PIPE':\n    case 'BACKPIPE':\n      return tokens[i - 1].eol;\n    case 'ELSE':\n      return t === 'THEN';\n    case 'CATCH':\n      return t === 'TRY';\n    case 'FINALLY':\n      return t == 'TRY' || t == 'CATCH' || t == 'THEN';\n    case 'CASE':\n    case 'DEFAULT':\n      return t == 'CASE' || t == 'THEN';\n    }\n  }\n  function go(arg$, i){\n    var prev;\n    prev = tokens[i - 1];\n    tokens.splice(prev[0] === ',' ? i - 1 : i, 0, (dedent[2] = prev[2], dedent));\n  }\n}\nfunction addImplicitParentheses(tokens){\n  var i, brackets, token, endi, ref$, tpair, tag, prev, skipBlock, seenSwitch;\n  i = 0;\n  brackets = [];\n  while (token = tokens[++i]) {\n    if (token[1] === 'do' && tokens[i + 1][0] === 'INDENT') {\n      endi = indexOfPair(tokens, i + 1);\n      if (tokens[endi + 1][0] === 'NEWLINE' && ((ref$ = tokens[endi + 2]) != null ? ref$[0] : void 8) === 'WHILE') {\n        token[0] = 'DO';\n        tokens[endi + 2].done = true;\n        tokens.splice(endi + 1, 1);\n      } else {\n        (token = tokens[1 + i])[0] = '(';\n        (tpair = tokens[endi])[0] = ')';\n        token.doblock = true;\n        tokens.splice(i, 1);\n      }\n    }\n    tag = token[0];\n    prev = tokens[i - 1];\n    tag === '[' && brackets.push(prev[0] === 'DOT');\n    if (prev[0] === ']') {\n      if (brackets.pop()) {\n        prev.index = true;\n      } else {\n        continue;\n      }\n    }\n    if (!(((ref$ = prev[0]) == 'FUNCTION' || ref$ == 'LET' || ref$ == 'WHERE') || prev.spaced && able(tokens, i, true))) {\n      continue;\n    }\n    if (token.doblock) {\n      token[0] = 'CALL(';\n      tpair[0] = ')CALL';\n      continue;\n    }\n    if (!exp(token)) {\n      continue;\n    }\n    if (tag === 'CREMENT') {\n      if (token.spaced || !in$((ref$ = tokens[i + 1]) != null ? ref$[0] : void 8, CHAIN)) {\n        continue;\n      }\n    }\n    skipBlock = seenSwitch = false;\n    tokens.splice(i++, 0, ['CALL(', '', token[2]]);\n    detectEnd(tokens, i, ok, go);\n  }\n  function exp(token){\n    var tag;\n    tag = token[0];\n    return in$(tag, ARG) || !token.spaced && (tag == '+-' || tag == 'CLONE');\n  }\n  function ok(token, i){\n    var tag, ref$, pre;\n    tag = token[0];\n    if (tag == 'POST_IF' || tag == 'PIPE' || tag == 'BACKPIPE') {\n      return true;\n    }\n    if (!skipBlock) {\n      if (token.alias && ((ref$ = token[1]) == '&&' || ref$ == '||' || ref$ == 'xor') || (tag == 'TO' || tag == 'BY' || tag == 'IMPLEMENTS')) {\n        return true;\n      }\n    }\n    pre = tokens[i - 1];\n    switch (tag) {\n    case 'NEWLINE':\n      return pre[0] !== ',';\n    case 'DOT':\n    case '?':\n    case 'CASCADE':\n      return !skipBlock && (pre.spaced || pre[0] === 'DEDENT');\n    case 'SWITCH':\n      seenSwitch = true;\n      // fallthrough\n    case 'IF':\n    case 'CLASS':\n    case 'FUNCTION':\n    case 'LET':\n    case 'WITH':\n    case 'CATCH':\n      skipBlock = true;\n      break;\n    case 'CASE':\n      if (seenSwitch) {\n        skipBlock = true;\n      } else {\n        return true;\n      }\n      break;\n    case 'INDENT':\n      if (skipBlock) {\n        return skipBlock = false;\n      }\n      return !in$(pre[0], BLOCK_USERS);\n    case 'WHILE':\n      if (token.done) {\n        return false;\n      }\n      // fallthrough\n    case 'FOR':\n      skipBlock = true;\n      return able(tokens, i) || pre[0] === 'CREMENT' || pre[0] === '...' && pre.spaced;\n    }\n    return false;\n  }\n  function go(token, i){\n    tokens.splice(i, 0, [')CALL', '', tokens[i - 1][2]]);\n  }\n}\nfunction addImplicitBraces(tokens){\n  var stack, i, token, tag, start, paren, index, pre, ref$, inline;\n  stack = [];\n  i = 0;\n  while (token = tokens[++i]) {\n    if (':' !== (tag = token[0])) {\n      switch (false) {\n      case !in$(tag, CLOSERS):\n        start = stack.pop();\n        break;\n      case !in$(tag, OPENERS):\n        if (tag === 'INDENT' && tokens[i - 1][0] === '{') {\n          tag = '{';\n        }\n        stack.push([tag, i]);\n      }\n      continue;\n    }\n    paren = tokens[i - 1][0] === ')';\n    index = paren\n      ? start[1]\n      : i - 1;\n    pre = tokens[index - 1];\n    if (!(((ref$ = pre[0]) == ':' || ref$ == 'ASSIGN' || ref$ == 'IMPORT') || ((ref$ = stack[stack.length - 1]) != null ? ref$[0] : void 8) !== '{')) {\n      continue;\n    }\n    stack.push(['{']);\n    inline = !pre.doblock && ((ref$ = pre[0]) != 'NEWLINE' && ref$ != 'INDENT');\n    while (((ref$ = tokens[index - 2]) != null ? ref$[0] : void 8) === 'COMMENT') {\n      index -= 2;\n    }\n    tokens.splice(index, 0, ['{', '{', tokens[index][2]]);\n    detectEnd(tokens, ++i + 1, ok, go);\n  }\n  function ok(token, i){\n    var tag, t1, ref$;\n    switch (tag = token[0]) {\n    case ',':\n      break;\n    case 'NEWLINE':\n      if (inline) {\n        return true;\n      }\n      break;\n    case 'DEDENT':\n      return true;\n    case 'POST_IF':\n    case 'FOR':\n    case 'WHILE':\n      return inline;\n    default:\n      return false;\n    }\n    t1 = (ref$ = tokens[i + 1]) != null ? ref$[0] : void 8;\n    return t1 !== (tag === ',' ? 'NEWLINE' : 'COMMENT') && ':' !== ((ref$ = tokens[t1 === '('\n      ? 1 + indexOfPair(tokens, i + 1)\n      : i + 2]) != null ? ref$[0] : void 8);\n  }\n  function go(token, i){\n    tokens.splice(i, 0, ['}', '', token[2]]);\n  }\n}\nfunction expandLiterals(tokens){\n  var i, token, sig, lno, ref$, fromNum, char, toNum, tochar, byNum, byp, ts, enc, add, i$, n, len$, word, that;\n  i = 0;\n  while (token = tokens[++i]) {\n    switch (token[0]) {\n    case 'STRNUM':\n      if (~'-+'.indexOf(sig = token[1].charAt(0))) {\n        token[1] = token[1].slice(1);\n        tokens.splice(i++, 0, ['+-', sig, token[2]]);\n      }\n      if (token.callable) {\n        continue;\n      }\n      break;\n    case 'RANGE':\n      lno = token[2];\n      if (tokens[i - 1][0] === '[' && tokens[i + 1][0] === 'STRNUM' && ((tokens[i + 2][0] === ']' && (((ref$ = tokens[i + 1][1].charAt(0)) == '\\'' || ref$ == '\"') || +tokens[i + 1][1] >= 0)) || (tokens[i + 2][0] === 'RANGE_BY' && ((ref$ = tokens[i + 3]) != null ? ref$[0] : void 8) === 'STRNUM' && ((ref$ = tokens[i + 4]) != null ? ref$[0] : void 8) === ']'))) {\n        ref$ = decode(token[1], lno), fromNum = ref$[0], char = ref$[1];\n        ref$ = decode(tokens[i + 1][1], lno), toNum = ref$[0], tochar = ref$[1];\n        if (toNum == null || char ^ tochar) {\n          carp('bad \"to\" in range', lno);\n        }\n        byNum = 1;\n        if (byp = ((ref$ = tokens[i + 2]) != null ? ref$[0] : void 8) === 'RANGE_BY') {\n          if (!(byNum = +((ref$ = tokens[i + 3]) != null ? ref$[1] : void 8))) {\n            carp('bad \"by\" in range', tokens[i + 2][2]);\n          }\n        } else if (fromNum > toNum) {\n          byNum = -1;\n        }\n        ts = [];\n        enc = char ? character : String;\n        add = fn$;\n        if (token.op === 'to') {\n          for (i$ = fromNum; byNum < 0 ? i$ >= toNum : i$ <= toNum; i$ += byNum) {\n            n = i$;\n            add();\n          }\n        } else {\n          for (i$ = fromNum; byNum < 0 ? i$ > toNum : i$ < toNum; i$ += byNum) {\n            n = i$;\n            add();\n          }\n        }\n        ts.pop() || carp('empty range', lno);\n        tokens.splice.apply(tokens, [i, 2 + 2 * byp].concat(slice$.call(ts)));\n        i += ts.length - 1;\n      } else {\n        token[0] = 'STRNUM';\n        if (((ref$ = tokens[i + 2]) != null ? ref$[0] : void 8) === 'RANGE_BY') {\n          tokens.splice(i + 2, 1, ['BY', 'by', lno]);\n        }\n        tokens.splice(i + 1, 0, ['TO', token.op, lno]);\n      }\n      break;\n    case 'WORDS':\n      ts = [['[', '[', lno = token[2]]];\n      for (i$ = 0, len$ = (ref$ = token[1].match(/\\S+/g) || '').length; i$ < len$; ++i$) {\n        word = ref$[i$];\n        ts.push(['STRNUM', string('\\'', word, lno), lno], [',', ',', lno]);\n      }\n      tokens.splice.apply(tokens, [i, 1].concat(slice$.call(ts), [[']', ']', lno]]));\n      i += ts.length;\n      break;\n    case 'INDENT':\n      if (that = tokens[i - 1]) {\n        if (that[1] === 'new') {\n          tokens.splice(i++, 0, ['PARAM(', '', token[2]], [')PARAM', '', token[2]], ['->', '', token[2]]);\n        } else if ((ref$ = that[0]) == 'FUNCTION' || ref$ == 'LET') {\n          tokens.splice(i, 0, ['CALL(', '', token[2]], [')CALL', '', token[2]]);\n          i += 2;\n        }\n      }\n      continue;\n    case 'LITERAL':\n    case '}':\n    case '!?':\n      break;\n    case ')':\n    case ')CALL':\n      if (token[1]) {\n        continue;\n      }\n      break;\n    case ']':\n      if (token.index) {\n        continue;\n      }\n      break;\n    case 'CREMENT':\n      if (!able(tokens, i)) {\n        continue;\n      }\n      break;\n    case 'BIOP':\n      if (!token.spaced && ((ref$ = token[1]) == '+' || ref$ == '-') && tokens[i + 1][0] !== ')') {\n        tokens[i][0] = '+-';\n      }\n      continue;\n    default:\n      continue;\n    }\n    if (token.spaced && in$(tokens[i + 1][0], ARG)) {\n      tokens.splice(++i, 0, [',', ',', token[2]]);\n    }\n  }\n  function fn$(){\n    if (0x10000 < ts.push(['STRNUM', enc(n), lno], [',', ',', lno])) {\n      carp('range limit exceeded', lno);\n    }\n  }\n}\nfunction detectEnd(tokens, i, ok, go){\n  var levels, token, tag;\n  levels = 0;\n  for (; token = tokens[i]; ++i) {\n    if (!levels && ok(token, i)) {\n      return go(token, i);\n    }\n    tag = token[0];\n    if (0 > (levels += in$(tag, OPENERS) || -in$(tag, CLOSERS))) {\n      return go(token, i);\n    }\n  }\n}\nfunction indexOfPair(tokens, i){\n  var level, end, start, that;\n  level = 1;\n  end = INVERSES[start = tokens[i][0]];\n  while (that = tokens[++i]) {\n    switch (that[0]) {\n    case start:\n      ++level;\n      break;\n    case end:\n      if (!--level) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\nKEYWORDS_SHARED = ['true', 'false', 'null', 'this', 'void', 'super', 'return', 'throw', 'break', 'continue', 'if', 'else', 'for', 'while', 'switch', 'case', 'default', 'try', 'catch', 'finally', 'function', 'class', 'extends', 'implements', 'new', 'do', 'delete', 'typeof', 'in', 'instanceof', 'let', 'with', 'var', 'const', 'import', 'export', 'debugger'];\nKEYWORDS_UNUSED = ['enum', 'interface', 'package', 'private', 'protected', 'public', 'static', 'yield'];\nKEYWORDS = KEYWORDS_SHARED.concat(KEYWORDS_UNUSED);\nID = /((?!\\s)[a-z_$\\xAA-\\uFFDC](?:(?!\\s)[\\w$\\xAA-\\uFFDC]|-[a-z])*)([^\\n\\S]*:(?![:=]))?|/ig;\nSYMBOL = /[-+*\\/^]=|%%?=|::?=|\\.(?:[&\\|\\^]|<<|>>>?)\\.=?|\\.{1,3}|\\^\\^|\\+\\+\\+|-->|~~>|<--|<~~|([-+&|:])\\1|%%|&|\\([^\\n\\S]*\\)|[-~]>|<[-~]|[!=]==?|!?\\~=|@@?|<\\[(?:[\\s\\S]*?\\]>)?|<<<<?|<\\||[<>]==|<<=|>>=|<<|>>|[<>]\\??=?|!\\?|\\|>|\\||=>|\\*\\*=?|\\^|`|[^\\s#]?/g;\nSPACE = /[^\\n\\S]*(?:#.*)?/g;\nMULTIDENT = /(?:\\s*#.*)*(?:\\n([^\\n\\S]*))+/g;\nSIMPLESTR = /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'|/g;\nJSTOKEN = /``[^\\\\`]*(?:\\\\[\\s\\S][^\\\\`]*)*``|/g;\nBSTOKEN = /\\\\(?:(\\S[^\\s,;)}\\]]*)|\\s*)/g;\nNUMBER = /0x[\\dA-Fa-f][\\dA-Fa-f_]*|(\\d*)~([\\dA-Za-z]\\w*)|((\\d[\\d_]*)(\\.\\d[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?)[$\\w]*|/g;\nNUMBER_OMIT = /_+/g;\nREGEX = /\\/([^[\\/\\n\\\\]*(?:(?:\\\\.|\\[[^\\]\\n\\\\]*(?:\\\\.[^\\]\\n\\\\]*)*\\])[^[\\/\\n\\\\]*)*)\\/([gimy]{1,4}|\\$?)|/g;\nHEREGEX_OMIT = /\\s+(?:#.*)?/g;\nLASTDENT = /\\n[^\\n\\S]*$/;\nINLINEDENT = /[^\\n\\S]*[^#\\s]?/g;\nNONASCII = /[\\x80-\\uFFFF]/;\nOPENERS = ['(', '[', '{', 'CALL(', 'PARAM(', 'INDENT'];\nCLOSERS = [')', ']', '}', ')CALL', ')PARAM', 'DEDENT'];\nINVERSES = import$((function(){\n  var i$, ref$, len$, results$ = {};\n  for (i$ = 0, len$ = (ref$ = OPENERS).length; i$ < len$; ++i$) {\n    i = i$;\n    o = ref$[i$];\n    results$[o] = CLOSERS[i];\n  }\n  return results$;\n}()), (function(){\n  var i$, ref$, len$, results$ = {};\n  for (i$ = 0, len$ = (ref$ = CLOSERS).length; i$ < len$; ++i$) {\n    i = i$;\n    c = ref$[i$];\n    results$[c] = OPENERS[i];\n  }\n  return results$;\n}()));\nCHAIN = ['(', '{', '[', 'ID', 'STRNUM', 'LITERAL', 'LET', 'WITH', 'WORDS'];\nARG = CHAIN.concat(['...', 'UNARY', 'CREMENT', 'PARAM(', 'FUNCTION', 'IF', 'SWITCH', 'TRY', 'CLASS', 'RANGE', 'LABEL', 'DECL', 'DO', 'BIOPBP']);\nBLOCK_USERS = [',', ':', '->', 'ELSE', 'ASSIGN', 'IMPORT', 'UNARY', 'DEFAULT', 'TRY', 'FINALLY', 'HURL', 'DECL', 'DO', 'LET', 'FUNCTION'];\nfunction clone$(it){\n  function fun(){} fun.prototype = it;\n  return new fun;\n}\nfunction in$(x, arr){\n  var i = -1, l = arr.length >>> 0;\n  while (++i < l) if (x === arr[i] && i in arr) return true;\n  return false;\n}\nfunction import$(obj, src){\n  var own = {}.hasOwnProperty;\n  for (var key in src) if (own.call(src, key)) obj[key] = src[key];\n  return obj;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/lexer.js\n// module id = 3\n// module chunks = 0","exports.parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"Chain\":3,\"ID\":4,\"Parenthetical\":5,\"List\":6,\"STRNUM\":7,\"LITERAL\":8,\"DOT\":9,\"Key\":10,\"CALL(\":11,\"ArgList\":12,\"OptComma\":13,\")CALL\":14,\"?\":15,\"LET\":16,\"Block\":17,\"WITH\":18,\"Expression\":19,\"[\":20,\"LoopHeads\":21,\"]\":22,\"DEDENT\":23,\"{\":24,\"}\":25,\"(\":26,\"BIOP\":27,\")\":28,\"BIOPR\":29,\"BIOPBP\":30,\"BIOPP\":31,\"PARAM(\":32,\")PARAM\":33,\"UNARY\":34,\"CREMENT\":35,\"BACKTICK\":36,\"TO\":37,\"BY\":38,\"Properties\":39,\"LABEL\":40,\"KeyBase\":41,\"Arg\":42,\",\":43,\"NEWLINE\":44,\"INDENT\":45,\"...\":46,\"Lines\":47,\"Line\":48,\"<-\":49,\"COMMENT\":50,\"REQUIRE\":51,\"Cascade\":52,\"CASCADE\":53,\"WHERE\":54,\"CLONEPORT\":55,\"ASSIGN\":56,\"IMPORT\":57,\"+-\":58,\"CLONE\":59,\"COMPARE\":60,\"LOGIC\":61,\"MATH\":62,\"POWER\":63,\"SHIFT\":64,\"BITWISE\":65,\"CONCAT\":66,\"COMPOSE\":67,\"RELATION\":68,\"PIPE\":69,\"BACKPIPE\":70,\"!?\":71,\"->\":72,\"FUNCTION\":73,\"IF\":74,\"Else\":75,\"POST_IF\":76,\"LoopHead\":77,\"DO\":78,\"WHILE\":79,\"HURL\":80,\"JUMP\":81,\"SWITCH\":82,\"Exprs\":83,\"Cases\":84,\"DEFAULT\":85,\"ELSE\":86,\"TRY\":87,\"CATCH\":88,\"FINALLY\":89,\"CLASS\":90,\"OptExtends\":91,\"OptImplements\":92,\"EXTENDS\":93,\"DECL\":94,\"KeyValue\":95,\"Property\":96,\":\":97,\"Body\":98,\"FOR\":99,\"IN\":100,\"CASE\":101,\"OF\":102,\"OWN\":103,\"FROM\":104,\"IMPLEMENTS\":105,\"Root\":106,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"ID\",7:\"STRNUM\",8:\"LITERAL\",9:\"DOT\",11:\"CALL(\",14:\")CALL\",15:\"?\",16:\"LET\",18:\"WITH\",20:\"[\",22:\"]\",23:\"DEDENT\",24:\"{\",25:\"}\",26:\"(\",27:\"BIOP\",28:\")\",29:\"BIOPR\",30:\"BIOPBP\",31:\"BIOPP\",32:\"PARAM(\",33:\")PARAM\",34:\"UNARY\",35:\"CREMENT\",36:\"BACKTICK\",37:\"TO\",38:\"BY\",40:\"LABEL\",43:\",\",44:\"NEWLINE\",45:\"INDENT\",46:\"...\",49:\"<-\",50:\"COMMENT\",51:\"REQUIRE\",53:\"CASCADE\",54:\"WHERE\",55:\"CLONEPORT\",56:\"ASSIGN\",57:\"IMPORT\",58:\"+-\",59:\"CLONE\",60:\"COMPARE\",61:\"LOGIC\",62:\"MATH\",63:\"POWER\",64:\"SHIFT\",65:\"BITWISE\",66:\"CONCAT\",67:\"COMPOSE\",68:\"RELATION\",69:\"PIPE\",70:\"BACKPIPE\",71:\"!?\",72:\"->\",73:\"FUNCTION\",74:\"IF\",76:\"POST_IF\",78:\"DO\",79:\"WHILE\",80:\"HURL\",81:\"JUMP\",82:\"SWITCH\",85:\"DEFAULT\",86:\"ELSE\",87:\"TRY\",88:\"CATCH\",89:\"FINALLY\",90:\"CLASS\",93:\"EXTENDS\",94:\"DECL\",97:\":\",99:\"FOR\",100:\"IN\",101:\"CASE\",102:\"OF\",103:\"OWN\",104:\"FROM\",105:\"IMPLEMENTS\"},\nproductions_: [0,[3,1],[3,1],[3,1],[3,1],[3,1],[3,3],[3,3],[3,5],[3,2],[3,6],[3,3],[3,4],[3,5],[3,7],[3,3],[3,4],[3,4],[3,3],[3,4],[3,4],[3,3],[3,7],[3,3],[3,7],[3,3],[3,3],[3,5],[3,6],[3,6],[3,5],[3,7],[3,4],[3,6],[3,7],[3,6],[3,6],[3,5],[6,4],[6,4],[6,5],[6,5],[10,1],[10,1],[41,1],[41,1],[12,0],[12,1],[12,3],[12,4],[12,6],[42,1],[42,2],[42,1],[13,0],[13,1],[47,0],[47,1],[47,3],[47,2],[48,1],[48,2],[48,6],[48,1],[48,1],[48,2],[17,3],[52,2],[52,3],[19,2],[19,6],[19,3],[19,3],[19,3],[19,5],[19,1],[19,3],[19,6],[19,3],[19,6],[19,2],[19,2],[19,3],[19,3],[19,3],[19,2],[19,2],[19,2],[19,5],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,3],[19,2],[19,6],[19,6],[19,4],[19,3],[19,3],[19,4],[19,2],[19,5],[19,1],[19,1],[19,2],[19,3],[19,5],[19,5],[19,2],[19,4],[19,4],[19,2],[19,2],[19,4],[19,6],[19,5],[19,7],[19,4],[19,5],[19,4],[19,3],[19,2],[19,2],[19,5],[83,1],[83,3],[95,1],[95,1],[95,3],[95,3],[95,5],[95,5],[96,3],[96,6],[96,1],[96,3],[96,3],[96,2],[96,2],[96,2],[96,1],[39,0],[39,1],[39,3],[39,4],[39,4],[5,3],[98,1],[98,1],[98,3],[75,0],[75,2],[75,5],[77,4],[77,6],[77,6],[77,8],[77,4],[77,6],[77,6],[77,8],[77,5],[77,7],[77,7],[77,9],[77,6],[77,5],[77,8],[77,7],[77,8],[77,10],[77,10],[77,2],[77,4],[77,4],[77,6],[21,1],[21,2],[21,3],[21,3],[84,3],[84,4],[91,2],[91,0],[92,2],[92,0],[106,1]],\nperformAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$) {\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:this.$ = yy.Chain(yy.L(yylineno, yy.Var($$[$0])));\nbreak;\ncase 2:\ncase 3:this.$ = yy.Chain($$[$0]);\nbreak;\ncase 4:\ncase 5:this.$ = yy.Chain(yy.L(yylineno, yy.Literal($$[$0])));\nbreak;\ncase 6:\ncase 7:this.$ = $$[$0-2].add(yy.Index($$[$0], $$[$0-1], true));\nbreak;\ncase 8:this.$ = $$[$0-4].add(yy.Call($$[$0-2]));\nbreak;\ncase 9:this.$ = yy.Chain(yy.Existence($$[$0-1].unwrap()));\nbreak;\ncase 10:this.$ = yy.Chain(yy.Call['let']($$[$0-3], $$[$0]));\nbreak;\ncase 11:this.$ = yy.Chain(new yy.Cascade($$[$0-1], $$[$0]));\nbreak;\ncase 12:this.$ = yy.Chain($$[$0-1][0].makeComprehension($$[$0-2], $$[$0-1].slice(1)));\nbreak;\ncase 13:this.$ = yy.Chain($$[$0-2][0].makeComprehension($$[$0-3], $$[$0-2].slice(1)));\nbreak;\ncase 14:this.$ = yy.Chain($$[$0-1][0].addObjComp().makeComprehension(yy.L(yylineno, yy.Arr($$[$0-4])), $$[$0-1].slice(1)));\nbreak;\ncase 15:this.$ = yy.Chain(yy.Binary($$[$0-1]));\nbreak;\ncase 16:this.$ = yy.Chain(yy.Binary($$[$0-2], void 8, $$[$0-1]));\nbreak;\ncase 17:this.$ = yy.Chain(yy.Binary($$[$0-1], $$[$0-2]));\nbreak;\ncase 18:this.$ = yy.Chain('!' === $$[$0-1].charAt(0)\n        ? yy.Binary($$[$0-1].slice(1)).invertIt()\n        : yy.Binary($$[$0-1]));\nbreak;\ncase 19:this.$ = yy.Chain('!' === $$[$0-2].charAt(0)\n        ? yy.Binary($$[$0-2].slice(1), void 8, $$[$0-1]).invertIt()\n        : yy.Binary($$[$0-2], void 8, $$[$0-1]));\nbreak;\ncase 20:this.$ = yy.Chain('!' === $$[$0-1].charAt(0)\n        ? yy.Binary($$[$0-1].slice(1), $$[$0-2]).invertIt()\n        : yy.Binary($$[$0-1], $$[$0-2]));\nbreak;\ncase 21:this.$ = yy.Chain(yy.Binary($$[$0-1]));\nbreak;\ncase 22:this.$ = yy.Chain(yy.Binary($$[$0-5], void 8, $$[$0-3]));\nbreak;\ncase 23:this.$ = yy.Chain(yy.Binary($$[$0-1]));\nbreak;\ncase 24:this.$ = yy.Chain(yy.Binary($$[$0-1], $$[$0-4]));\nbreak;\ncase 25:\ncase 26:this.$ = yy.Chain(yy.Unary($$[$0-1]));\nbreak;\ncase 27:this.$ = yy.Chain($$[$0-2]);\nbreak;\ncase 28:this.$ = yy.Chain($$[$0-2].add(yy.Call([$$[$0-4]])));\nbreak;\ncase 29:this.$ = yy.Chain(yy.Chain(yy.Var('flip$')).add(yy.Call([$$[$0-3]]))).flipIt().add(yy.Call([$$[$0-1]]));\nbreak;\ncase 30:this.$ = yy.Chain(new yy.For({\n        from: $$[$0-3],\n        op: $$[$0-2],\n        to: $$[$0-1],\n        inComprehension: true\n      }));\nbreak;\ncase 31:this.$ = yy.Chain(new yy.For({\n        from: $$[$0-5],\n        op: $$[$0-4],\n        to: $$[$0-3],\n        step: $$[$0-1],\n        inComprehension: true\n      }));\nbreak;\ncase 32:this.$ = yy.Chain(new yy.For({\n        from: yy.Chain(yy.Literal(0)),\n        op: $$[$0-2],\n        to: $$[$0-1],\n        inComprehension: true\n      }));\nbreak;\ncase 33:this.$ = yy.Chain(new yy.For({\n        from: yy.Chain(yy.Literal(0)),\n        op: $$[$0-4],\n        to: $$[$0-3],\n        step: $$[$0-1],\n        inComprehension: true\n      }));\nbreak;\ncase 34:this.$ = yy.Chain(yy.Slice({\n        type: $$[$0-2],\n        target: $$[$0-6],\n        from: $$[$0-3],\n        to: $$[$0-1]\n      }));\nbreak;\ncase 35:this.$ = yy.Chain(yy.Slice({\n        type: $$[$0-1],\n        target: $$[$0-5],\n        from: $$[$0-2]\n      }));\nbreak;\ncase 36:this.$ = yy.Chain(yy.Slice({\n        type: $$[$0-2],\n        target: $$[$0-5],\n        to: $$[$0-1]\n      }));\nbreak;\ncase 37:this.$ = yy.Chain(yy.Slice({\n        type: $$[$0-1],\n        target: $$[$0-4]\n      }));\nbreak;\ncase 38:this.$ = yy.L(yylineno, yy.Arr($$[$0-2]));\nbreak;\ncase 39:this.$ = yy.L(yylineno, yy.Obj($$[$0-2]));\nbreak;\ncase 40:this.$ = yy.L(yylineno, yy.Arr($$[$0-3])).named($$[$0]);\nbreak;\ncase 41:this.$ = yy.L(yylineno, yy.Obj($$[$0-3])).named($$[$0]);\nbreak;\ncase 44:this.$ = yy.L(yylineno, yy.Key($$[$0]));\nbreak;\ncase 45:this.$ = yy.L(yylineno, yy.Literal($$[$0]));\nbreak;\ncase 46:this.$ = [];\nbreak;\ncase 47:this.$ = [$$[$0]];\nbreak;\ncase 48:this.$ = $$[$0-2].concat($$[$0]);\nbreak;\ncase 49:this.$ = $$[$0-3].concat($$[$0]);\nbreak;\ncase 50:this.$ = $$[$0-5].concat($$[$0-2]);\nbreak;\ncase 52:this.$ = yy.Splat($$[$0]);\nbreak;\ncase 53:this.$ = yy.Splat(yy.L(yylineno, yy.Arr()), true);\nbreak;\ncase 56:this.$ = yy.L(yylineno, yy.Block());\nbreak;\ncase 57:this.$ = yy.Block($$[$0]);\nbreak;\ncase 58:this.$ = $$[$0-2].add($$[$0]);\nbreak;\ncase 61:this.$ = new yy.Cascade($$[$0-1], $$[$0]);\nbreak;\ncase 62:this.$ = yy.Call.back($$[$0-4], $$[$0], $$[$0-1].charAt(1) === '~', $$[$0-1].length === 3);\nbreak;\ncase 63:this.$ = yy.L(yylineno, yy.JS($$[$0], true, true));\nbreak;\ncase 64:this.$ = yy.L(yylineno, yy.Throw(yy.JS(\"Error('unimplemented')\")));\nbreak;\ncase 65:this.$ = yy.Require($$[$0].unwrap());\nbreak;\ncase 66:this.$ = $$[$0-1].chomp();\nbreak;\ncase 67:this.$ = [$$[$0-1]];\nbreak;\ncase 68:this.$ = $$[$0-2].concat($$[$0-1]);\nbreak;\ncase 69:this.$ = new yy.Cascade($$[$0-1][0], yy.Block($$[$0-1].slice(1).concat($$[$0])));\nbreak;\ncase 70:this.$ = yy.Chain(yy.Call.where($$[$0-2], yy.Block([$$[$0-5]])));\nbreak;\ncase 71:this.$ = yy.Chain(yy.Call.where($$[$0].lines, yy.Block([$$[$0-2]])));\nbreak;\ncase 72:this.$ = yy.Import(yy.Unary('^^', $$[$0-2], {\n        prec: 'yy.UNARY'\n      }), $$[$0], false);\nbreak;\ncase 73:this.$ = yy.Import(yy.Unary('^^', $$[$0-2], {\n        prec: 'yy.UNARY'\n      }), $$[$0].unwrap(), false);\nbreak;\ncase 74:this.$ = $$[$0-2].add(yy.Call([$$[$0-4], $$[$0]]));\nbreak;\ncase 75:this.$ = $$[$0].unwrap();\nbreak;\ncase 76:this.$ = yy.Assign($$[$0-2].unwrap(), $$[$0], $$[$0-1]);\nbreak;\ncase 77:this.$ = yy.Assign($$[$0-5].unwrap(), yy.Arr.maybe($$[$0-2]), $$[$0-4]);\nbreak;\ncase 78:this.$ = yy.Import($$[$0-2], $$[$0], $$[$0-1] === '<<<<');\nbreak;\ncase 79:this.$ = yy.Import($$[$0-5], yy.Arr.maybe($$[$0-2]), $$[$0-4] === '<<<<');\nbreak;\ncase 80:this.$ = yy.Unary($$[$0-1], $$[$0].unwrap());\nbreak;\ncase 81:this.$ = yy.Unary($$[$0], $$[$0-1].unwrap(), true);\nbreak;\ncase 82:\ncase 83:\ncase 84:this.$ = yy.Assign($$[$0].unwrap(), [$$[$0-2]], $$[$0-1]);\nbreak;\ncase 85:\ncase 86:\ncase 87:this.$ = yy.Unary($$[$0-1], $$[$0]);\nbreak;\ncase 88:this.$ = yy.Unary($$[$0-4], yy.Arr.maybe($$[$0-2]));\nbreak;\ncase 89:\ncase 90:\ncase 91:\ncase 92:\ncase 93:\ncase 94:\ncase 95:\ncase 96:\ncase 97:this.$ = yy.Binary($$[$0-1], $$[$0-2], $$[$0]);\nbreak;\ncase 98:this.$ = '!' === $$[$0-1].charAt(0)\n        ? yy.Binary($$[$0-1].slice(1), $$[$0-2], $$[$0]).invert()\n        : yy.Binary($$[$0-1], $$[$0-2], $$[$0]);\nbreak;\ncase 99:this.$ = yy.Block($$[$0-2]).pipe($$[$0], $$[$0-1]);\nbreak;\ncase 100:this.$ = yy.Block($$[$0-2]).pipe([$$[$0]], $$[$0-1]);\nbreak;\ncase 101:this.$ = yy.Existence($$[$0-1].unwrap(), true);\nbreak;\ncase 102:this.$ = yy.L(yylineno, yy.Fun($$[$0-4], $$[$0], $$[$0-1].charAt(0) === '~', $$[$0-1].length === 3));\nbreak;\ncase 103:this.$ = yy.L(yylineno, yy.Fun($$[$0-3], $$[$0]).named($$[$0-5]));\nbreak;\ncase 104:this.$ = yy.If($$[$0-2], $$[$0-1], $$[$0-3] === 'unless').addElse($$[$0]);\nbreak;\ncase 105:this.$ = yy.If($$[$0], $$[$0-2], $$[$0-1] === 'unless');\nbreak;\ncase 106:this.$ = $$[$0-2].addBody($$[$0-1]).addElse($$[$0]);\nbreak;\ncase 107:this.$ = new yy.While($$[$0], $$[$0-1] === 'until', true).addBody($$[$0-2]);\nbreak;\ncase 108:this.$ = yy.Jump[$$[$0-1]]($$[$0]);\nbreak;\ncase 109:this.$ = yy.Jump[$$[$0-4]](yy.Arr.maybe($$[$0-2]));\nbreak;\ncase 110:this.$ = yy.L(yylineno, yy.Jump[$$[$0]]());\nbreak;\ncase 111:this.$ = yy.L(yylineno, new yy.Jump($$[$0]));\nbreak;\ncase 112:this.$ = yy.L(yylineno, new yy.Jump($$[$0-1], $$[$0]));\nbreak;\ncase 113:this.$ = new yy.Switch($$[$0-2], $$[$0-1], $$[$0]);\nbreak;\ncase 114:\ncase 115:this.$ = new yy.Switch($$[$0-4], $$[$0-3], $$[$0-2], $$[$0]);\nbreak;\ncase 116:this.$ = new yy.Switch($$[$0-1], null, $$[$0]);\nbreak;\ncase 117:\ncase 118:this.$ = new yy.Switch($$[$0-3], null, $$[$0-2], $$[$0]);\nbreak;\ncase 119:this.$ = new yy.Switch($$[$0-1], null, [], $$[$0]);\nbreak;\ncase 120:this.$ = new yy.Try($$[$0]);\nbreak;\ncase 121:this.$ = new yy.Try($$[$0-2], void 8, $$[$0]);\nbreak;\ncase 122:this.$ = new yy.Try($$[$0-4], void 8, $$[$0-2], $$[$0]);\nbreak;\ncase 123:this.$ = new yy.Try($$[$0-3], $$[$0-1], $$[$0]);\nbreak;\ncase 124:this.$ = new yy.Try($$[$0-5], $$[$0-3], $$[$0-2], $$[$0]);\nbreak;\ncase 125:this.$ = new yy.Try($$[$0-2], void 8, void 8, $$[$0]);\nbreak;\ncase 126:this.$ = new yy.Class({\n        title: $$[$0-3].unwrap(),\n        sup: $$[$0-2],\n        mixins: $$[$0-1],\n        body: $$[$0]\n      });\nbreak;\ncase 127:this.$ = new yy.Class({\n        sup: $$[$0-2],\n        mixins: $$[$0-1],\n        body: $$[$0]\n      });\nbreak;\ncase 128:this.$ = yy.Util.Extends($$[$0-2].unwrap(), $$[$0]);\nbreak;\ncase 129:\ncase 130:this.$ = new yy.Label($$[$0-1], $$[$0]);\nbreak;\ncase 131:this.$ = yy.Decl($$[$0-4], $$[$0-2], yylineno + 1);\nbreak;\ncase 132:this.$ = [$$[$0]];\nbreak;\ncase 133:this.$ = $$[$0-2].concat($$[$0]);\nbreak;\ncase 135:this.$ = yy.Prop(yy.L(yylineno, yy.Key($$[$0], $$[$0] != 'arguments' && $$[$0] != 'eval')), yy.L(yylineno, yy.Literal($$[$0])));\nbreak;\ncase 136:this.$ = yy.Prop($$[$0], yy.Chain($$[$0-2], [yy.Index($$[$0], $$[$0-1])]));\nbreak;\ncase 137:this.$ = yy.Prop($$[$0], yy.Chain(yy.L(yylineno, yy.Literal($$[$0-2])), [yy.Index($$[$0], $$[$0-1])]));\nbreak;\ncase 138:this.$ = yy.Prop(yy.L(yylineno, yy.Key($$[$0])), yy.L(yylineno, yy.Obj($$[$0-3]).named($$[$0])));\nbreak;\ncase 139:this.$ = yy.Prop(yy.L(yylineno, yy.Key($$[$0])), yy.L(yylineno, yy.Arr($$[$0-3]).named($$[$0])));\nbreak;\ncase 140:this.$ = yy.Prop($$[$0-2], $$[$0]);\nbreak;\ncase 141:this.$ = yy.Prop($$[$0-5], yy.Arr.maybe($$[$0-2]));\nbreak;\ncase 143:this.$ = yy.Binary($$[$0-1], $$[$0-2], $$[$0]);\nbreak;\ncase 144:this.$ = yy.Binary($$[$0-1], $$[$0-2], $$[$0], true);\nbreak;\ncase 145:this.$ = yy.Prop($$[$0].maybeKey(), yy.L(yylineno, yy.Literal($$[$0-1] === '+')));\nbreak;\ncase 146:this.$ = yy.Prop(yy.L(yylineno, yy.Key($$[$0], true)), yy.L(yylineno, yy.Literal($$[$0-1] === '+')));\nbreak;\ncase 147:this.$ = yy.Splat($$[$0]);\nbreak;\ncase 148:this.$ = yy.L(yylineno, yy.JS($$[$0], true, true));\nbreak;\ncase 149:this.$ = [];\nbreak;\ncase 150:this.$ = [$$[$0]];\nbreak;\ncase 151:this.$ = $$[$0-2].concat($$[$0]);\nbreak;\ncase 152:this.$ = $$[$0-3].concat($$[$0]);\nbreak;\ncase 153:this.$ = $$[$0-2];\nbreak;\ncase 154:this.$ = yy.Parens($$[$0-1].chomp().unwrap(), false, $$[$0-2] === '\"');\nbreak;\ncase 157:this.$ = $$[$0-2].add($$[$0]);\nbreak;\ncase 158:this.$ = null;\nbreak;\ncase 159:this.$ = $$[$0];\nbreak;\ncase 160:this.$ = yy.If($$[$0-2], $$[$0-1], $$[$0-3] === 'unless').addElse($$[$0]);\nbreak;\ncase 161:this.$ = new yy.For({\n        item: $$[$0-2].unwrap(),\n        index: $$[$0-1],\n        source: $$[$0]\n      });\nbreak;\ncase 162:this.$ = new yy.For({\n        item: $$[$0-4].unwrap(),\n        index: $$[$0-3],\n        source: $$[$0-2],\n        guard: $$[$0]\n      });\nbreak;\ncase 163:this.$ = new yy.For({\n        item: $$[$0-4].unwrap(),\n        index: $$[$0-3],\n        source: $$[$0-2],\n        step: $$[$0]\n      });\nbreak;\ncase 164:this.$ = new yy.For({\n        item: $$[$0-6].unwrap(),\n        index: $$[$0-5],\n        source: $$[$0-4],\n        step: $$[$0-2],\n        guard: $$[$0]\n      });\nbreak;\ncase 165:this.$ = new yy.For({\n        object: true,\n        index: $$[$0-2],\n        source: $$[$0]\n      });\nbreak;\ncase 166:this.$ = new yy.For({\n        object: true,\n        index: $$[$0-4],\n        source: $$[$0-2],\n        guard: $$[$0]\n      });\nbreak;\ncase 167:this.$ = new yy.For({\n        object: true,\n        index: $$[$0-4],\n        item: $$[$0-2].unwrap(),\n        source: $$[$0]\n      });\nbreak;\ncase 168:this.$ = new yy.For({\n        object: true,\n        index: $$[$0-6],\n        item: $$[$0-4].unwrap(),\n        source: $$[$0-2],\n        guard: $$[$0]\n      });\nbreak;\ncase 169:this.$ = new yy.For({\n        object: true,\n        own: true,\n        index: $$[$0-2],\n        source: $$[$0]\n      });\nbreak;\ncase 170:this.$ = new yy.For({\n        object: true,\n        own: true,\n        index: $$[$0-4],\n        source: $$[$0-2],\n        guard: $$[$01]\n      });\nbreak;\ncase 171:this.$ = new yy.For({\n        object: true,\n        own: true,\n        index: $$[$0-4],\n        item: $$[$0-2].unwrap(),\n        source: $$[$0]\n      });\nbreak;\ncase 172:this.$ = new yy.For({\n        object: true,\n        own: true,\n        index: $$[$0-6],\n        item: $$[$0-4].unwrap(),\n        source: $$[$0-2],\n        guard: $$[$0-1]\n      });\nbreak;\ncase 173:this.$ = new yy.For({\n        index: $$[$0-4],\n        from: $$[$0-2],\n        op: $$[$0-1],\n        to: $$[$0]\n      });\nbreak;\ncase 174:this.$ = new yy.For({\n        from: $$[$0-2],\n        op: $$[$0-1],\n        to: $$[$0]\n      });\nbreak;\ncase 175:this.$ = new yy.For({\n        index: $$[$0-6],\n        from: $$[$0-4],\n        op: $$[$0-3],\n        to: $$[$0-2],\n        guard: $$[$0]\n      });\nbreak;\ncase 176:this.$ = new yy.For({\n        from: $$[$0-4],\n        op: $$[$0-3],\n        to: $$[$0-2],\n        guard: $$[$0]\n      });\nbreak;\ncase 177:this.$ = new yy.For({\n        index: $$[$0-6],\n        from: $$[$0-4],\n        op: $$[$0-3],\n        to: $$[$0-2],\n        step: $$[$0]\n      });\nbreak;\ncase 178:this.$ = new yy.For({\n        index: $$[$0-8],\n        from: $$[$0-6],\n        op: $$[$0-5],\n        to: $$[$0-4],\n        step: $$[$0-2],\n        guard: $$[$0]\n      });\nbreak;\ncase 179:this.$ = new yy.For({\n        index: $$[$0-8],\n        from: $$[$0-6],\n        op: $$[$0-5],\n        to: $$[$0-4],\n        guard: $$[$0-2],\n        step: $$[$0]\n      });\nbreak;\ncase 180:this.$ = new yy.While($$[$0], $$[$0-1] === 'until');\nbreak;\ncase 181:this.$ = new yy.While($$[$0-2], $$[$0-3] === 'until').addGuard($$[$0]);\nbreak;\ncase 182:this.$ = new yy.While($$[$0-2], $$[$0-3] === 'until', $$[$0]);\nbreak;\ncase 183:this.$ = new yy.While($$[$0-4], $$[$0-5] === 'until', $$[$0-2]).addGuard($$[$0]);\nbreak;\ncase 184:this.$ = [$$[$0]];\nbreak;\ncase 185:this.$ = $$[$0-1].concat($$[$0]);\nbreak;\ncase 186:\ncase 187:this.$ = $$[$0-2].concat($$[$0]);\nbreak;\ncase 188:this.$ = [new yy.Case($$[$0-1], $$[$0])];\nbreak;\ncase 189:this.$ = $$[$0-3].concat(new yy.Case($$[$0-1], $$[$0]));\nbreak;\ncase 190:this.$ = $$[$0];\nbreak;\ncase 191:this.$ = null;\nbreak;\ncase 192:this.$ = $$[$0];\nbreak;\ncase 193:this.$ = null;\nbreak;\ncase 194:return this.$\n}\n},\ntable: [{1:[2,56],3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],17:4,18:[1,35],19:7,20:[1,36],24:[1,37],26:[1,38],32:[1,8],34:[1,15],35:[1,14],40:[1,27],44:[2,56],45:[1,6],46:[1,10],47:3,48:5,50:[1,9],51:[1,11],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],98:2,99:[1,39],106:1},{1:[3]},{1:[2,194]},{1:[2,155],28:[2,155],44:[1,41]},{1:[2,156],28:[2,156],44:[1,42]},{1:[2,57],23:[2,57],28:[2,57],44:[2,57]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:7,20:[1,36],23:[2,56],24:[1,37],26:[1,38],32:[1,8],34:[1,15],35:[1,14],40:[1,27],44:[2,56],46:[1,10],47:43,48:5,50:[1,9],51:[1,11],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{1:[2,60],17:44,23:[2,60],28:[2,60],36:[1,46],44:[2,60],45:[1,6],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],12:61,16:[1,34],18:[1,35],19:63,20:[1,36],24:[1,37],26:[1,38],32:[1,65],33:[2,46],34:[1,15],35:[1,14],40:[1,27],42:62,43:[2,46],44:[2,46],45:[2,46],46:[1,64],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{1:[2,63],23:[2,63],28:[2,63],44:[2,63]},{1:[2,64],23:[2,64],28:[2,64],44:[2,64]},{3:66,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],20:[1,36],24:[1,37],26:[1,38]},{3:67,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],20:[1,36],24:[1,37],26:[1,38]},{1:[2,75],9:[1,74],11:[1,75],14:[2,75],15:[1,76],22:[2,75],23:[2,75],25:[2,75],27:[2,75],28:[2,75],29:[2,75],33:[2,75],35:[1,70],36:[2,75],37:[2,75],38:[2,75],43:[2,75],44:[2,75],45:[2,75],53:[1,73],54:[2,75],55:[1,68],56:[1,69],57:[2,75],58:[2,75],60:[2,75],61:[2,75],62:[2,75],63:[2,75],64:[2,75],65:[2,75],66:[2,75],67:[2,75],68:[2,75],69:[2,75],70:[2,75],71:[1,71],76:[2,75],79:[2,75],93:[1,72],99:[2,75],101:[2,75],105:[2,75]},{3:77,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],20:[1,36],24:[1,37],26:[1,38]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:79,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],45:[1,80],52:12,56:[1,78],58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:82,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,56:[1,81],58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:84,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,56:[1,83],58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{11:[1,85]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:86,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{17:87,45:[1,6]},{17:88,45:[1,6]},{1:[2,110],3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],14:[2,110],16:[1,34],18:[1,35],19:89,20:[1,36],22:[2,110],23:[2,110],24:[1,37],25:[2,110],26:[1,38],27:[2,110],28:[2,110],29:[2,110],32:[1,65],33:[2,110],34:[1,15],35:[1,14],36:[2,110],37:[2,110],38:[2,110],40:[1,27],43:[2,110],44:[2,110],45:[1,90],52:12,54:[2,110],57:[2,110],58:[1,16],59:[1,17],60:[2,110],61:[2,110],62:[2,110],63:[2,110],64:[2,110],65:[2,110],66:[2,110],67:[2,110],68:[2,110],69:[2,110],70:[2,110],73:[1,18],74:[1,19],76:[2,110],77:20,78:[1,21],79:[2,110],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[2,110],101:[2,110],105:[2,110]},{1:[2,111],4:[1,91],14:[2,111],22:[2,111],23:[2,111],25:[2,111],27:[2,111],28:[2,111],29:[2,111],33:[2,111],36:[2,111],37:[2,111],38:[2,111],43:[2,111],44:[2,111],45:[2,111],54:[2,111],57:[2,111],58:[2,111],60:[2,111],61:[2,111],62:[2,111],63:[2,111],64:[2,111],65:[2,111],66:[2,111],67:[2,111],68:[2,111],69:[2,111],70:[2,111],76:[2,111],79:[2,111],99:[2,111],101:[2,111],105:[2,111]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],17:94,18:[1,35],19:95,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],45:[1,6],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],83:92,84:93,87:[1,25],90:[1,26],94:[1,28],99:[1,39],101:[1,96]},{17:97,45:[1,6]},{3:98,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],20:[1,36],24:[1,37],26:[1,38],45:[2,191],91:99,93:[1,100],105:[2,191]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],17:102,18:[1,35],19:101,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],45:[1,6],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{45:[1,103]},{1:[2,1],9:[2,1],11:[2,1],14:[2,1],15:[2,1],22:[2,1],23:[2,1],25:[2,1],27:[2,1],28:[2,1],29:[2,1],33:[2,1],35:[2,1],36:[2,1],37:[2,1],38:[2,1],43:[2,1],44:[2,1],45:[2,1],53:[2,1],54:[2,1],55:[2,1],56:[2,1],57:[2,1],58:[2,1],60:[2,1],61:[2,1],62:[2,1],63:[2,1],64:[2,1],65:[2,1],66:[2,1],67:[2,1],68:[2,1],69:[2,1],70:[2,1],71:[2,1],76:[2,1],79:[2,1],93:[2,1],99:[2,1],101:[2,1],102:[2,1],105:[2,1]},{1:[2,2],9:[2,2],11:[2,2],14:[2,2],15:[2,2],22:[2,2],23:[2,2],25:[2,2],27:[2,2],28:[2,2],29:[2,2],33:[2,2],35:[2,2],36:[2,2],37:[2,2],38:[2,2],43:[2,2],44:[2,2],45:[2,2],53:[2,2],54:[2,2],55:[2,2],56:[2,2],57:[2,2],58:[2,2],60:[2,2],61:[2,2],62:[2,2],63:[2,2],64:[2,2],65:[2,2],66:[2,2],67:[2,2],68:[2,2],69:[2,2],70:[2,2],71:[2,2],76:[2,2],79:[2,2],93:[2,2],99:[2,2],100:[2,2],101:[2,2],102:[2,2],105:[2,2]},{1:[2,3],9:[2,3],11:[2,3],14:[2,3],15:[2,3],22:[2,3],23:[2,3],25:[2,3],27:[2,3],28:[2,3],29:[2,3],33:[2,3],35:[2,3],36:[2,3],37:[2,3],38:[2,3],43:[2,3],44:[2,3],45:[2,3],53:[2,3],54:[2,3],55:[2,3],56:[2,3],57:[2,3],58:[2,3],60:[2,3],61:[2,3],62:[2,3],63:[2,3],64:[2,3],65:[2,3],66:[2,3],67:[2,3],68:[2,3],69:[2,3],70:[2,3],71:[2,3],76:[2,3],79:[2,3],93:[2,3],99:[2,3],100:[2,3],101:[2,3],102:[2,3],105:[2,3]},{1:[2,4],9:[2,4],11:[2,4],14:[2,4],15:[2,4],22:[2,4],23:[2,4],25:[2,4],27:[2,4],28:[2,4],29:[2,4],33:[2,4],35:[2,4],36:[2,4],37:[2,4],38:[2,4],43:[2,4],44:[2,4],45:[2,4],53:[2,4],54:[2,4],55:[2,4],56:[2,4],57:[2,4],58:[2,4],60:[2,4],61:[2,4],62:[2,4],63:[2,4],64:[2,4],65:[2,4],66:[2,4],67:[2,4],68:[2,4],69:[2,4],70:[2,4],71:[2,4],76:[2,4],79:[2,4],93:[2,4],99:[2,4],100:[2,4],101:[2,4],102:[2,4],105:[2,4]},{1:[2,5],9:[2,5],11:[2,5],14:[2,5],15:[2,5],22:[2,5],23:[2,5],25:[2,5],27:[2,5],28:[2,5],29:[2,5],33:[2,5],35:[2,5],36:[2,5],37:[2,5],38:[2,5],43:[2,5],44:[2,5],45:[2,5],53:[2,5],54:[2,5],55:[2,5],56:[2,5],57:[2,5],58:[2,5],60:[2,5],61:[2,5],62:[2,5],63:[2,5],64:[2,5],65:[2,5],66:[2,5],67:[2,5],68:[2,5],69:[2,5],70:[2,5],71:[2,5],76:[2,5],79:[2,5],93:[2,5],99:[2,5],100:[2,5],101:[2,5],102:[2,5],105:[2,5]},{11:[1,104]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:105,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],12:108,16:[1,34],18:[1,35],19:106,20:[1,36],22:[2,46],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],37:[1,107],40:[1,27],42:62,43:[2,46],44:[2,46],45:[2,46],46:[1,64],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{4:[1,122],5:119,7:[1,123],8:[1,120],10:113,20:[1,109],24:[1,121],25:[2,149],26:[1,124],39:110,41:118,43:[2,149],44:[2,149],45:[1,112],46:[1,116],50:[1,117],58:[1,115],95:114,96:111},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],17:4,18:[1,35],19:126,20:[1,36],24:[1,37],26:[1,38],27:[1,125],28:[2,56],29:[1,127],30:[1,128],31:[1,129],32:[1,130],34:[1,131],35:[1,132],36:[1,133],40:[1,27],44:[2,56],45:[1,6],46:[1,10],47:3,48:5,50:[1,9],51:[1,11],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],98:134,99:[1,39]},{3:135,4:[1,136],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],20:[1,36],24:[1,37],26:[1,38],103:[1,137],104:[1,138]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:139,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{1:[2,59],3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:7,20:[1,36],23:[2,59],24:[1,37],26:[1,38],28:[2,59],32:[1,8],34:[1,15],35:[1,14],40:[1,27],44:[2,59],46:[1,10],48:140,50:[1,9],51:[1,11],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{1:[2,56],3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:7,20:[1,36],24:[1,37],26:[1,38],28:[2,56],32:[1,8],34:[1,15],35:[1,14],40:[1,27],44:[2,56],46:[1,10],47:141,48:5,50:[1,9],51:[1,11],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{23:[1,142],44:[1,41]},{1:[2,61],23:[2,61],28:[2,61],44:[2,61]},{11:[1,143],17:144,45:[1,6]},{3:145,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],20:[1,36],24:[1,37],26:[1,38]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:146,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],45:[1,147],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:148,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:149,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:150,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:151,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:152,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:153,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:154,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:155,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:156,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:157,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:158,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:159,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:160,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{13:161,33:[2,54],43:[1,162],44:[2,54],45:[2,54]},{14:[2,47],22:[2,47],23:[2,47],33:[2,47],43:[2,47],44:[2,47],45:[2,47]},{14:[2,51],22:[2,51],23:[2,51],33:[2,51],36:[1,46],43:[2,51],44:[2,51],45:[2,51],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],14:[2,53],16:[1,34],18:[1,35],19:163,20:[1,36],22:[2,53],23:[2,53],24:[1,37],26:[1,38],32:[1,65],33:[2,53],34:[1,15],35:[1,14],40:[1,27],43:[2,53],44:[2,53],45:[2,53],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],12:164,16:[1,34],18:[1,35],19:63,20:[1,36],24:[1,37],26:[1,38],32:[1,65],33:[2,46],34:[1,15],35:[1,14],40:[1,27],42:62,43:[2,46],44:[2,46],45:[2,46],46:[1,64],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{1:[2,65],9:[1,74],11:[1,75],15:[1,76],23:[2,65],28:[2,65],44:[2,65]},{1:[2,69],9:[1,74],11:[1,75],14:[2,69],15:[1,76],22:[2,69],23:[2,69],25:[2,69],27:[2,69],28:[2,69],29:[2,69],33:[2,69],36:[2,69],37:[2,69],38:[2,69],43:[2,69],44:[2,69],45:[2,69],53:[1,165],54:[2,69],57:[2,69],58:[2,69],60:[2,69],61:[2,69],62:[2,69],63:[2,69],64:[2,69],65:[2,69],66:[2,69],67:[2,69],68:[2,69],69:[2,69],70:[2,69],76:[2,69],79:[2,69],99:[2,69],101:[2,69],105:[2,69]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],17:167,18:[1,35],19:166,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],45:[1,6],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:168,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],45:[1,169],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{1:[2,81],14:[2,81],22:[2,81],23:[2,81],25:[2,81],27:[2,81],28:[2,81],29:[2,81],33:[2,81],36:[2,81],37:[2,81],38:[2,81],43:[2,81],44:[2,81],45:[2,81],54:[2,81],57:[2,81],58:[2,81],60:[2,81],61:[2,81],62:[2,81],63:[2,81],64:[2,81],65:[2,81],66:[2,81],67:[2,81],68:[2,81],69:[2,81],70:[2,81],76:[2,81],79:[2,81],99:[2,81],101:[2,81],105:[2,81]},{1:[2,101],14:[2,101],22:[2,101],23:[2,101],25:[2,101],27:[2,101],28:[2,101],29:[2,101],33:[2,101],36:[2,101],37:[2,101],38:[2,101],43:[2,101],44:[2,101],45:[2,101],54:[2,101],57:[2,101],58:[2,101],60:[2,101],61:[2,101],62:[2,101],63:[2,101],64:[2,101],65:[2,101],66:[2,101],67:[2,101],68:[2,101],69:[2,101],70:[2,101],76:[2,101],79:[2,101],99:[2,101],101:[2,101],105:[2,101]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:170,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{4:[2,67],7:[2,67],8:[2,67],16:[2,67],18:[2,67],20:[2,67],24:[2,67],26:[2,67]},{4:[1,122],5:119,6:172,7:[1,123],10:171,20:[1,173],24:[1,174],26:[1,124],41:118},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],12:175,14:[2,46],16:[1,34],18:[1,35],19:63,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],42:62,43:[2,46],44:[2,46],45:[2,46],46:[1,64],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{1:[2,9],9:[2,9],11:[2,9],14:[2,9],15:[2,9],22:[2,9],23:[2,9],25:[2,9],27:[2,9],28:[2,9],29:[2,9],33:[2,9],35:[2,9],36:[2,9],37:[2,9],38:[2,9],43:[2,9],44:[2,9],45:[2,9],53:[2,9],54:[2,9],55:[2,9],56:[2,9],57:[2,9],58:[2,9],60:[2,9],61:[2,9],62:[2,9],63:[2,9],64:[2,9],65:[2,9],66:[2,9],67:[2,9],68:[2,9],69:[2,9],70:[2,9],71:[2,9],76:[2,9],79:[2,9],93:[2,9],99:[2,9],100:[2,9],101:[2,9],102:[2,9],105:[2,9]},{1:[2,80],9:[1,74],11:[1,75],14:[2,80],15:[1,76],22:[2,80],23:[2,80],25:[2,80],27:[2,80],28:[2,80],29:[2,80],33:[2,80],36:[2,80],37:[2,80],38:[2,80],43:[2,80],44:[2,80],45:[2,80],54:[2,80],57:[2,80],58:[2,80],60:[2,80],61:[2,80],62:[2,80],63:[2,80],64:[2,80],65:[2,80],66:[2,80],67:[2,80],68:[2,80],69:[2,80],70:[2,80],76:[2,80],79:[2,80],99:[2,80],101:[2,80],105:[2,80]},{3:176,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],20:[1,36],24:[1,37],26:[1,38]},{1:[2,85],14:[2,85],22:[2,85],23:[2,85],25:[2,85],27:[2,85],28:[2,85],29:[2,85],33:[2,85],36:[1,46],37:[2,85],38:[2,85],43:[2,85],44:[2,85],45:[2,85],54:[2,85],57:[2,85],58:[2,85],60:[2,85],61:[2,85],62:[2,85],63:[1,52],64:[2,85],65:[2,85],66:[2,85],67:[1,56],68:[2,85],69:[2,85],70:[2,85],76:[2,85],79:[2,85],99:[2,85],101:[2,85],105:[2,85]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],12:177,16:[1,34],18:[1,35],19:63,20:[1,36],23:[2,46],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],42:62,43:[2,46],44:[2,46],45:[2,46],46:[1,64],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:178,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],20:[1,36],24:[1,37],26:[1,38]},{1:[2,86],14:[2,86],22:[2,86],23:[2,86],25:[2,86],27:[2,86],28:[2,86],29:[2,86],33:[2,86],36:[1,46],37:[2,86],38:[2,86],43:[2,86],44:[2,86],45:[2,86],54:[2,86],57:[2,86],58:[2,86],60:[2,86],61:[2,86],62:[2,86],63:[1,52],64:[2,86],65:[2,86],66:[2,86],67:[1,56],68:[2,86],69:[2,86],70:[2,86],76:[2,86],79:[2,86],99:[2,86],101:[2,86],105:[2,86]},{3:179,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],20:[1,36],24:[1,37],26:[1,38]},{1:[2,87],14:[2,87],22:[2,87],23:[2,87],25:[2,87],27:[2,87],28:[2,87],29:[2,87],33:[2,87],36:[1,46],37:[2,87],38:[2,87],43:[2,87],44:[2,87],45:[2,87],54:[2,87],57:[2,87],58:[2,87],60:[2,87],61:[2,87],62:[2,87],63:[1,52],64:[2,87],65:[2,87],66:[2,87],67:[1,56],68:[2,87],69:[2,87],70:[2,87],76:[2,87],79:[2,87],99:[2,87],101:[2,87],105:[2,87]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],12:180,14:[2,46],16:[1,34],18:[1,35],19:63,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],42:62,43:[2,46],44:[2,46],45:[2,46],46:[1,64],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{17:181,36:[1,46],45:[1,6],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{1:[2,158],14:[2,158],22:[2,158],23:[2,158],25:[2,158],27:[2,158],28:[2,158],29:[2,158],33:[2,158],36:[2,158],37:[2,158],38:[2,158],43:[2,158],44:[2,158],45:[2,158],54:[2,158],57:[2,158],58:[2,158],60:[2,158],61:[2,158],62:[2,158],63:[2,158],64:[2,158],65:[2,158],66:[2,158],67:[2,158],68:[2,158],69:[2,158],70:[2,158],75:182,76:[2,158],79:[2,158],86:[1,183],99:[2,158],101:[2,158],105:[2,158]},{79:[1,184]},{1:[2,108],14:[2,108],22:[2,108],23:[2,108],25:[2,108],27:[2,108],28:[2,108],29:[2,108],33:[2,108],36:[1,46],37:[2,108],38:[2,108],43:[2,108],44:[2,108],45:[2,108],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[2,108],76:[2,108],79:[2,108],99:[2,108],101:[2,108],105:[2,108]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],12:185,16:[1,34],18:[1,35],19:63,20:[1,36],23:[2,46],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],42:62,43:[2,46],44:[2,46],45:[2,46],46:[1,64],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{1:[2,112],14:[2,112],22:[2,112],23:[2,112],25:[2,112],27:[2,112],28:[2,112],29:[2,112],33:[2,112],36:[2,112],37:[2,112],38:[2,112],43:[2,112],44:[2,112],45:[2,112],54:[2,112],57:[2,112],58:[2,112],60:[2,112],61:[2,112],62:[2,112],63:[2,112],64:[2,112],65:[2,112],66:[2,112],67:[2,112],68:[2,112],69:[2,112],70:[2,112],76:[2,112],79:[2,112],99:[2,112],101:[2,112],105:[2,112]},{43:[1,187],84:186,101:[1,96]},{1:[2,116],14:[2,116],22:[2,116],23:[2,116],25:[2,116],27:[2,116],28:[2,116],29:[2,116],33:[2,116],36:[2,116],37:[2,116],38:[2,116],43:[2,116],44:[2,116],45:[2,116],54:[2,116],57:[2,116],58:[2,116],60:[2,116],61:[2,116],62:[2,116],63:[2,116],64:[2,116],65:[2,116],66:[2,116],67:[2,116],68:[2,116],69:[2,116],70:[2,116],76:[2,116],79:[2,116],85:[1,188],86:[1,189],99:[2,116],101:[1,190],105:[2,116]},{1:[2,119],14:[2,119],22:[2,119],23:[2,119],25:[2,119],27:[2,119],28:[2,119],29:[2,119],33:[2,119],36:[2,119],37:[2,119],38:[2,119],43:[2,119],44:[2,119],45:[2,119],54:[2,119],57:[2,119],58:[2,119],60:[2,119],61:[2,119],62:[2,119],63:[2,119],64:[2,119],65:[2,119],66:[2,119],67:[2,119],68:[2,119],69:[2,119],70:[2,119],76:[2,119],79:[2,119],99:[2,119],101:[2,119],105:[2,119]},{36:[1,46],43:[2,132],45:[2,132],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],101:[2,132]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:95,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],83:191,87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{1:[2,120],14:[2,120],22:[2,120],23:[2,120],25:[2,120],27:[2,120],28:[2,120],29:[2,120],33:[2,120],36:[2,120],37:[2,120],38:[2,120],43:[2,120],44:[2,120],45:[2,120],54:[2,120],57:[2,120],58:[2,120],60:[2,120],61:[2,120],62:[2,120],63:[2,120],64:[2,120],65:[2,120],66:[2,120],67:[2,120],68:[2,120],69:[2,120],70:[2,120],76:[2,120],79:[2,120],88:[1,192],89:[1,193],99:[2,120],101:[2,120],105:[2,120]},{9:[1,74],11:[1,75],15:[1,76],45:[2,191],91:194,93:[1,100],105:[2,191]},{45:[2,193],92:195,105:[1,196]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:197,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{1:[2,129],14:[2,129],22:[2,129],23:[2,129],25:[2,129],27:[2,129],28:[2,129],29:[2,129],33:[2,129],36:[1,46],37:[2,129],38:[2,129],43:[2,129],44:[2,129],45:[2,129],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[2,129],76:[2,129],79:[2,129],99:[2,129],101:[2,129],105:[2,129]},{1:[2,130],14:[2,130],22:[2,130],23:[2,130],25:[2,130],27:[2,130],28:[2,130],29:[2,130],33:[2,130],36:[2,130],37:[2,130],38:[2,130],43:[2,130],44:[2,130],45:[2,130],54:[2,130],57:[2,130],58:[2,130],60:[2,130],61:[2,130],62:[2,130],63:[2,130],64:[2,130],65:[2,130],66:[2,130],67:[2,130],68:[2,130],69:[2,130],70:[2,130],76:[2,130],79:[2,130],99:[2,130],101:[2,130],105:[2,130]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],12:198,16:[1,34],18:[1,35],19:63,20:[1,36],23:[2,46],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],42:62,43:[2,46],44:[2,46],45:[2,46],46:[1,64],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],12:199,14:[2,46],16:[1,34],18:[1,35],19:63,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],42:62,43:[2,46],44:[2,46],45:[2,46],46:[1,64],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{17:200,36:[1,46],45:[1,6],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{21:201,22:[2,51],36:[1,46],37:[1,202],43:[2,51],44:[2,51],45:[2,51],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],77:203,79:[1,40],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:204,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{13:205,22:[2,54],43:[1,162],44:[2,54],45:[2,54]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],12:206,16:[1,34],18:[1,35],19:63,20:[1,36],22:[2,46],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],42:62,43:[2,46],44:[2,46],45:[2,46],46:[1,64],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{13:207,25:[2,54],43:[1,208],44:[2,54]},{23:[2,150],25:[2,150],43:[2,150],44:[2,150]},{4:[1,122],5:119,7:[1,123],8:[1,120],10:113,20:[1,210],23:[2,149],24:[1,121],26:[1,124],39:209,41:118,43:[2,149],44:[2,149],45:[1,112],46:[1,116],50:[1,117],58:[1,115],95:114,96:111},{9:[1,212],23:[2,134],25:[2,134],43:[2,134],44:[2,134],56:[2,134],61:[2,134],97:[1,211]},{23:[2,142],25:[2,142],43:[2,142],44:[2,142],56:[1,214],61:[1,213]},{4:[1,122],5:119,7:[1,123],8:[1,216],10:215,26:[1,124],41:118},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:217,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{23:[2,148],25:[2,148],43:[2,148],44:[2,148]},{1:[2,42],9:[2,42],11:[2,42],14:[2,42],15:[2,42],22:[2,42],23:[2,42],25:[2,42],27:[2,42],28:[2,42],29:[2,42],33:[2,42],35:[2,42],36:[2,42],37:[2,42],38:[2,42],43:[2,42],44:[2,42],45:[2,42],53:[2,42],54:[2,42],55:[2,42],56:[2,42],57:[2,42],58:[2,42],60:[2,42],61:[2,42],62:[2,42],63:[2,42],64:[2,42],65:[2,42],66:[2,42],67:[2,42],68:[2,42],69:[2,42],70:[2,42],71:[2,42],76:[2,42],79:[2,42],93:[2,42],97:[2,42],99:[2,42],100:[2,42],101:[2,42],102:[2,42],105:[2,42]},{1:[2,43],9:[2,43],11:[2,43],14:[2,43],15:[2,43],22:[2,43],23:[2,43],25:[2,43],27:[2,43],28:[2,43],29:[2,43],33:[2,43],35:[2,43],36:[2,43],37:[2,43],38:[2,43],43:[2,43],44:[2,43],45:[2,43],53:[2,43],54:[2,43],55:[2,43],56:[2,43],57:[2,43],58:[2,43],60:[2,43],61:[2,43],62:[2,43],63:[2,43],64:[2,43],65:[2,43],66:[2,43],67:[2,43],68:[2,43],69:[2,43],70:[2,43],71:[2,43],76:[2,43],79:[2,43],93:[2,43],97:[2,43],99:[2,43],100:[2,43],101:[2,43],102:[2,43],105:[2,43]},{9:[1,218],23:[2,135],25:[2,135],43:[2,135],44:[2,135],56:[2,135],61:[2,135]},{4:[1,122],5:119,7:[1,123],8:[1,120],10:113,20:[1,210],24:[1,121],25:[2,149],26:[1,124],39:219,41:118,43:[2,149],44:[2,149],45:[1,112],46:[1,116],50:[1,117],58:[1,115],95:114,96:111},{1:[2,44],9:[2,44],11:[2,44],14:[2,44],15:[2,44],22:[2,44],23:[2,44],25:[2,44],27:[2,44],28:[2,44],29:[2,44],33:[2,44],35:[2,44],36:[2,44],37:[2,44],38:[2,44],43:[2,44],44:[2,44],45:[2,44],53:[2,44],54:[2,44],55:[2,44],56:[2,44],57:[2,44],58:[2,44],60:[2,44],61:[2,44],62:[2,44],63:[2,44],64:[2,44],65:[2,44],66:[2,44],67:[2,44],68:[2,44],69:[2,44],70:[2,44],71:[2,44],76:[2,44],79:[2,44],93:[2,44],97:[2,44],99:[2,44],100:[2,44],101:[2,44],102:[2,44],105:[2,44]},{1:[2,45],9:[2,45],11:[2,45],14:[2,45],15:[2,45],22:[2,45],23:[2,45],25:[2,45],27:[2,45],28:[2,45],29:[2,45],33:[2,45],35:[2,45],36:[2,45],37:[2,45],38:[2,45],43:[2,45],44:[2,45],45:[2,45],53:[2,45],54:[2,45],55:[2,45],56:[2,45],57:[2,45],58:[2,45],60:[2,45],61:[2,45],62:[2,45],63:[2,45],64:[2,45],65:[2,45],66:[2,45],67:[2,45],68:[2,45],69:[2,45],70:[2,45],71:[2,45],76:[2,45],79:[2,45],93:[2,45],97:[2,45],99:[2,45],100:[2,45],101:[2,45],102:[2,45],105:[2,45]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],17:4,18:[1,35],19:7,20:[1,36],24:[1,37],26:[1,38],28:[2,56],32:[1,8],34:[1,15],35:[1,14],40:[1,27],44:[2,56],45:[1,6],46:[1,10],47:3,48:5,50:[1,9],51:[1,11],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],98:134,99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:221,20:[1,36],24:[1,37],26:[1,38],28:[1,220],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{17:44,27:[1,222],28:[2,60],29:[1,223],36:[1,224],44:[2,60],45:[1,6],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:226,20:[1,36],24:[1,37],26:[1,38],28:[1,225],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{11:[1,228],28:[1,227]},{28:[1,229]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],12:230,16:[1,34],18:[1,35],19:63,20:[1,36],24:[1,37],26:[1,38],32:[1,65],33:[2,46],34:[1,15],35:[1,14],40:[1,27],42:62,43:[2,46],44:[2,46],45:[2,46],46:[1,64],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:79,20:[1,36],24:[1,37],26:[1,38],28:[1,231],32:[1,65],34:[1,15],35:[1,14],40:[1,27],45:[1,80],52:12,56:[1,78],58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:77,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],20:[1,36],24:[1,37],26:[1,38],28:[1,232]},{3:233,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],20:[1,36],24:[1,37],26:[1,38]},{28:[1,234]},{9:[1,74],11:[1,75],15:[1,76],100:[1,235]},{9:[2,1],11:[2,1],15:[2,1],43:[1,237],100:[2,1],102:[1,236],104:[1,238]},{4:[1,239]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:240,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{22:[2,180],23:[2,180],25:[2,180],36:[1,46],43:[1,242],44:[2,180],45:[2,180],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,180],99:[2,180],101:[1,241]},{1:[2,58],23:[2,58],28:[2,58],44:[2,58]},{1:[2,157],28:[2,157],44:[1,41]},{1:[2,66],9:[2,66],11:[2,66],14:[2,66],15:[2,66],22:[2,66],23:[2,66],25:[2,66],27:[2,66],28:[2,66],29:[2,66],33:[2,66],35:[2,66],36:[2,66],37:[2,66],38:[2,66],43:[2,66],44:[2,66],45:[2,66],53:[2,66],54:[2,66],55:[2,66],56:[2,66],57:[2,66],58:[2,66],60:[2,66],61:[2,66],62:[2,66],63:[2,66],64:[2,66],65:[2,66],66:[2,66],67:[2,66],68:[2,66],69:[2,66],70:[2,66],71:[2,66],76:[2,66],79:[2,66],85:[2,66],86:[2,66],88:[2,66],89:[2,66],93:[2,66],99:[2,66],100:[2,66],101:[2,66],102:[2,66],105:[2,66]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],12:243,14:[2,46],16:[1,34],18:[1,35],19:63,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],42:62,43:[2,46],44:[2,46],45:[2,46],46:[1,64],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{1:[2,71],14:[2,71],22:[2,71],23:[2,71],25:[2,71],27:[2,71],28:[2,71],29:[2,71],33:[2,71],36:[2,71],37:[2,71],38:[2,71],43:[2,71],44:[2,71],45:[2,71],54:[2,71],57:[2,71],58:[2,71],60:[2,71],61:[2,71],62:[2,71],63:[2,71],64:[2,71],65:[2,71],66:[2,71],67:[2,71],68:[2,71],69:[2,71],70:[2,71],76:[2,71],79:[2,71],99:[2,71],101:[2,71],105:[2,71]},{9:[1,74],11:[1,75],15:[1,76],36:[1,244]},{1:[2,78],14:[2,78],22:[2,78],23:[2,78],25:[2,78],27:[2,78],28:[2,78],29:[2,78],33:[2,78],36:[1,46],37:[2,78],38:[2,78],43:[2,78],44:[2,78],45:[2,78],54:[2,78],57:[2,78],58:[1,48],60:[2,78],61:[2,78],62:[1,51],63:[1,52],64:[2,78],65:[2,78],66:[2,78],67:[1,56],68:[2,78],69:[2,78],70:[2,78],76:[2,78],79:[2,78],99:[2,78],101:[2,78],105:[2,78]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],12:245,16:[1,34],18:[1,35],19:63,20:[1,36],23:[2,46],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],42:62,43:[2,46],44:[2,46],45:[2,46],46:[1,64],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{1:[2,89],14:[2,89],22:[2,89],23:[2,89],25:[2,89],27:[2,89],28:[2,89],29:[2,89],33:[2,89],36:[1,46],37:[2,89],38:[2,89],43:[2,89],44:[2,89],45:[2,89],54:[2,89],57:[2,89],58:[2,89],60:[2,89],61:[2,89],62:[1,51],63:[1,52],64:[2,89],65:[2,89],66:[2,89],67:[1,56],68:[2,89],69:[2,89],70:[2,89],76:[2,89],79:[2,89],99:[2,89],101:[2,89],105:[2,89]},{1:[2,90],14:[2,90],22:[2,90],23:[2,90],25:[2,90],27:[2,90],28:[2,90],29:[2,90],33:[2,90],36:[1,46],37:[2,90],38:[2,90],43:[2,90],44:[2,90],45:[2,90],54:[2,90],57:[1,47],58:[1,48],60:[1,49],61:[2,90],62:[1,51],63:[1,52],64:[1,53],65:[2,90],66:[1,55],67:[1,56],68:[1,57],69:[2,90],70:[2,90],76:[2,90],79:[2,90],99:[2,90],101:[2,90],105:[2,90]},{1:[2,91],14:[2,91],22:[2,91],23:[2,91],25:[2,91],27:[2,91],28:[2,91],29:[2,91],33:[2,91],36:[1,46],37:[2,91],38:[2,91],43:[2,91],44:[2,91],45:[2,91],54:[2,91],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[2,91],70:[2,91],76:[2,91],79:[2,91],99:[2,91],101:[2,91],105:[2,91]},{1:[2,92],14:[2,92],22:[2,92],23:[2,92],25:[2,92],27:[2,92],28:[2,92],29:[2,92],33:[2,92],36:[1,46],37:[2,92],38:[2,92],43:[2,92],44:[2,92],45:[2,92],54:[2,92],57:[2,92],58:[2,92],60:[2,92],61:[2,92],62:[2,92],63:[1,52],64:[2,92],65:[2,92],66:[2,92],67:[1,56],68:[2,92],69:[2,92],70:[2,92],76:[2,92],79:[2,92],99:[2,92],101:[2,92],105:[2,92]},{1:[2,93],14:[2,93],22:[2,93],23:[2,93],25:[2,93],27:[2,93],28:[2,93],29:[2,93],33:[2,93],36:[1,46],37:[2,93],38:[2,93],43:[2,93],44:[2,93],45:[2,93],54:[2,93],57:[2,93],58:[2,93],60:[2,93],61:[2,93],62:[2,93],63:[1,52],64:[2,93],65:[2,93],66:[2,93],67:[1,56],68:[2,93],69:[2,93],70:[2,93],76:[2,93],79:[2,93],99:[2,93],101:[2,93],105:[2,93]},{1:[2,94],14:[2,94],22:[2,94],23:[2,94],25:[2,94],27:[2,94],28:[2,94],29:[2,94],33:[2,94],36:[1,46],37:[2,94],38:[2,94],43:[2,94],44:[2,94],45:[2,94],54:[2,94],57:[2,94],58:[1,48],60:[2,94],61:[2,94],62:[1,51],63:[1,52],64:[2,94],65:[2,94],66:[2,94],67:[1,56],68:[2,94],69:[2,94],70:[2,94],76:[2,94],79:[2,94],99:[2,94],101:[2,94],105:[2,94]},{1:[2,95],14:[2,95],22:[2,95],23:[2,95],25:[2,95],27:[2,95],28:[2,95],29:[2,95],33:[2,95],36:[1,46],37:[2,95],38:[2,95],43:[2,95],44:[2,95],45:[2,95],54:[2,95],57:[1,47],58:[1,48],60:[1,49],61:[2,95],62:[1,51],63:[1,52],64:[1,53],65:[2,95],66:[1,55],67:[1,56],68:[1,57],69:[2,95],70:[2,95],76:[2,95],79:[2,95],99:[2,95],101:[2,95],105:[2,95]},{1:[2,96],14:[2,96],22:[2,96],23:[2,96],25:[2,96],27:[2,96],28:[2,96],29:[2,96],33:[2,96],36:[1,46],37:[2,96],38:[2,96],43:[2,96],44:[2,96],45:[2,96],54:[2,96],57:[1,47],58:[1,48],60:[2,96],61:[2,96],62:[1,51],63:[1,52],64:[1,53],65:[2,96],66:[1,55],67:[1,56],68:[2,96],69:[2,96],70:[2,96],76:[2,96],79:[2,96],99:[2,96],101:[2,96],105:[2,96]},{1:[2,97],14:[2,97],22:[2,97],23:[2,97],25:[2,97],27:[2,97],28:[2,97],29:[2,97],33:[2,97],36:[1,46],37:[2,97],38:[2,97],43:[2,97],44:[2,97],45:[2,97],54:[2,97],57:[2,97],58:[2,97],60:[2,97],61:[2,97],62:[2,97],63:[2,97],64:[2,97],65:[2,97],66:[2,97],67:[1,56],68:[2,97],69:[2,97],70:[2,97],76:[2,97],79:[2,97],99:[2,97],101:[2,97],105:[2,97]},{1:[2,98],14:[2,98],22:[2,98],23:[2,98],25:[2,98],27:[2,98],28:[2,98],29:[2,98],33:[2,98],36:[1,46],37:[2,98],38:[2,98],43:[2,98],44:[2,98],45:[2,98],54:[2,98],57:[1,47],58:[1,48],60:[2,98],61:[2,98],62:[1,51],63:[1,52],64:[1,53],65:[2,98],66:[1,55],67:[1,56],68:[2,98],69:[2,98],70:[2,98],76:[2,98],79:[2,98],99:[2,98],101:[2,98],105:[2,98]},{1:[2,99],14:[2,99],22:[2,99],23:[2,99],25:[2,99],27:[2,99],28:[2,99],29:[2,99],33:[2,99],36:[1,46],37:[2,99],38:[2,99],43:[2,99],44:[2,99],45:[2,99],54:[2,99],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[2,99],70:[2,99],76:[2,99],79:[2,99],99:[2,99],101:[2,99],105:[2,99]},{1:[2,100],14:[2,100],22:[2,100],23:[2,100],25:[2,100],27:[2,100],28:[2,100],29:[2,100],33:[2,100],36:[1,46],37:[2,100],38:[2,100],43:[2,100],44:[2,100],45:[2,100],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[2,100],79:[2,100],99:[2,100],101:[2,100],105:[2,100]},{1:[2,105],14:[2,105],22:[2,105],23:[2,105],25:[2,105],27:[2,105],28:[2,105],29:[2,105],33:[2,105],36:[1,46],37:[2,105],38:[2,105],43:[2,105],44:[2,105],45:[2,105],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[2,105],79:[2,105],99:[2,105],101:[2,105],105:[2,105]},{33:[1,246],44:[1,247],45:[1,248]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],14:[2,55],16:[1,34],18:[1,35],19:63,20:[1,36],22:[2,55],23:[2,55],24:[1,37],26:[1,38],32:[1,65],33:[2,55],34:[1,15],35:[1,14],40:[1,27],42:249,44:[2,55],45:[2,55],46:[1,64],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{14:[2,52],22:[2,52],23:[2,52],33:[2,52],36:[1,46],43:[2,52],44:[2,52],45:[2,52],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{13:250,33:[2,54],43:[1,162],44:[2,54],45:[2,54]},{4:[2,68],7:[2,68],8:[2,68],16:[2,68],18:[2,68],20:[2,68],24:[2,68],26:[2,68]},{1:[2,72],14:[2,72],22:[2,72],23:[2,72],25:[2,72],27:[2,72],28:[2,72],29:[2,72],33:[2,72],36:[1,46],37:[2,72],38:[2,72],43:[2,72],44:[2,72],45:[2,72],54:[2,72],57:[2,72],58:[1,48],60:[2,72],61:[2,72],62:[1,51],63:[1,52],64:[2,72],65:[2,72],66:[2,72],67:[1,56],68:[2,72],69:[2,72],70:[2,72],76:[2,72],79:[2,72],99:[2,72],101:[2,72],105:[2,72]},{1:[2,73],14:[2,73],22:[2,73],23:[2,73],25:[2,73],27:[2,73],28:[2,73],29:[2,73],33:[2,73],36:[2,73],37:[2,73],38:[2,73],43:[2,73],44:[2,73],45:[2,73],54:[2,73],57:[2,73],58:[2,73],60:[2,73],61:[2,73],62:[2,73],63:[2,73],64:[2,73],65:[2,73],66:[2,73],67:[2,73],68:[2,73],69:[2,73],70:[2,73],76:[2,73],79:[2,73],99:[2,73],101:[2,73],105:[2,73]},{1:[2,76],14:[2,76],22:[2,76],23:[2,76],25:[2,76],27:[2,76],28:[2,76],29:[2,76],33:[2,76],36:[1,46],37:[2,76],38:[2,76],43:[2,76],44:[2,76],45:[2,76],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[2,76],76:[2,76],79:[2,76],99:[2,76],101:[2,76],105:[2,76]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],12:251,16:[1,34],18:[1,35],19:63,20:[1,36],23:[2,46],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],42:62,43:[2,46],44:[2,46],45:[2,46],46:[1,64],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{1:[2,128],14:[2,128],22:[2,128],23:[2,128],25:[2,128],27:[2,128],28:[2,128],29:[2,128],33:[2,128],36:[1,46],37:[2,128],38:[2,128],43:[2,128],44:[2,128],45:[2,128],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[2,128],76:[2,128],79:[2,128],99:[2,128],101:[2,128],105:[2,128]},{1:[2,6],9:[2,6],11:[2,6],14:[2,6],15:[2,6],22:[2,6],23:[2,6],25:[2,6],27:[2,6],28:[2,6],29:[2,6],33:[2,6],35:[2,6],36:[2,6],37:[2,6],38:[2,6],43:[2,6],44:[2,6],45:[2,6],53:[2,6],54:[2,6],55:[2,6],56:[2,6],57:[2,6],58:[2,6],60:[2,6],61:[2,6],62:[2,6],63:[2,6],64:[2,6],65:[2,6],66:[2,6],67:[2,6],68:[2,6],69:[2,6],70:[2,6],71:[2,6],76:[2,6],79:[2,6],93:[2,6],99:[2,6],100:[2,6],101:[2,6],102:[2,6],105:[2,6]},{1:[2,7],9:[2,7],11:[2,7],14:[2,7],15:[2,7],22:[2,7],23:[2,7],25:[2,7],27:[2,7],28:[2,7],29:[2,7],33:[2,7],35:[2,7],36:[2,7],37:[2,7],38:[2,7],43:[2,7],44:[2,7],45:[2,7],53:[2,7],54:[2,7],55:[2,7],56:[2,7],57:[2,7],58:[2,7],60:[2,7],61:[2,7],62:[2,7],63:[2,7],64:[2,7],65:[2,7],66:[2,7],67:[2,7],68:[2,7],69:[2,7],70:[2,7],71:[2,7],76:[2,7],79:[2,7],93:[2,7],99:[2,7],100:[2,7],101:[2,7],102:[2,7],105:[2,7]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],12:108,16:[1,34],18:[1,35],19:252,20:[1,36],22:[2,46],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],37:[1,253],40:[1,27],42:62,43:[2,46],44:[2,46],45:[2,46],46:[1,64],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{4:[1,122],5:119,7:[1,123],8:[1,120],10:113,20:[1,210],24:[1,121],25:[2,149],26:[1,124],39:110,41:118,43:[2,149],44:[2,149],45:[1,112],46:[1,116],50:[1,117],58:[1,115],95:114,96:111},{13:254,14:[2,54],43:[1,162],44:[2,54],45:[2,54]},{1:[2,82],9:[1,74],11:[1,75],14:[2,82],15:[1,76],22:[2,82],23:[2,82],25:[2,82],27:[2,82],28:[2,82],29:[2,82],33:[2,82],36:[2,82],37:[2,82],38:[2,82],43:[2,82],44:[2,82],45:[2,82],54:[2,82],57:[2,82],58:[2,82],60:[2,82],61:[2,82],62:[2,82],63:[2,82],64:[2,82],65:[2,82],66:[2,82],67:[2,82],68:[2,82],69:[2,82],70:[2,82],76:[2,82],79:[2,82],99:[2,82],101:[2,82],105:[2,82]},{13:255,23:[2,54],43:[1,162],44:[2,54],45:[2,54]},{1:[2,83],9:[1,74],11:[1,75],14:[2,83],15:[1,76],22:[2,83],23:[2,83],25:[2,83],27:[2,83],28:[2,83],29:[2,83],33:[2,83],36:[2,83],37:[2,83],38:[2,83],43:[2,83],44:[2,83],45:[2,83],54:[2,83],57:[2,83],58:[2,83],60:[2,83],61:[2,83],62:[2,83],63:[2,83],64:[2,83],65:[2,83],66:[2,83],67:[2,83],68:[2,83],69:[2,83],70:[2,83],76:[2,83],79:[2,83],99:[2,83],101:[2,83],105:[2,83]},{1:[2,84],9:[1,74],11:[1,75],14:[2,84],15:[1,76],22:[2,84],23:[2,84],25:[2,84],27:[2,84],28:[2,84],29:[2,84],33:[2,84],36:[2,84],37:[2,84],38:[2,84],43:[2,84],44:[2,84],45:[2,84],54:[2,84],57:[2,84],58:[2,84],60:[2,84],61:[2,84],62:[2,84],63:[2,84],64:[2,84],65:[2,84],66:[2,84],67:[2,84],68:[2,84],69:[2,84],70:[2,84],76:[2,84],79:[2,84],99:[2,84],101:[2,84],105:[2,84]},{13:256,14:[2,54],43:[1,162],44:[2,54],45:[2,54]},{1:[2,158],14:[2,158],22:[2,158],23:[2,158],25:[2,158],27:[2,158],28:[2,158],29:[2,158],33:[2,158],36:[2,158],37:[2,158],38:[2,158],43:[2,158],44:[2,158],45:[2,158],54:[2,158],57:[2,158],58:[2,158],60:[2,158],61:[2,158],62:[2,158],63:[2,158],64:[2,158],65:[2,158],66:[2,158],67:[2,158],68:[2,158],69:[2,158],70:[2,158],75:257,76:[2,158],79:[2,158],86:[1,183],99:[2,158],101:[2,158],105:[2,158]},{1:[2,106],14:[2,106],22:[2,106],23:[2,106],25:[2,106],27:[2,106],28:[2,106],29:[2,106],33:[2,106],36:[2,106],37:[2,106],38:[2,106],43:[2,106],44:[2,106],45:[2,106],54:[2,106],57:[2,106],58:[2,106],60:[2,106],61:[2,106],62:[2,106],63:[2,106],64:[2,106],65:[2,106],66:[2,106],67:[2,106],68:[2,106],69:[2,106],70:[2,106],76:[2,106],79:[2,106],99:[2,106],101:[2,106],105:[2,106]},{17:258,45:[1,6],74:[1,259]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:260,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{13:261,23:[2,54],43:[1,162],44:[2,54],45:[2,54]},{1:[2,113],14:[2,113],22:[2,113],23:[2,113],25:[2,113],27:[2,113],28:[2,113],29:[2,113],33:[2,113],36:[2,113],37:[2,113],38:[2,113],43:[2,113],44:[2,113],45:[2,113],54:[2,113],57:[2,113],58:[2,113],60:[2,113],61:[2,113],62:[2,113],63:[2,113],64:[2,113],65:[2,113],66:[2,113],67:[2,113],68:[2,113],69:[2,113],70:[2,113],76:[2,113],79:[2,113],85:[1,262],86:[1,263],99:[2,113],101:[1,190],105:[2,113]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:264,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{17:265,45:[1,6]},{17:266,45:[1,6]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:95,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],83:267,87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{17:268,43:[1,187],45:[1,6]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],17:269,18:[1,35],19:63,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],42:270,45:[1,6],46:[1,64],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{17:271,45:[1,6]},{45:[2,193],92:272,105:[1,196]},{17:273,45:[1,6]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:95,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],83:274,87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{36:[1,46],45:[2,190],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],105:[2,190]},{13:275,23:[2,54],43:[1,162],44:[2,54],45:[2,54]},{13:276,14:[2,54],43:[1,162],44:[2,54],45:[2,54]},{1:[2,11],9:[2,11],11:[2,11],14:[2,11],15:[2,11],22:[2,11],23:[2,11],25:[2,11],27:[2,11],28:[2,11],29:[2,11],33:[2,11],35:[2,11],36:[2,11],37:[2,11],38:[2,11],43:[2,11],44:[2,11],45:[2,11],53:[2,11],54:[2,11],55:[2,11],56:[2,11],57:[2,11],58:[2,11],60:[2,11],61:[2,11],62:[2,11],63:[2,11],64:[2,11],65:[2,11],66:[2,11],67:[2,11],68:[2,11],69:[2,11],70:[2,11],71:[2,11],76:[2,11],79:[2,11],93:[2,11],99:[2,11],100:[2,11],101:[2,11],102:[2,11],105:[2,11]},{22:[1,277],23:[1,278],44:[1,280],45:[1,281],77:279,79:[1,40],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:282,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{22:[2,184],23:[2,184],25:[2,184],44:[2,184],45:[2,184],79:[2,184],99:[2,184]},{22:[1,283],36:[1,46],38:[1,284],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{22:[1,285],44:[1,247],45:[1,248]},{13:286,22:[2,54],43:[1,162],44:[2,54],45:[2,54]},{25:[1,287],44:[1,288]},{4:[1,122],5:119,7:[1,123],8:[1,120],10:113,20:[1,210],23:[2,55],24:[1,121],25:[2,55],26:[1,124],41:118,44:[2,55],46:[1,116],50:[1,117],58:[1,115],95:114,96:289},{13:290,23:[2,54],43:[1,208],44:[2,54]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],12:291,16:[1,34],18:[1,35],19:63,20:[1,36],22:[2,46],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],42:62,43:[2,46],44:[2,46],45:[2,46],46:[1,64],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:292,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],45:[1,293],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{4:[1,122],7:[1,123],41:294},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:295,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:296,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{23:[2,145],25:[2,145],43:[2,145],44:[2,145]},{23:[2,146],25:[2,146],43:[2,146],44:[2,146]},{23:[2,147],25:[2,147],36:[1,46],43:[2,147],44:[2,147],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{4:[1,122],7:[1,123],41:297},{13:298,25:[2,54],43:[1,208],44:[2,54]},{1:[2,15],9:[2,15],11:[2,15],14:[2,15],15:[2,15],22:[2,15],23:[2,15],25:[2,15],27:[2,15],28:[2,15],29:[2,15],33:[2,15],35:[2,15],36:[2,15],37:[2,15],38:[2,15],43:[2,15],44:[2,15],45:[2,15],53:[2,15],54:[2,15],55:[2,15],56:[2,15],57:[2,15],58:[2,15],60:[2,15],61:[2,15],62:[2,15],63:[2,15],64:[2,15],65:[2,15],66:[2,15],67:[2,15],68:[2,15],69:[2,15],70:[2,15],71:[2,15],76:[2,15],79:[2,15],93:[2,15],99:[2,15],100:[2,15],101:[2,15],102:[2,15],105:[2,15]},{28:[1,299],36:[1,46],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{28:[1,300]},{28:[1,301]},{3:302,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],20:[1,36],24:[1,37],26:[1,38]},{1:[2,18],9:[2,18],11:[2,18],14:[2,18],15:[2,18],22:[2,18],23:[2,18],25:[2,18],27:[2,18],28:[2,18],29:[2,18],33:[2,18],35:[2,18],36:[2,18],37:[2,18],38:[2,18],43:[2,18],44:[2,18],45:[2,18],53:[2,18],54:[2,18],55:[2,18],56:[2,18],57:[2,18],58:[2,18],60:[2,18],61:[2,18],62:[2,18],63:[2,18],64:[2,18],65:[2,18],66:[2,18],67:[2,18],68:[2,18],69:[2,18],70:[2,18],71:[2,18],76:[2,18],79:[2,18],93:[2,18],99:[2,18],100:[2,18],101:[2,18],102:[2,18],105:[2,18]},{28:[1,303],36:[1,46],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{1:[2,21],9:[2,21],11:[2,21],14:[2,21],15:[2,21],22:[2,21],23:[2,21],25:[2,21],27:[2,21],28:[2,21],29:[2,21],33:[2,21],35:[2,21],36:[2,21],37:[2,21],38:[2,21],43:[2,21],44:[2,21],45:[2,21],53:[2,21],54:[2,21],55:[2,21],56:[2,21],57:[2,21],58:[2,21],60:[2,21],61:[2,21],62:[2,21],63:[2,21],64:[2,21],65:[2,21],66:[2,21],67:[2,21],68:[2,21],69:[2,21],70:[2,21],71:[2,21],76:[2,21],79:[2,21],93:[2,21],99:[2,21],100:[2,21],101:[2,21],102:[2,21],105:[2,21]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],12:304,14:[2,46],16:[1,34],18:[1,35],19:63,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],42:62,43:[2,46],44:[2,46],45:[2,46],46:[1,64],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{1:[2,23],9:[2,23],11:[2,23],14:[2,23],15:[2,23],22:[2,23],23:[2,23],25:[2,23],27:[2,23],28:[2,23],29:[2,23],33:[2,23],35:[2,23],36:[2,23],37:[2,23],38:[2,23],43:[2,23],44:[2,23],45:[2,23],53:[2,23],54:[2,23],55:[2,23],56:[2,23],57:[2,23],58:[2,23],60:[2,23],61:[2,23],62:[2,23],63:[2,23],64:[2,23],65:[2,23],66:[2,23],67:[2,23],68:[2,23],69:[2,23],70:[2,23],71:[2,23],76:[2,23],79:[2,23],93:[2,23],99:[2,23],100:[2,23],101:[2,23],102:[2,23],105:[2,23]},{13:305,33:[2,54],43:[1,162],44:[2,54],45:[2,54]},{1:[2,25],9:[2,25],11:[2,25],14:[2,25],15:[2,25],22:[2,25],23:[2,25],25:[2,25],27:[2,25],28:[2,25],29:[2,25],33:[2,25],35:[2,25],36:[2,25],37:[2,25],38:[2,25],43:[2,25],44:[2,25],45:[2,25],53:[2,25],54:[2,25],55:[2,25],56:[2,25],57:[2,25],58:[2,25],60:[2,25],61:[2,25],62:[2,25],63:[2,25],64:[2,25],65:[2,25],66:[2,25],67:[2,25],68:[2,25],69:[2,25],70:[2,25],71:[2,25],76:[2,25],79:[2,25],93:[2,25],99:[2,25],100:[2,25],101:[2,25],102:[2,25],105:[2,25]},{1:[2,26],9:[2,26],11:[2,26],14:[2,26],15:[2,26],22:[2,26],23:[2,26],25:[2,26],27:[2,26],28:[2,26],29:[2,26],33:[2,26],35:[2,26],36:[2,26],37:[2,26],38:[2,26],43:[2,26],44:[2,26],45:[2,26],53:[2,26],54:[2,26],55:[2,26],56:[2,26],57:[2,26],58:[2,26],60:[2,26],61:[2,26],62:[2,26],63:[2,26],64:[2,26],65:[2,26],66:[2,26],67:[2,26],68:[2,26],69:[2,26],70:[2,26],71:[2,26],76:[2,26],79:[2,26],93:[2,26],99:[2,26],100:[2,26],101:[2,26],102:[2,26],105:[2,26]},{9:[1,74],11:[1,75],15:[1,76],36:[1,306]},{1:[2,154],9:[2,154],11:[2,154],14:[2,154],15:[2,154],22:[2,154],23:[2,154],25:[2,154],27:[2,154],28:[2,154],29:[2,154],33:[2,154],35:[2,154],36:[2,154],37:[2,154],38:[2,154],43:[2,154],44:[2,154],45:[2,154],53:[2,154],54:[2,154],55:[2,154],56:[2,154],57:[2,154],58:[2,154],60:[2,154],61:[2,154],62:[2,154],63:[2,154],64:[2,154],65:[2,154],66:[2,154],67:[2,154],68:[2,154],69:[2,154],70:[2,154],71:[2,154],76:[2,154],79:[2,154],93:[2,154],97:[2,154],99:[2,154],100:[2,154],101:[2,154],102:[2,154],105:[2,154]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:307,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:308,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:309,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],20:[1,36],24:[1,37],26:[1,38]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:310,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{43:[1,312],102:[1,311]},{36:[1,46],37:[1,313],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:314,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:315,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{13:316,14:[2,54],43:[1,162],44:[2,54],45:[2,54]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:317,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{13:318,23:[2,54],43:[1,162],44:[2,54],45:[2,54]},{49:[1,319],72:[1,320]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:63,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],42:321,46:[1,64],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],12:322,16:[1,34],18:[1,35],19:63,20:[1,36],23:[2,46],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],42:62,43:[2,46],44:[2,46],45:[2,46],46:[1,64],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{14:[2,48],22:[2,48],23:[2,48],33:[2,48],43:[2,48],44:[2,48],45:[2,48]},{33:[1,323],44:[1,247],45:[1,248]},{13:324,23:[2,54],43:[1,162],44:[2,54],45:[2,54]},{22:[2,51],36:[1,46],37:[1,325],43:[2,51],44:[2,51],45:[2,51],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:326,20:[1,36],22:[1,327],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{14:[1,328],44:[1,247],45:[1,248]},{23:[1,329],44:[1,247],45:[1,248]},{14:[1,330],44:[1,247],45:[1,248]},{1:[2,104],14:[2,104],22:[2,104],23:[2,104],25:[2,104],27:[2,104],28:[2,104],29:[2,104],33:[2,104],36:[2,104],37:[2,104],38:[2,104],43:[2,104],44:[2,104],45:[2,104],54:[2,104],57:[2,104],58:[2,104],60:[2,104],61:[2,104],62:[2,104],63:[2,104],64:[2,104],65:[2,104],66:[2,104],67:[2,104],68:[2,104],69:[2,104],70:[2,104],76:[2,104],79:[2,104],99:[2,104],101:[2,104],105:[2,104]},{1:[2,159],14:[2,159],22:[2,159],23:[2,159],25:[2,159],27:[2,159],28:[2,159],29:[2,159],33:[2,159],36:[2,159],37:[2,159],38:[2,159],43:[2,159],44:[2,159],45:[2,159],54:[2,159],57:[2,159],58:[2,159],60:[2,159],61:[2,159],62:[2,159],63:[2,159],64:[2,159],65:[2,159],66:[2,159],67:[2,159],68:[2,159],69:[2,159],70:[2,159],76:[2,159],79:[2,159],99:[2,159],101:[2,159],105:[2,159]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:331,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{1:[2,107],14:[2,107],22:[2,107],23:[2,107],25:[2,107],27:[2,107],28:[2,107],29:[2,107],33:[2,107],36:[1,46],37:[2,107],38:[2,107],43:[2,107],44:[2,107],45:[2,107],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[2,107],79:[2,107],99:[2,107],101:[2,107],105:[2,107]},{23:[1,332],44:[1,247],45:[1,248]},{17:333,45:[1,6]},{17:334,45:[1,6]},{36:[1,46],43:[2,133],45:[2,133],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],101:[2,133]},{1:[2,117],14:[2,117],22:[2,117],23:[2,117],25:[2,117],27:[2,117],28:[2,117],29:[2,117],33:[2,117],36:[2,117],37:[2,117],38:[2,117],43:[2,117],44:[2,117],45:[2,117],54:[2,117],57:[2,117],58:[2,117],60:[2,117],61:[2,117],62:[2,117],63:[2,117],64:[2,117],65:[2,117],66:[2,117],67:[2,117],68:[2,117],69:[2,117],70:[2,117],76:[2,117],79:[2,117],99:[2,117],101:[2,117],105:[2,117]},{1:[2,118],14:[2,118],22:[2,118],23:[2,118],25:[2,118],27:[2,118],28:[2,118],29:[2,118],33:[2,118],36:[2,118],37:[2,118],38:[2,118],43:[2,118],44:[2,118],45:[2,118],54:[2,118],57:[2,118],58:[2,118],60:[2,118],61:[2,118],62:[2,118],63:[2,118],64:[2,118],65:[2,118],66:[2,118],67:[2,118],68:[2,118],69:[2,118],70:[2,118],76:[2,118],79:[2,118],99:[2,118],101:[2,118],105:[2,118]},{17:335,43:[1,187],45:[1,6]},{1:[2,188],14:[2,188],22:[2,188],23:[2,188],25:[2,188],27:[2,188],28:[2,188],29:[2,188],33:[2,188],36:[2,188],37:[2,188],38:[2,188],43:[2,188],44:[2,188],45:[2,188],54:[2,188],57:[2,188],58:[2,188],60:[2,188],61:[2,188],62:[2,188],63:[2,188],64:[2,188],65:[2,188],66:[2,188],67:[2,188],68:[2,188],69:[2,188],70:[2,188],76:[2,188],79:[2,188],85:[2,188],86:[2,188],99:[2,188],101:[2,188],105:[2,188]},{1:[2,121],14:[2,121],22:[2,121],23:[2,121],25:[2,121],27:[2,121],28:[2,121],29:[2,121],33:[2,121],36:[2,121],37:[2,121],38:[2,121],43:[2,121],44:[2,121],45:[2,121],54:[2,121],57:[2,121],58:[2,121],60:[2,121],61:[2,121],62:[2,121],63:[2,121],64:[2,121],65:[2,121],66:[2,121],67:[2,121],68:[2,121],69:[2,121],70:[2,121],76:[2,121],79:[2,121],89:[1,336],99:[2,121],101:[2,121],105:[2,121]},{17:337,45:[1,6]},{1:[2,125],14:[2,125],22:[2,125],23:[2,125],25:[2,125],27:[2,125],28:[2,125],29:[2,125],33:[2,125],36:[2,125],37:[2,125],38:[2,125],43:[2,125],44:[2,125],45:[2,125],54:[2,125],57:[2,125],58:[2,125],60:[2,125],61:[2,125],62:[2,125],63:[2,125],64:[2,125],65:[2,125],66:[2,125],67:[2,125],68:[2,125],69:[2,125],70:[2,125],76:[2,125],79:[2,125],99:[2,125],101:[2,125],105:[2,125]},{17:338,45:[1,6]},{1:[2,127],14:[2,127],22:[2,127],23:[2,127],25:[2,127],27:[2,127],28:[2,127],29:[2,127],33:[2,127],36:[2,127],37:[2,127],38:[2,127],43:[2,127],44:[2,127],45:[2,127],54:[2,127],57:[2,127],58:[2,127],60:[2,127],61:[2,127],62:[2,127],63:[2,127],64:[2,127],65:[2,127],66:[2,127],67:[2,127],68:[2,127],69:[2,127],70:[2,127],76:[2,127],79:[2,127],99:[2,127],101:[2,127],105:[2,127]},{43:[1,187],45:[2,192]},{23:[1,339],44:[1,247],45:[1,248]},{14:[1,340],44:[1,247],45:[1,248]},{1:[2,12],9:[2,12],11:[2,12],14:[2,12],15:[2,12],22:[2,12],23:[2,12],25:[2,12],27:[2,12],28:[2,12],29:[2,12],33:[2,12],35:[2,12],36:[2,12],37:[2,12],38:[2,12],43:[2,12],44:[2,12],45:[2,12],53:[2,12],54:[2,12],55:[2,12],56:[2,12],57:[2,12],58:[2,12],60:[2,12],61:[2,12],62:[2,12],63:[2,12],64:[2,12],65:[2,12],66:[2,12],67:[2,12],68:[2,12],69:[2,12],70:[2,12],71:[2,12],76:[2,12],79:[2,12],93:[2,12],99:[2,12],100:[2,12],101:[2,12],102:[2,12],105:[2,12]},{22:[1,341]},{22:[2,185],23:[2,185],25:[2,185],44:[2,185],45:[2,185],79:[2,185],99:[2,185]},{77:342,79:[1,40],99:[1,39]},{77:343,79:[1,40],99:[1,39]},{22:[1,344],36:[1,46],38:[1,345],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{1:[2,32],9:[2,32],11:[2,32],14:[2,32],15:[2,32],22:[2,32],23:[2,32],25:[2,32],27:[2,32],28:[2,32],29:[2,32],33:[2,32],35:[2,32],36:[2,32],37:[2,32],38:[2,32],43:[2,32],44:[2,32],45:[2,32],53:[2,32],54:[2,32],55:[2,32],56:[2,32],57:[2,32],58:[2,32],60:[2,32],61:[2,32],62:[2,32],63:[2,32],64:[2,32],65:[2,32],66:[2,32],67:[2,32],68:[2,32],69:[2,32],70:[2,32],71:[2,32],76:[2,32],79:[2,32],93:[2,32],99:[2,32],100:[2,32],101:[2,32],102:[2,32],105:[2,32]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:346,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{1:[2,38],9:[2,38],11:[2,38],14:[2,38],15:[2,38],22:[2,38],23:[2,38],25:[2,38],27:[2,38],28:[2,38],29:[2,38],33:[2,38],35:[2,38],36:[2,38],37:[2,38],38:[2,38],40:[1,347],43:[2,38],44:[2,38],45:[2,38],53:[2,38],54:[2,38],55:[2,38],56:[2,38],57:[2,38],58:[2,38],60:[2,38],61:[2,38],62:[2,38],63:[2,38],64:[2,38],65:[2,38],66:[2,38],67:[2,38],68:[2,38],69:[2,38],70:[2,38],71:[2,38],76:[2,38],79:[2,38],93:[2,38],99:[2,38],100:[2,38],101:[2,38],102:[2,38],105:[2,38]},{22:[1,348],44:[1,247],45:[1,248]},{1:[2,39],9:[2,39],11:[2,39],14:[2,39],15:[2,39],22:[2,39],23:[2,39],25:[2,39],27:[2,39],28:[2,39],29:[2,39],33:[2,39],35:[2,39],36:[2,39],37:[2,39],38:[2,39],40:[1,349],43:[2,39],44:[2,39],45:[2,39],53:[2,39],54:[2,39],55:[2,39],56:[2,39],57:[2,39],58:[2,39],60:[2,39],61:[2,39],62:[2,39],63:[2,39],64:[2,39],65:[2,39],66:[2,39],67:[2,39],68:[2,39],69:[2,39],70:[2,39],71:[2,39],76:[2,39],79:[2,39],93:[2,39],99:[2,39],100:[2,39],101:[2,39],102:[2,39],105:[2,39]},{4:[1,122],5:119,7:[1,123],8:[1,120],10:113,20:[1,210],24:[1,121],26:[1,124],41:118,46:[1,116],50:[1,117],58:[1,115],95:114,96:350},{23:[2,151],25:[2,151],43:[2,151],44:[2,151]},{23:[1,351],44:[1,288]},{13:352,22:[2,54],43:[1,162],44:[2,54],45:[2,54]},{23:[2,140],25:[2,140],36:[1,46],43:[2,140],44:[2,140],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],12:353,16:[1,34],18:[1,35],19:63,20:[1,36],23:[2,46],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],42:62,43:[2,46],44:[2,46],45:[2,46],46:[1,64],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{23:[2,136],25:[2,136],43:[2,136],44:[2,136],56:[2,136],61:[2,136]},{23:[2,143],25:[2,143],36:[1,46],43:[2,143],44:[2,143],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{23:[2,144],25:[2,144],36:[1,46],43:[2,144],44:[2,144],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{23:[2,137],25:[2,137],43:[2,137],44:[2,137],56:[2,137],61:[2,137]},{25:[1,354],44:[1,288]},{1:[2,16],9:[2,16],11:[2,16],14:[2,16],15:[2,16],22:[2,16],23:[2,16],25:[2,16],27:[2,16],28:[2,16],29:[2,16],33:[2,16],35:[2,16],36:[2,16],37:[2,16],38:[2,16],43:[2,16],44:[2,16],45:[2,16],53:[2,16],54:[2,16],55:[2,16],56:[2,16],57:[2,16],58:[2,16],60:[2,16],61:[2,16],62:[2,16],63:[2,16],64:[2,16],65:[2,16],66:[2,16],67:[2,16],68:[2,16],69:[2,16],70:[2,16],71:[2,16],76:[2,16],79:[2,16],93:[2,16],99:[2,16],100:[2,16],101:[2,16],102:[2,16],105:[2,16]},{1:[2,17],9:[2,17],11:[2,17],14:[2,17],15:[2,17],22:[2,17],23:[2,17],25:[2,17],27:[2,17],28:[2,17],29:[2,17],33:[2,17],35:[2,17],36:[2,17],37:[2,17],38:[2,17],43:[2,17],44:[2,17],45:[2,17],53:[2,17],54:[2,17],55:[2,17],56:[2,17],57:[2,17],58:[2,17],60:[2,17],61:[2,17],62:[2,17],63:[2,17],64:[2,17],65:[2,17],66:[2,17],67:[2,17],68:[2,17],69:[2,17],70:[2,17],71:[2,17],76:[2,17],79:[2,17],93:[2,17],99:[2,17],100:[2,17],101:[2,17],102:[2,17],105:[2,17]},{1:[2,20],9:[2,20],11:[2,20],14:[2,20],15:[2,20],22:[2,20],23:[2,20],25:[2,20],27:[2,20],28:[2,20],29:[2,20],33:[2,20],35:[2,20],36:[2,20],37:[2,20],38:[2,20],43:[2,20],44:[2,20],45:[2,20],53:[2,20],54:[2,20],55:[2,20],56:[2,20],57:[2,20],58:[2,20],60:[2,20],61:[2,20],62:[2,20],63:[2,20],64:[2,20],65:[2,20],66:[2,20],67:[2,20],68:[2,20],69:[2,20],70:[2,20],71:[2,20],76:[2,20],79:[2,20],93:[2,20],99:[2,20],100:[2,20],101:[2,20],102:[2,20],105:[2,20]},{9:[1,74],11:[1,75],15:[1,76],36:[1,355]},{1:[2,19],9:[2,19],11:[2,19],14:[2,19],15:[2,19],22:[2,19],23:[2,19],25:[2,19],27:[2,19],28:[2,19],29:[2,19],33:[2,19],35:[2,19],36:[2,19],37:[2,19],38:[2,19],43:[2,19],44:[2,19],45:[2,19],53:[2,19],54:[2,19],55:[2,19],56:[2,19],57:[2,19],58:[2,19],60:[2,19],61:[2,19],62:[2,19],63:[2,19],64:[2,19],65:[2,19],66:[2,19],67:[2,19],68:[2,19],69:[2,19],70:[2,19],71:[2,19],76:[2,19],79:[2,19],93:[2,19],99:[2,19],100:[2,19],101:[2,19],102:[2,19],105:[2,19]},{13:356,14:[2,54],43:[1,162],44:[2,54],45:[2,54]},{33:[1,357],44:[1,247],45:[1,248]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:359,20:[1,36],24:[1,37],26:[1,38],28:[1,358],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{22:[2,161],23:[2,161],25:[2,161],36:[1,46],38:[1,361],44:[2,161],45:[2,161],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,161],99:[2,161],101:[1,360]},{22:[2,165],23:[2,165],25:[2,165],36:[1,46],44:[2,165],45:[2,165],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,165],99:[2,165],101:[1,362]},{9:[1,74],11:[1,75],15:[1,76],102:[1,363]},{36:[1,46],37:[1,364],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:365,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:366,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],20:[1,36],24:[1,37],26:[1,38]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:367,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{22:[2,181],23:[2,181],25:[2,181],36:[1,46],44:[2,181],45:[2,181],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,181],99:[2,181]},{22:[2,182],23:[2,182],25:[2,182],36:[1,46],44:[2,182],45:[2,182],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,182],99:[2,182],101:[1,368]},{14:[1,369],44:[1,247],45:[1,248]},{1:[2,74],14:[2,74],22:[2,74],23:[2,74],25:[2,74],27:[2,74],28:[2,74],29:[2,74],33:[2,74],36:[2,74],37:[2,74],38:[2,74],43:[2,74],44:[2,74],45:[2,74],54:[2,74],57:[2,74],58:[2,74],60:[2,74],61:[2,74],62:[2,74],63:[2,74],64:[2,74],65:[2,74],66:[2,74],67:[2,74],68:[2,74],69:[2,74],70:[2,74],76:[2,74],79:[2,74],99:[2,74],101:[2,74],105:[2,74]},{23:[1,370],44:[1,247],45:[1,248]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:371,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{17:372,45:[1,6]},{14:[2,49],22:[2,49],23:[2,49],33:[2,49],43:[2,49],44:[2,49],45:[2,49]},{13:373,23:[2,54],43:[1,162],44:[2,54],45:[2,54]},{72:[1,320]},{23:[1,374],44:[1,247],45:[1,248]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:375,20:[1,36],22:[1,376],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{22:[1,377],36:[1,46],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{1:[2,37],9:[2,37],11:[2,37],14:[2,37],15:[2,37],22:[2,37],23:[2,37],25:[2,37],27:[2,37],28:[2,37],29:[2,37],33:[2,37],35:[2,37],36:[2,37],37:[2,37],38:[2,37],43:[2,37],44:[2,37],45:[2,37],53:[2,37],54:[2,37],55:[2,37],56:[2,37],57:[2,37],58:[2,37],60:[2,37],61:[2,37],62:[2,37],63:[2,37],64:[2,37],65:[2,37],66:[2,37],67:[2,37],68:[2,37],69:[2,37],70:[2,37],71:[2,37],76:[2,37],79:[2,37],93:[2,37],99:[2,37],100:[2,37],101:[2,37],102:[2,37],105:[2,37]},{1:[2,8],9:[2,8],11:[2,8],14:[2,8],15:[2,8],22:[2,8],23:[2,8],25:[2,8],27:[2,8],28:[2,8],29:[2,8],33:[2,8],35:[2,8],36:[2,8],37:[2,8],38:[2,8],43:[2,8],44:[2,8],45:[2,8],53:[2,8],54:[2,8],55:[2,8],56:[2,8],57:[2,8],58:[2,8],60:[2,8],61:[2,8],62:[2,8],63:[2,8],64:[2,8],65:[2,8],66:[2,8],67:[2,8],68:[2,8],69:[2,8],70:[2,8],71:[2,8],76:[2,8],79:[2,8],93:[2,8],99:[2,8],100:[2,8],101:[2,8],102:[2,8],105:[2,8]},{1:[2,88],14:[2,88],22:[2,88],23:[2,88],25:[2,88],27:[2,88],28:[2,88],29:[2,88],33:[2,88],36:[2,88],37:[2,88],38:[2,88],43:[2,88],44:[2,88],45:[2,88],54:[2,88],57:[2,88],58:[2,88],60:[2,88],61:[2,88],62:[2,88],63:[2,88],64:[2,88],65:[2,88],66:[2,88],67:[2,88],68:[2,88],69:[2,88],70:[2,88],76:[2,88],79:[2,88],99:[2,88],101:[2,88],105:[2,88]},{17:378,45:[1,6]},{17:379,36:[1,46],45:[1,6],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{1:[2,109],14:[2,109],22:[2,109],23:[2,109],25:[2,109],27:[2,109],28:[2,109],29:[2,109],33:[2,109],36:[2,109],37:[2,109],38:[2,109],43:[2,109],44:[2,109],45:[2,109],54:[2,109],57:[2,109],58:[2,109],60:[2,109],61:[2,109],62:[2,109],63:[2,109],64:[2,109],65:[2,109],66:[2,109],67:[2,109],68:[2,109],69:[2,109],70:[2,109],76:[2,109],79:[2,109],99:[2,109],101:[2,109],105:[2,109]},{1:[2,114],14:[2,114],22:[2,114],23:[2,114],25:[2,114],27:[2,114],28:[2,114],29:[2,114],33:[2,114],36:[2,114],37:[2,114],38:[2,114],43:[2,114],44:[2,114],45:[2,114],54:[2,114],57:[2,114],58:[2,114],60:[2,114],61:[2,114],62:[2,114],63:[2,114],64:[2,114],65:[2,114],66:[2,114],67:[2,114],68:[2,114],69:[2,114],70:[2,114],76:[2,114],79:[2,114],99:[2,114],101:[2,114],105:[2,114]},{1:[2,115],14:[2,115],22:[2,115],23:[2,115],25:[2,115],27:[2,115],28:[2,115],29:[2,115],33:[2,115],36:[2,115],37:[2,115],38:[2,115],43:[2,115],44:[2,115],45:[2,115],54:[2,115],57:[2,115],58:[2,115],60:[2,115],61:[2,115],62:[2,115],63:[2,115],64:[2,115],65:[2,115],66:[2,115],67:[2,115],68:[2,115],69:[2,115],70:[2,115],76:[2,115],79:[2,115],99:[2,115],101:[2,115],105:[2,115]},{1:[2,189],14:[2,189],22:[2,189],23:[2,189],25:[2,189],27:[2,189],28:[2,189],29:[2,189],33:[2,189],36:[2,189],37:[2,189],38:[2,189],43:[2,189],44:[2,189],45:[2,189],54:[2,189],57:[2,189],58:[2,189],60:[2,189],61:[2,189],62:[2,189],63:[2,189],64:[2,189],65:[2,189],66:[2,189],67:[2,189],68:[2,189],69:[2,189],70:[2,189],76:[2,189],79:[2,189],85:[2,189],86:[2,189],99:[2,189],101:[2,189],105:[2,189]},{17:380,45:[1,6]},{1:[2,123],14:[2,123],22:[2,123],23:[2,123],25:[2,123],27:[2,123],28:[2,123],29:[2,123],33:[2,123],36:[2,123],37:[2,123],38:[2,123],43:[2,123],44:[2,123],45:[2,123],54:[2,123],57:[2,123],58:[2,123],60:[2,123],61:[2,123],62:[2,123],63:[2,123],64:[2,123],65:[2,123],66:[2,123],67:[2,123],68:[2,123],69:[2,123],70:[2,123],76:[2,123],79:[2,123],89:[1,381],99:[2,123],101:[2,123],105:[2,123]},{1:[2,126],14:[2,126],22:[2,126],23:[2,126],25:[2,126],27:[2,126],28:[2,126],29:[2,126],33:[2,126],36:[2,126],37:[2,126],38:[2,126],43:[2,126],44:[2,126],45:[2,126],54:[2,126],57:[2,126],58:[2,126],60:[2,126],61:[2,126],62:[2,126],63:[2,126],64:[2,126],65:[2,126],66:[2,126],67:[2,126],68:[2,126],69:[2,126],70:[2,126],76:[2,126],79:[2,126],99:[2,126],101:[2,126],105:[2,126]},{1:[2,131],14:[2,131],22:[2,131],23:[2,131],25:[2,131],27:[2,131],28:[2,131],29:[2,131],33:[2,131],36:[2,131],37:[2,131],38:[2,131],43:[2,131],44:[2,131],45:[2,131],54:[2,131],57:[2,131],58:[2,131],60:[2,131],61:[2,131],62:[2,131],63:[2,131],64:[2,131],65:[2,131],66:[2,131],67:[2,131],68:[2,131],69:[2,131],70:[2,131],76:[2,131],79:[2,131],99:[2,131],101:[2,131],105:[2,131]},{17:382,45:[1,6]},{1:[2,13],9:[2,13],11:[2,13],14:[2,13],15:[2,13],22:[2,13],23:[2,13],25:[2,13],27:[2,13],28:[2,13],29:[2,13],33:[2,13],35:[2,13],36:[2,13],37:[2,13],38:[2,13],43:[2,13],44:[2,13],45:[2,13],53:[2,13],54:[2,13],55:[2,13],56:[2,13],57:[2,13],58:[2,13],60:[2,13],61:[2,13],62:[2,13],63:[2,13],64:[2,13],65:[2,13],66:[2,13],67:[2,13],68:[2,13],69:[2,13],70:[2,13],71:[2,13],76:[2,13],79:[2,13],93:[2,13],99:[2,13],100:[2,13],101:[2,13],102:[2,13],105:[2,13]},{22:[2,186],23:[2,186],25:[2,186],44:[2,186],45:[2,186],79:[2,186],99:[2,186]},{22:[2,187],23:[2,187],25:[2,187],44:[2,187],45:[2,187],79:[2,187],99:[2,187]},{1:[2,30],9:[2,30],11:[2,30],14:[2,30],15:[2,30],22:[2,30],23:[2,30],25:[2,30],27:[2,30],28:[2,30],29:[2,30],33:[2,30],35:[2,30],36:[2,30],37:[2,30],38:[2,30],43:[2,30],44:[2,30],45:[2,30],53:[2,30],54:[2,30],55:[2,30],56:[2,30],57:[2,30],58:[2,30],60:[2,30],61:[2,30],62:[2,30],63:[2,30],64:[2,30],65:[2,30],66:[2,30],67:[2,30],68:[2,30],69:[2,30],70:[2,30],71:[2,30],76:[2,30],79:[2,30],93:[2,30],99:[2,30],100:[2,30],101:[2,30],102:[2,30],105:[2,30]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:383,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{22:[1,384],36:[1,46],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{1:[2,40],9:[2,40],11:[2,40],14:[2,40],15:[2,40],22:[2,40],23:[2,40],25:[2,40],27:[2,40],28:[2,40],29:[2,40],33:[2,40],35:[2,40],36:[2,40],37:[2,40],38:[2,40],43:[2,40],44:[2,40],45:[2,40],53:[2,40],54:[2,40],55:[2,40],56:[2,40],57:[2,40],58:[2,40],60:[2,40],61:[2,40],62:[2,40],63:[2,40],64:[2,40],65:[2,40],66:[2,40],67:[2,40],68:[2,40],69:[2,40],70:[2,40],71:[2,40],76:[2,40],79:[2,40],93:[2,40],99:[2,40],100:[2,40],101:[2,40],102:[2,40],105:[2,40]},{21:385,40:[1,386],77:203,79:[1,40],99:[1,39]},{1:[2,41],9:[2,41],11:[2,41],14:[2,41],15:[2,41],22:[2,41],23:[2,41],25:[2,41],27:[2,41],28:[2,41],29:[2,41],33:[2,41],35:[2,41],36:[2,41],37:[2,41],38:[2,41],43:[2,41],44:[2,41],45:[2,41],53:[2,41],54:[2,41],55:[2,41],56:[2,41],57:[2,41],58:[2,41],60:[2,41],61:[2,41],62:[2,41],63:[2,41],64:[2,41],65:[2,41],66:[2,41],67:[2,41],68:[2,41],69:[2,41],70:[2,41],71:[2,41],76:[2,41],79:[2,41],93:[2,41],99:[2,41],100:[2,41],101:[2,41],102:[2,41],105:[2,41]},{23:[2,152],25:[2,152],43:[2,152],44:[2,152]},{23:[2,153],25:[2,153],43:[2,153],44:[2,153]},{22:[1,387],44:[1,247],45:[1,248]},{13:388,23:[2,54],43:[1,162],44:[2,54],45:[2,54]},{40:[1,389]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:317,20:[1,36],24:[1,37],26:[1,38],28:[1,390],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{14:[1,391],44:[1,247],45:[1,248]},{31:[1,392],49:[1,319],72:[1,320]},{1:[2,27],9:[2,27],11:[2,27],14:[2,27],15:[2,27],22:[2,27],23:[2,27],25:[2,27],27:[2,27],28:[2,27],29:[2,27],33:[2,27],35:[2,27],36:[2,27],37:[2,27],38:[2,27],43:[2,27],44:[2,27],45:[2,27],53:[2,27],54:[2,27],55:[2,27],56:[2,27],57:[2,27],58:[2,27],60:[2,27],61:[2,27],62:[2,27],63:[2,27],64:[2,27],65:[2,27],66:[2,27],67:[2,27],68:[2,27],69:[2,27],70:[2,27],71:[2,27],76:[2,27],79:[2,27],93:[2,27],99:[2,27],100:[2,27],101:[2,27],102:[2,27],105:[2,27]},{28:[1,393],36:[1,46],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:394,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:395,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:396,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:397,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:398,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{22:[2,169],23:[2,169],25:[2,169],36:[1,46],44:[2,169],45:[2,169],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,169],99:[2,169],101:[1,399]},{9:[1,74],11:[1,75],15:[1,76],102:[1,400]},{22:[2,174],23:[2,174],25:[2,174],36:[1,46],44:[2,174],45:[2,174],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,174],99:[2,174],101:[1,401]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:402,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{1:[2,70],14:[2,70],22:[2,70],23:[2,70],25:[2,70],27:[2,70],28:[2,70],29:[2,70],33:[2,70],36:[2,70],37:[2,70],38:[2,70],43:[2,70],44:[2,70],45:[2,70],54:[2,70],57:[2,70],58:[2,70],60:[2,70],61:[2,70],62:[2,70],63:[2,70],64:[2,70],65:[2,70],66:[2,70],67:[2,70],68:[2,70],69:[2,70],70:[2,70],76:[2,70],79:[2,70],99:[2,70],101:[2,70],105:[2,70]},{1:[2,79],14:[2,79],22:[2,79],23:[2,79],25:[2,79],27:[2,79],28:[2,79],29:[2,79],33:[2,79],36:[2,79],37:[2,79],38:[2,79],43:[2,79],44:[2,79],45:[2,79],54:[2,79],57:[2,79],58:[2,79],60:[2,79],61:[2,79],62:[2,79],63:[2,79],64:[2,79],65:[2,79],66:[2,79],67:[2,79],68:[2,79],69:[2,79],70:[2,79],76:[2,79],79:[2,79],99:[2,79],101:[2,79],105:[2,79]},{1:[2,62],23:[2,62],28:[2,62],36:[1,46],44:[2,62],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{1:[2,102],14:[2,102],22:[2,102],23:[2,102],25:[2,102],27:[2,102],28:[2,102],29:[2,102],33:[2,102],36:[2,102],37:[2,102],38:[2,102],43:[2,102],44:[2,102],45:[2,102],54:[2,102],57:[2,102],58:[2,102],60:[2,102],61:[2,102],62:[2,102],63:[2,102],64:[2,102],65:[2,102],66:[2,102],67:[2,102],68:[2,102],69:[2,102],70:[2,102],76:[2,102],79:[2,102],99:[2,102],101:[2,102],105:[2,102]},{23:[1,403],44:[1,247],45:[1,248]},{1:[2,77],14:[2,77],22:[2,77],23:[2,77],25:[2,77],27:[2,77],28:[2,77],29:[2,77],33:[2,77],36:[2,77],37:[2,77],38:[2,77],43:[2,77],44:[2,77],45:[2,77],54:[2,77],57:[2,77],58:[2,77],60:[2,77],61:[2,77],62:[2,77],63:[2,77],64:[2,77],65:[2,77],66:[2,77],67:[2,77],68:[2,77],69:[2,77],70:[2,77],76:[2,77],79:[2,77],99:[2,77],101:[2,77],105:[2,77]},{22:[1,404],36:[1,46],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{1:[2,35],9:[2,35],11:[2,35],14:[2,35],15:[2,35],22:[2,35],23:[2,35],25:[2,35],27:[2,35],28:[2,35],29:[2,35],33:[2,35],35:[2,35],36:[2,35],37:[2,35],38:[2,35],43:[2,35],44:[2,35],45:[2,35],53:[2,35],54:[2,35],55:[2,35],56:[2,35],57:[2,35],58:[2,35],60:[2,35],61:[2,35],62:[2,35],63:[2,35],64:[2,35],65:[2,35],66:[2,35],67:[2,35],68:[2,35],69:[2,35],70:[2,35],71:[2,35],76:[2,35],79:[2,35],93:[2,35],99:[2,35],100:[2,35],101:[2,35],102:[2,35],105:[2,35]},{1:[2,36],9:[2,36],11:[2,36],14:[2,36],15:[2,36],22:[2,36],23:[2,36],25:[2,36],27:[2,36],28:[2,36],29:[2,36],33:[2,36],35:[2,36],36:[2,36],37:[2,36],38:[2,36],43:[2,36],44:[2,36],45:[2,36],53:[2,36],54:[2,36],55:[2,36],56:[2,36],57:[2,36],58:[2,36],60:[2,36],61:[2,36],62:[2,36],63:[2,36],64:[2,36],65:[2,36],66:[2,36],67:[2,36],68:[2,36],69:[2,36],70:[2,36],71:[2,36],76:[2,36],79:[2,36],93:[2,36],99:[2,36],100:[2,36],101:[2,36],102:[2,36],105:[2,36]},{1:[2,103],14:[2,103],22:[2,103],23:[2,103],25:[2,103],27:[2,103],28:[2,103],29:[2,103],33:[2,103],36:[2,103],37:[2,103],38:[2,103],43:[2,103],44:[2,103],45:[2,103],54:[2,103],57:[2,103],58:[2,103],60:[2,103],61:[2,103],62:[2,103],63:[2,103],64:[2,103],65:[2,103],66:[2,103],67:[2,103],68:[2,103],69:[2,103],70:[2,103],76:[2,103],79:[2,103],99:[2,103],101:[2,103],105:[2,103]},{1:[2,158],14:[2,158],22:[2,158],23:[2,158],25:[2,158],27:[2,158],28:[2,158],29:[2,158],33:[2,158],36:[2,158],37:[2,158],38:[2,158],43:[2,158],44:[2,158],45:[2,158],54:[2,158],57:[2,158],58:[2,158],60:[2,158],61:[2,158],62:[2,158],63:[2,158],64:[2,158],65:[2,158],66:[2,158],67:[2,158],68:[2,158],69:[2,158],70:[2,158],75:405,76:[2,158],79:[2,158],86:[1,183],99:[2,158],101:[2,158],105:[2,158]},{1:[2,122],14:[2,122],22:[2,122],23:[2,122],25:[2,122],27:[2,122],28:[2,122],29:[2,122],33:[2,122],36:[2,122],37:[2,122],38:[2,122],43:[2,122],44:[2,122],45:[2,122],54:[2,122],57:[2,122],58:[2,122],60:[2,122],61:[2,122],62:[2,122],63:[2,122],64:[2,122],65:[2,122],66:[2,122],67:[2,122],68:[2,122],69:[2,122],70:[2,122],76:[2,122],79:[2,122],99:[2,122],101:[2,122],105:[2,122]},{17:406,45:[1,6]},{1:[2,10],9:[2,10],11:[2,10],14:[2,10],15:[2,10],22:[2,10],23:[2,10],25:[2,10],27:[2,10],28:[2,10],29:[2,10],33:[2,10],35:[2,10],36:[2,10],37:[2,10],38:[2,10],43:[2,10],44:[2,10],45:[2,10],53:[2,10],54:[2,10],55:[2,10],56:[2,10],57:[2,10],58:[2,10],60:[2,10],61:[2,10],62:[2,10],63:[2,10],64:[2,10],65:[2,10],66:[2,10],67:[2,10],68:[2,10],69:[2,10],70:[2,10],71:[2,10],76:[2,10],79:[2,10],93:[2,10],99:[2,10],100:[2,10],101:[2,10],102:[2,10],105:[2,10]},{22:[1,407],36:[1,46],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60]},{1:[2,33],9:[2,33],11:[2,33],14:[2,33],15:[2,33],22:[2,33],23:[2,33],25:[2,33],27:[2,33],28:[2,33],29:[2,33],33:[2,33],35:[2,33],36:[2,33],37:[2,33],38:[2,33],43:[2,33],44:[2,33],45:[2,33],53:[2,33],54:[2,33],55:[2,33],56:[2,33],57:[2,33],58:[2,33],60:[2,33],61:[2,33],62:[2,33],63:[2,33],64:[2,33],65:[2,33],66:[2,33],67:[2,33],68:[2,33],69:[2,33],70:[2,33],71:[2,33],76:[2,33],79:[2,33],93:[2,33],99:[2,33],100:[2,33],101:[2,33],102:[2,33],105:[2,33]},{25:[1,408],44:[1,280],45:[1,281],77:279,79:[1,40],99:[1,39]},{23:[2,139],25:[2,139],43:[2,139],44:[2,139],56:[2,139],61:[2,139]},{40:[1,386]},{23:[1,409],44:[1,247],45:[1,248]},{23:[2,138],25:[2,138],43:[2,138],44:[2,138],56:[2,138],61:[2,138]},{1:[2,28],9:[2,28],11:[2,28],14:[2,28],15:[2,28],22:[2,28],23:[2,28],25:[2,28],27:[2,28],28:[2,28],29:[2,28],33:[2,28],35:[2,28],36:[2,28],37:[2,28],38:[2,28],43:[2,28],44:[2,28],45:[2,28],53:[2,28],54:[2,28],55:[2,28],56:[2,28],57:[2,28],58:[2,28],60:[2,28],61:[2,28],62:[2,28],63:[2,28],64:[2,28],65:[2,28],66:[2,28],67:[2,28],68:[2,28],69:[2,28],70:[2,28],71:[2,28],76:[2,28],79:[2,28],93:[2,28],99:[2,28],100:[2,28],101:[2,28],102:[2,28],105:[2,28]},{28:[1,410]},{28:[1,411]},{1:[2,29],9:[2,29],11:[2,29],14:[2,29],15:[2,29],22:[2,29],23:[2,29],25:[2,29],27:[2,29],28:[2,29],29:[2,29],33:[2,29],35:[2,29],36:[2,29],37:[2,29],38:[2,29],43:[2,29],44:[2,29],45:[2,29],53:[2,29],54:[2,29],55:[2,29],56:[2,29],57:[2,29],58:[2,29],60:[2,29],61:[2,29],62:[2,29],63:[2,29],64:[2,29],65:[2,29],66:[2,29],67:[2,29],68:[2,29],69:[2,29],70:[2,29],71:[2,29],76:[2,29],79:[2,29],93:[2,29],99:[2,29],100:[2,29],101:[2,29],102:[2,29],105:[2,29]},{22:[2,162],23:[2,162],25:[2,162],36:[1,46],44:[2,162],45:[2,162],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,162],99:[2,162]},{22:[2,163],23:[2,163],25:[2,163],36:[1,46],44:[2,163],45:[2,163],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,163],99:[2,163],101:[1,412]},{22:[2,166],23:[2,166],25:[2,166],36:[1,46],44:[2,166],45:[2,166],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,166],99:[2,166]},{22:[2,167],23:[2,167],25:[2,167],36:[1,46],44:[2,167],45:[2,167],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,167],99:[2,167],101:[1,413]},{22:[2,173],23:[2,173],25:[2,173],36:[1,46],38:[1,415],44:[2,173],45:[2,173],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,173],99:[2,173],101:[1,414]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:416,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:417,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:418,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{22:[2,183],23:[2,183],25:[2,183],36:[1,46],44:[2,183],45:[2,183],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,183],99:[2,183]},{14:[2,50],22:[2,50],23:[2,50],33:[2,50],43:[2,50],44:[2,50],45:[2,50]},{1:[2,34],9:[2,34],11:[2,34],14:[2,34],15:[2,34],22:[2,34],23:[2,34],25:[2,34],27:[2,34],28:[2,34],29:[2,34],33:[2,34],35:[2,34],36:[2,34],37:[2,34],38:[2,34],43:[2,34],44:[2,34],45:[2,34],53:[2,34],54:[2,34],55:[2,34],56:[2,34],57:[2,34],58:[2,34],60:[2,34],61:[2,34],62:[2,34],63:[2,34],64:[2,34],65:[2,34],66:[2,34],67:[2,34],68:[2,34],69:[2,34],70:[2,34],71:[2,34],76:[2,34],79:[2,34],93:[2,34],99:[2,34],100:[2,34],101:[2,34],102:[2,34],105:[2,34]},{1:[2,160],14:[2,160],22:[2,160],23:[2,160],25:[2,160],27:[2,160],28:[2,160],29:[2,160],33:[2,160],36:[2,160],37:[2,160],38:[2,160],43:[2,160],44:[2,160],45:[2,160],54:[2,160],57:[2,160],58:[2,160],60:[2,160],61:[2,160],62:[2,160],63:[2,160],64:[2,160],65:[2,160],66:[2,160],67:[2,160],68:[2,160],69:[2,160],70:[2,160],76:[2,160],79:[2,160],99:[2,160],101:[2,160],105:[2,160]},{1:[2,124],14:[2,124],22:[2,124],23:[2,124],25:[2,124],27:[2,124],28:[2,124],29:[2,124],33:[2,124],36:[2,124],37:[2,124],38:[2,124],43:[2,124],44:[2,124],45:[2,124],54:[2,124],57:[2,124],58:[2,124],60:[2,124],61:[2,124],62:[2,124],63:[2,124],64:[2,124],65:[2,124],66:[2,124],67:[2,124],68:[2,124],69:[2,124],70:[2,124],76:[2,124],79:[2,124],99:[2,124],101:[2,124],105:[2,124]},{1:[2,31],9:[2,31],11:[2,31],14:[2,31],15:[2,31],22:[2,31],23:[2,31],25:[2,31],27:[2,31],28:[2,31],29:[2,31],33:[2,31],35:[2,31],36:[2,31],37:[2,31],38:[2,31],43:[2,31],44:[2,31],45:[2,31],53:[2,31],54:[2,31],55:[2,31],56:[2,31],57:[2,31],58:[2,31],60:[2,31],61:[2,31],62:[2,31],63:[2,31],64:[2,31],65:[2,31],66:[2,31],67:[2,31],68:[2,31],69:[2,31],70:[2,31],71:[2,31],76:[2,31],79:[2,31],93:[2,31],99:[2,31],100:[2,31],101:[2,31],102:[2,31],105:[2,31]},{1:[2,14],9:[2,14],11:[2,14],14:[2,14],15:[2,14],22:[2,14],23:[2,14],25:[2,14],27:[2,14],28:[2,14],29:[2,14],33:[2,14],35:[2,14],36:[2,14],37:[2,14],38:[2,14],43:[2,14],44:[2,14],45:[2,14],53:[2,14],54:[2,14],55:[2,14],56:[2,14],57:[2,14],58:[2,14],60:[2,14],61:[2,14],62:[2,14],63:[2,14],64:[2,14],65:[2,14],66:[2,14],67:[2,14],68:[2,14],69:[2,14],70:[2,14],71:[2,14],76:[2,14],79:[2,14],93:[2,14],99:[2,14],100:[2,14],101:[2,14],102:[2,14],105:[2,14]},{23:[2,141],25:[2,141],43:[2,141],44:[2,141]},{1:[2,22],9:[2,22],11:[2,22],14:[2,22],15:[2,22],22:[2,22],23:[2,22],25:[2,22],27:[2,22],28:[2,22],29:[2,22],33:[2,22],35:[2,22],36:[2,22],37:[2,22],38:[2,22],43:[2,22],44:[2,22],45:[2,22],53:[2,22],54:[2,22],55:[2,22],56:[2,22],57:[2,22],58:[2,22],60:[2,22],61:[2,22],62:[2,22],63:[2,22],64:[2,22],65:[2,22],66:[2,22],67:[2,22],68:[2,22],69:[2,22],70:[2,22],71:[2,22],76:[2,22],79:[2,22],93:[2,22],99:[2,22],100:[2,22],101:[2,22],102:[2,22],105:[2,22]},{1:[2,24],9:[2,24],11:[2,24],14:[2,24],15:[2,24],22:[2,24],23:[2,24],25:[2,24],27:[2,24],28:[2,24],29:[2,24],33:[2,24],35:[2,24],36:[2,24],37:[2,24],38:[2,24],43:[2,24],44:[2,24],45:[2,24],53:[2,24],54:[2,24],55:[2,24],56:[2,24],57:[2,24],58:[2,24],60:[2,24],61:[2,24],62:[2,24],63:[2,24],64:[2,24],65:[2,24],66:[2,24],67:[2,24],68:[2,24],69:[2,24],70:[2,24],71:[2,24],76:[2,24],79:[2,24],93:[2,24],99:[2,24],100:[2,24],101:[2,24],102:[2,24],105:[2,24]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:419,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:420,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:421,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:422,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{22:[2,170],23:[2,170],25:[2,170],36:[1,46],44:[2,170],45:[2,170],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,170],99:[2,170]},{22:[2,171],23:[2,171],25:[2,171],36:[1,46],44:[2,171],45:[2,171],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,171],99:[2,171],101:[1,423]},{22:[2,176],23:[2,176],25:[2,176],36:[1,46],44:[2,176],45:[2,176],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,176],99:[2,176]},{22:[2,164],23:[2,164],25:[2,164],36:[1,46],44:[2,164],45:[2,164],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,164],99:[2,164]},{22:[2,168],23:[2,168],25:[2,168],36:[1,46],44:[2,168],45:[2,168],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,168],99:[2,168]},{22:[2,175],23:[2,175],25:[2,175],36:[1,46],38:[1,424],44:[2,175],45:[2,175],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,175],99:[2,175]},{22:[2,177],23:[2,177],25:[2,177],36:[1,46],44:[2,177],45:[2,177],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,177],99:[2,177],101:[1,425]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:426,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:427,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{3:13,4:[1,29],5:30,6:31,7:[1,32],8:[1,33],16:[1,34],18:[1,35],19:428,20:[1,36],24:[1,37],26:[1,38],32:[1,65],34:[1,15],35:[1,14],40:[1,27],52:12,58:[1,16],59:[1,17],73:[1,18],74:[1,19],77:20,78:[1,21],79:[1,40],80:[1,22],81:[1,23],82:[1,24],87:[1,25],90:[1,26],94:[1,28],99:[1,39]},{22:[2,172],23:[2,172],25:[2,172],36:[1,46],44:[2,172],45:[2,172],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,172],99:[2,172]},{22:[2,179],23:[2,179],25:[2,179],36:[1,46],44:[2,179],45:[2,179],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,179],99:[2,179]},{22:[2,178],23:[2,178],25:[2,178],36:[1,46],44:[2,178],45:[2,178],54:[1,45],57:[1,47],58:[1,48],60:[1,49],61:[1,50],62:[1,51],63:[1,52],64:[1,53],65:[1,54],66:[1,55],67:[1,56],68:[1,57],69:[1,58],70:[1,59],76:[1,60],79:[2,178],99:[2,178]}],\ndefaultActions: {2:[2,194]},\nparseError: function parseError(str, hash) {\n    throw new Error(str);\n},\nparse: function parse(input) {\n    var self = this,\n        stack = [0],\n        vstack = [null], // semantic value stack\n        table = this.table,\n        yytext = '',\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n\n    //this.reductionCount = this.shiftCount = 0;\n\n    this.lexer.setInput(input);\n    this.lexer.yy = this.yy;\n    this.yy.lexer = this.lexer;\n\n    if (typeof this.yy.parseError === 'function')\n        this.parseError = this.yy.parseError;\n\n    function popStack (n) {\n        stack.length = stack.length - 2*n;\n        vstack.length = vstack.length - n;\n    }\n\n    function lex() {\n        var token;\n        token = self.lexer.lex() || 1; // $end = 1\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    };\n\n    var symbol, preErrorSymbol, state, action, a, r, yyval={},p,len,newState, expected;\n    while (true) {\n        // retreive state number from top of stack\n        state = stack[stack.length-1];\n\n        // use default actions if available\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol == null)\n                symbol = lex();\n            // read action for current state and first input\n            action = table[state] && table[state][symbol];\n        }\n\n        // handle parse error\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n\n            if (!recovering) {\n                // Report error\n                expected = [];\n                for (p in table[state]) if (this.terminals_[p] && p > 2) {\n                    expected.push(\"'\"+this.terminals_[p]+\"'\");\n                }\n                var errStr = '';\n                if (this.lexer.showPosition) {\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+this.lexer.showPosition()+'\\nExpecting '+expected.join(', ');\n                } else {\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\n                                  (symbol == 1 /*EOF*/ ? \"end of input\" :\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\n                }\n                this.parseError(errStr,\n                    {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, expected: expected});\n            }\n\n            // just recovered from another error\n            if (recovering == 3) {\n                if (symbol == EOF) {\n                    throw new Error(errStr || 'Parsing halted.');\n                }\n\n                // discard current lookahead and grab another\n                yyleng = this.lexer.yyleng;\n                yytext = this.lexer.yytext;\n                yylineno = this.lexer.yylineno;\n                symbol = lex();\n            }\n\n            // try to recover from error\n            while (1) {\n                // check for error recovery rule in this state\n                if ((TERROR.toString()) in table[state]) {\n                    break;\n                }\n                if (state == 0) {\n                    throw new Error(errStr || 'Parsing halted.');\n                }\n                popStack(1);\n                state = stack[stack.length-1];\n            }\n            \n            preErrorSymbol = symbol; // save the lookahead token\n            symbol = TERROR;         // insert generic error symbol as new lookahead\n            state = stack[stack.length-1];\n            action = table[state] && table[state][TERROR];\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n        }\n\n        // this shouldn't happen, unless resolve defaults are off\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n        }\n\n        switch (action[0]) {\n\n            case 1: // shift\n                //this.shiftCount++;\n\n                stack.push(symbol);\n                vstack.push(this.lexer.yytext);\n                stack.push(action[1]); // push state\n                symbol = null;\n                if (!preErrorSymbol) { // normal execution/no error\n                    yyleng = this.lexer.yyleng;\n                    yytext = this.lexer.yytext;\n                    yylineno = this.lexer.yylineno;\n                    if (recovering > 0)\n                        recovering--;\n                } else { // error just occurred, resume old lookahead f/ before error\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n                break;\n\n            case 2: // reduce\n                //this.reductionCount++;\n\n                len = this.productions_[action[1]][1];\n\n                // perform semantic action\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\n                r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack);\n\n                if (typeof r !== 'undefined') {\n                    return r;\n                }\n\n                // pop off stack\n                if (len) {\n                    stack = stack.slice(0,-1*len*2);\n                    vstack = vstack.slice(0, -1*len);\n                }\n\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                vstack.push(yyval.$);\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\n                stack.push(newState);\n                break;\n\n            case 3: // accept\n                return true;\n        }\n\n    }\n\n    return true;\n}};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/parser.js\n// module id = 4\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pdk/projects/WebWorkerPreProcessor/~/events/events.js\n// module id = 5\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pdk/projects/WebWorkerPreProcessor/~/path-browserify/index.js\n// module id = 7\n// module chunks = 0","var split$ = ''.split;\nmodule.exports = function(LiveScript){\n  var fs, path;\n  fs = require('fs');\n  path = require('path');\n  LiveScript.run = function(code, options, js){\n    var filename, main, dirname, ref$, e;\n    if (options != null) {\n      filename = options.filename;\n    }\n    main = require.main;\n    if (filename) {\n      dirname = path.dirname(fs.realpathSync(filename = process.argv[1] = path.resolve(filename)));\n    } else {\n      dirname = filename = '.';\n    }\n    main.paths = main.constructor._nodeModulePaths(dirname);\n    main.filename = filename;\n    js || (code = LiveScript.compile(code, (ref$ = {}, import$(ref$, options), ref$.bare = true, ref$)));\n    try {\n      return main._compile(code, filename);\n    } catch (e$) {\n      e = e$;\n      throw hackTrace(e, code, filename);\n    }\n  };\n  importAll$(LiveScript, require('events').EventEmitter.prototype);\n  ({})['.ls'] = function(module, filename){\n    var js, e;\n    js = LiveScript.compile(fs.readFileSync(filename, 'utf8'), {\n      filename: filename,\n      bare: true\n    });\n    try {\n      return module._compile(js, filename);\n    } catch (e$) {\n      e = e$;\n      throw hackTrace(e, js, filename);\n    }\n  };\n};\nfunction hackTrace(error, js, filename){\n  var stack, traces, i$, len$, i, trace, index, lno, end, length, lines, j$, ref$, n;\n  if (error != null) {\n    stack = error.stack;\n  }\n  if (!stack) {\n    return error;\n  }\n  traces = split$.call(stack, '\\n');\n  if (!(traces.length > 1)) {\n    return error;\n  }\n  for (i$ = 0, len$ = traces.length; i$ < len$; ++i$) {\n    i = i$;\n    trace = traces[i$];\n    if (0 > (index = trace.indexOf(\"(\" + filename + \":\"))) {\n      continue;\n    }\n    lno = (/:(\\d+):/.exec(trace.slice(index + filename.length)) || '')[1];\n    if (!(lno = +lno)) {\n      continue;\n    }\n    length = ('' + (end = lno + 4)).length;\n    lines || (lines = split$.call(js, '\\n'));\n    for (j$ = 1 > (ref$ = lno - 4) ? 1 : ref$; j$ <= end; ++j$) {\n      n = j$;\n      traces[i] += \"\\n\" + ('    ' + n).slice(-length) + \"\" + '|+'.charAt(n === lno) + \" \" + [lines[n - 1]];\n    }\n  }\n  return error.stack = traces.join('\\n'), error;\n}\nfunction import$(obj, src){\n  var own = {}.hasOwnProperty;\n  for (var key in src) if (own.call(src, key)) obj[key] = src[key];\n  return obj;\n}\nfunction importAll$(obj, src){\n  for (var key in src) obj[key] = src[key];\n  return obj;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/node.js\n// module id = 8\n// module chunks = 0","self.Livescript  = require('../lib/livescript');\n\nself.onmessage = function(ev) {\n  var data = JSON.parse(ev.data);\n  var opts = data.options || {};\n  var js = data.js;\n  var result;\n  var err\n\n    try {\n      result = self.Livescript.compile(js, opts);\n    } catch (e) {\n      err = e\n    }\n\n  self.postMessage(JSON.stringify({err: err, js: result}))\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/pdk/projects/WebWorkerPreProcessor/src/livescript.js\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}