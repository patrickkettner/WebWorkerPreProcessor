From d24b99918dcbdd110edbc8e93f9e61adc1c8adb8 Mon Sep 17 00:00:00 2001
From: Patrick Kettner <patrickkettner@gmail.com>
Date: Sun, 13 Nov 2016 13:28:58 -0800
Subject: [PATCH] .

---
 Gemfile               |  5 +++--
 Gemfile.lock          |  5 -----
 Rakefile              |  1 -
 lib/slim.rb           |  5 ++---
 lib/slim/compiler.rb  | 55 +++++++++++++++++++++++++++++++++++----------------
 lib/slim/optimizer.rb |  6 +++---
 slim.gemspec          |  3 ---
 7 files changed, 46 insertions(+), 34 deletions(-)

diff --git a/Gemfile b/Gemfile
index 55439b5..d3130e0 100644
--- a/Gemfile
+++ b/Gemfile
@@ -1,8 +1,9 @@
 source :rubygems
 
+gem 'OLD_RUBY_CGI_ESCAPE', :gist => '48cb6c904f776d169d8d7dcaa59832ba'
+
 gemspec
 
 group :development do
-  gem 'slim', :path => File.dirname(__FILE__)
   gem 'minitest' if RUBY_VERSION < '1.9'
-end
\ No newline at end of file
+end
diff --git a/Gemfile.lock b/Gemfile.lock
index 8ba8bed..7bb79a7 100644
--- a/Gemfile.lock
+++ b/Gemfile.lock
@@ -1,8 +1,5 @@
 PATH
   remote: .
-  specs:
-    slim (0.6.0)
-      escape_utils
 
 GEM
   remote: http://rubygems.org/
@@ -10,7 +7,6 @@ GEM
     abstract (1.0.0)
     erubis (2.6.6)
       abstract (>= 1.0.0)
-    escape_utils (0.1.8)
     gemcutter (0.6.1)
     git (1.2.5)
     haml (3.0.21)
@@ -28,7 +24,6 @@ PLATFORMS
 
 DEPENDENCIES
   erubis
-  escape_utils
   haml
   jeweler
   rake
diff --git a/Rakefile b/Rakefile
index 1a46c16..48764b6 100644
--- a/Rakefile
+++ b/Rakefile
@@ -15,7 +15,6 @@ begin
     gem.authors = ["Andrew Stone", "Fred Wu"]
     gem.email = ["andy@stonean.com", "ifredwu@gmail.com"]
     gem.files = ['*', 'lib/**/*', 'test/**/*']
-    gem.add_dependency 'escape_utils'
     gem.add_development_dependency 'rake'
     gem.add_development_dependency 'jeweler'
     gem.add_development_dependency 'haml'
diff --git a/lib/slim.rb b/lib/slim.rb
index 9350043..a2c97e1 100644
--- a/lib/slim.rb
+++ b/lib/slim.rb
@@ -2,8 +2,7 @@
 
 $:.unshift File.dirname(__FILE__)
 
-require 'bundler/setup'
-require 'escape_utils'
+require 'OLD_RUBY_CGI_ESCAPE'
 require 'slim/compiler'
 require 'slim/engine'
 
@@ -14,7 +13,7 @@ module Slim
     end
 
     def escape_html(html)
-      EscapeUtils.escape_html(html.to_s)
+      OLD_RUBY_CGI_ESCAPE.escape_html(html.to_s)
     end
   end
 end
diff --git a/lib/slim/compiler.rb b/lib/slim/compiler.rb
index 5773e3f..e19a231 100644
--- a/lib/slim/compiler.rb
+++ b/lib/slim/compiler.rb
@@ -28,8 +28,8 @@ module Slim
       text_indent = last_indent = -1
 
       @template.each_line do |line|
-        line.chomp!
-        line.rstrip!
+        line = line.chomp
+        line = line.rstrip
 
         if line.empty?
           @_buffer << '_buf << "<br/>";' if in_text
@@ -47,12 +47,12 @@ module Slim
         end
 
         marker         = $2
-        attrs          = $3
+        attrs          = $3 || ''
         shortcut_attrs = $4
         string         = $5
 
         # Remove the first space, but allow people to pad if they want.
-        string.slice!(0) if string =~ /^\s/
+        string = string.slice(1..-1) if string =~ /^\s/
 
         line_type = case marker
                     when '`', '|' then :text
@@ -64,13 +64,13 @@ module Slim
                     end
 
         unless attrs.empty?
-          normalize_attributes!(attrs) if shortcut_attrs
-          attrs.gsub!('"', '\"')
+          attrs = normalize_attributes(attrs) if shortcut_attrs
+          attrs = attrs.gsub('"', '\"')
           attrs = " #{attrs}" unless attrs =~ /^\s/
         end
 
         unless indent > last_indent
-          begin
+          loop do
             break if enders.empty?
             continue_closing = true
             ender, ender_indent = enders.pop
@@ -81,7 +81,12 @@ module Slim
               enders << [ender, ender_indent]
               continue_closing = false
             end
-          end while continue_closing == true
+            if continue_closing == true
+              next
+            else
+              break
+            end
+          end
         end
 
         last_indent = indent
@@ -136,26 +141,42 @@ module Slim
       if string =~ REGEX_LINE_CONTAINS_OUTPUT_CODE
         $1.strip
       else
-        parenthesesify_method!(string)  if string =~ REGEX_METHOD_HAS_NO_PARENTHESES
-        wraps_with_slim_escape!(string) unless string =~ REGEX_CODE_BLOCK_DETECTED
+        string = parenthesesify_method(string)  if string =~ REGEX_METHOD_HAS_NO_PARENTHESES
+        string = wraps_with_slim_escape(string) unless string =~ REGEX_CODE_BLOCK_DETECTED
         string.strip
       end
     end
 
     # adds a pair of parentheses to the method
-    def parenthesesify_method!(string)
-      string.sub!(' ', '(') && string.sub!(REGEX_CODE_CONTROL_WORD_DETECTED, '\1) \2 \3') || string << ')'
+    def parenthesesify_method(string)
+      oldStr = string
+      string = string.sub(' ', '(')
+
+      if string == oldStr
+        string += ')'
+      else
+        oldStr = string
+        string = string.sub(REGEX_CODE_CONTROL_WORD_DETECTED, '\1) \2 \3')
+
+        if string == oldStr
+          string += ')'
+        end
+      end
     end
 
     # escapes the string
-    def wraps_with_slim_escape!(string)
-      string.sub!(REGEX_LINE_CONTAINS_METHOD_DETECTED, 'Slim.escape_html(\1)')
+    def wraps_with_slim_escape(string)
+      string.sub(REGEX_LINE_CONTAINS_METHOD_DETECTED, 'Slim.escape_html(\1)')
     end
 
     # converts 'p#hello.world.mate' to 'p id="hello" class="world mate"'
-    def normalize_attributes!(string)
-      string.sub!(REGEX_FIND_HTML_ATTR_ID, ' id="\1"')
-      string.sub!(REGEX_FIND_HTML_ATTR_CLASSES, ' class="\1"') && string.gsub!('.', ' ')
+    def normalize_attributes(string)
+      string = string.sub(REGEX_FIND_HTML_ATTR_ID, ' id="\1"')
+
+      oldStr = string
+      string = string.sub(REGEX_FIND_HTML_ATTR_CLASSES, ' class="\1"')
+      string = string.gsub('.', ' ') if oldStr != string
+      return string
     end
   end
 end
diff --git a/lib/slim/optimizer.rb b/lib/slim/optimizer.rb
index 00cc05d..34d356c 100644
--- a/lib/slim/optimizer.rb
+++ b/lib/slim/optimizer.rb
@@ -56,10 +56,10 @@ module Slim
       @_buffer.each do |line|
         if line =~ /^_buf << "(.+)"/
           string ||= ""
-          string << $1
+	  string += $1
         else
-          optimized << "_buf << \"#{string}\";" if string
-          optimized << line
+	  optimized += "_buf << \"#{string}\";" if string
+	  optimized += line
           string = nil
         end
       end
diff --git a/slim.gemspec b/slim.gemspec
index 1bd93c8..827dd31 100644
--- a/slim.gemspec
+++ b/slim.gemspec
@@ -50,20 +50,17 @@ Gem::Specification.new do |s|
     s.specification_version = 3
 
     if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
-      s.add_runtime_dependency(%q<escape_utils>, [">= 0"])
       s.add_development_dependency(%q<rake>, [">= 0"])
       s.add_development_dependency(%q<jeweler>, [">= 0"])
       s.add_development_dependency(%q<haml>, [">= 0"])
       s.add_development_dependency(%q<erubis>, [">= 0"])
     else
-      s.add_dependency(%q<escape_utils>, [">= 0"])
       s.add_dependency(%q<rake>, [">= 0"])
       s.add_dependency(%q<jeweler>, [">= 0"])
       s.add_dependency(%q<haml>, [">= 0"])
       s.add_dependency(%q<erubis>, [">= 0"])
     end
   else
-    s.add_dependency(%q<escape_utils>, [">= 0"])
     s.add_dependency(%q<rake>, [">= 0"])
     s.add_dependency(%q<jeweler>, [">= 0"])
     s.add_dependency(%q<haml>, [">= 0"])
-- 
2.10.0

